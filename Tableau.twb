<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
    <color-palette custom='true' name='nThrive Berry Sequential Palette' type='ordered-sequential'>
      <color>#9e1f63</color>
      <color>#ae226d</color>
      <color>#cf2982</color>
      <color>#d7348c</color>
      <color>#de559e</color>
      <color>#e165a8</color>
    </color-palette>
    <color-palette custom='true' name='nThrive Primary Palette' type='regular'>
      <color>#ef4136</color>
      <color>#da1c5c</color>
      <color>#be1e2d</color>
      <color>#662d91</color>
      <color>#9e1f63</color>
      <color>#262262</color>
      <color>#003247</color>
      <color>#00515b</color>
      <color>#126f72</color>
      <color>#6d6e71</color>
    </color-palette>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.2'>
      <aliases enabled='yes' />
      <column caption='topn' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='8'>
        <calculation class='tableau' formula='8' />
        <range max='100' min='1' />
      </column>
      <column caption='TOPN_2' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='7'>
        <calculation class='tableau' formula='7' />
      </column>
      <column caption='Start_Date' datatype='date' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2016-07-01#'>
        <calculation class='tableau' formula='#2016-07-01#' />
      </column>
      <column caption='Profit_Ratio_goal' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='20.0'>
        <calculation class='tableau' formula='20.0' />
      </column>
      <column caption='IP/OP_Param' datatype='string' datatype-customized='true' name='[Parameter 5]' param-domain-type='any' role='measure' type='nominal' value='&quot;OP&quot;'>
        <calculation class='tableau' formula='&quot;OP&quot;' />
      </column>
      <column caption='Visit_Type' datatype='string' name='[Parameter 6]' param-domain-type='list' role='measure' type='nominal' value='&quot;OUTPATIENT&quot;'>
        <calculation class='tableau' formula='&quot;OUTPATIENT&quot;' />
        <members>
          <member value='&quot;INPATIENT&quot;' />
          <member value='&quot;OUTPATIENT&quot;' />
        </members>
      </column>
      <column caption='Choose Measures' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Discount&quot;'>
        <calculation class='tableau' formula='&quot;Discount&quot;' />
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Discount&quot;' />
          <member value='&quot;Profit&quot;' />
        </members>
      </column>
      <column caption='End_Date' datatype='date' name='[Start_Date (copy)]' param-domain-type='any' role='measure' type='quantitative' value='#2016-07-22#'>
        <calculation class='tableau' formula='#2016-07-22#' />
      </column>
    </datasource>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.0jk5z0m0bc0x711h3g66d0lrjyhx' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.040pcnb07h9ysk12kepyf1d05is6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/oindrilab/Desktop/GitHubDemo/Sample.twb Files/Data/nThrive/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='IN_Out_tab' name='excel-direct.1wafody19ifoeg14ky3pv1whkdtf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/oindrilab/Desktop/GitHubDemo/Sample.twb Files/Data/nThrive/IN_Out_tab.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[IP/OP_Type]' />
              <expression op='[Sheet1].[IP/OP_Type]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Orders].[Order ID]' />
                <expression op='[Returns].[Order ID]' />
              </expression>
            </clause>
            <relation connection='excel-direct.040pcnb07h9ysk12kepyf1d05is6' name='Orders' table='[Orders$]' type='table'>
              <columns gridOrigin='A1:V19989:no:A1:V19989:0' header='yes' outcome='6'>
                <column datatype='integer' name='Row ID' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
                <column datatype='date' name='Order Date' ordinal='2' />
                <column datatype='date' name='Ship Date' ordinal='3' />
                <column datatype='string' name='Ship Mode' ordinal='4' />
                <column datatype='string' name='Customer ID' ordinal='5' />
                <column datatype='string' name='Customer Name' ordinal='6' />
                <column datatype='string' name='Segment' ordinal='7' />
                <column datatype='string' name='Country' ordinal='8' />
                <column datatype='string' name='City' ordinal='9' />
                <column datatype='string' name='State' ordinal='10' />
                <column datatype='integer' name='Postal Code' ordinal='11' />
                <column datatype='string' name='Region' ordinal='12' />
                <column datatype='string' name='Product ID' ordinal='13' />
                <column datatype='string' name='Category' ordinal='14' />
                <column datatype='string' name='Sub-Category' ordinal='15' />
                <column datatype='string' name='Product Name' ordinal='16' />
                <column datatype='real' name='Sales' ordinal='17' />
                <column datatype='integer' name='Quantity' ordinal='18' />
                <column datatype='real' name='Discount' ordinal='19' />
                <column datatype='real' name='Profit' ordinal='20' />
                <column datatype='string' name='IP/OP_Type' ordinal='21' />
              </columns>
            </relation>
            <relation connection='excel-direct.040pcnb07h9ysk12kepyf1d05is6' name='Returns' table='[Returns$]' type='table'>
              <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                <column datatype='string' name='Returned' ordinal='0' />
                <column datatype='string' name='Order ID' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1wafody19ifoeg14ky3pv1whkdtf' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:A3:no:A1:A3:0' header='yes' outcome='6'>
              <column datatype='string' name='IP/OP_Type' ordinal='0' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[IP/OP_Type (Sheet1)]' value='[Sheet1].[IP/OP_Type]' />
          <map key='[IP/OP_Type]' value='[Orders].[IP/OP_Type]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IP/OP_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[IP/OP_Type]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>IP/OP_Type</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:V19989:no:A1:V19989:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IP/OP_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[IP/OP_Type (Sheet1)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>IP/OP_Type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:A3:no:A1:A3:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Inpatient_tab' datatype='string' name='[Calculation_546342990551388160]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Inpatient&quot;' />
      </column>
      <column caption='Sum_of_Sales' datatype='real' name='[Calculation_546342990551785473]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])' />
      </column>
      <column caption='Profit_Ratio' datatype='real' default-format='p0.00%' name='[Calculation_546342990552133634]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column caption='Sum_of_Discount' datatype='real' name='[Calculation_546342990552252419]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Discount])' />
      </column>
      <column caption='.' datatype='string' name='[Calculation_546342990615195652]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Here&apos;s your top line performance results&quot;' />
      </column>
      <column caption='Date_Custom_Logic' datatype='boolean' name='[Calculation_546342990638137349]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='date([Order Date])&gt;= [Parameters].[Parameter 3] and date([Order Date])&lt;=[Parameters].[Start_Date (copy)]' />
      </column>
      <column caption='St_date' datatype='date' name='[Calculation_546342990639030279]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
      </column>
      <column caption='Display_Profit_Ratio_goal' datatype='string' name='[Calculation_546342990860398602]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Discount]) &lt; [Parameters].[Parameter 4]&#13;&#10;THEN &quot;-&quot;+ STR( ROUND(([Parameters].[Parameter 4]- SUM([Discount])),2) )&#13;&#10;ELSE &quot;+&quot;+ STR( ROUND((SUM([Discount]) -[Parameters].[Parameter 4]),2) ) END' />
      </column>
      <column caption='Profit_Ratio_Color' datatype='real' name='[Calculation_546342990868971531]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([Discount])&lt; [Parameters].[Parameter 4]&#13;&#10;THEN ([Parameters].[Parameter 4]- SUM([Discount]))&#13;&#10;END' />
      </column>
      <column caption='IP_OP_Text_Calc' datatype='string' name='[Calculation_546342990903250960]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [IP/OP_Type]=&quot;IP&quot; THEN &quot;IP Only&quot;&#13;&#10;ELSEIF [IP/OP_Type]=&quot;OP&quot; THEN &quot;OP Only&quot;&#13;&#10;ELSE &quot;IP Only&quot; END' />
      </column>
      <column caption='IP/OP_Choose_old' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_546342990911643666]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 5]=&quot;IP&quot; THEN &quot;IP Only&quot;&#13;&#10;ELSEIF [Parameters].[Parameter 5]=&quot;OP&quot; THEN &quot;OP Only&quot;&#13;&#10;ELSE &quot;&quot; END' />
      </column>
      <column caption='Choose Visit Type' datatype='string' name='[Calculation_694117354003464193]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 6]= &quot;INPATIENT&quot; THEN &quot;IP Only&quot; &#13;&#10;ELSE &quot;OP Only&quot; END' />
      </column>
      <column caption='Choose_Measure_Calc' datatype='real' name='[Calculation_694117354032234499]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 7]=&quot;Sales&quot; THEN SUM([Sales])&#13;&#10;ELSEIF [Parameters].[Parameter 7]=&quot;Discount&quot; THEN SUM(Discount)&#13;&#10;ELSE [Calculation_546342990552133634]&#13;&#10;END' />
      </column>
      <column caption='Calculation1' datatype='string' name='[Calculation_822751416693846017]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;TEST&quot;' />
      </column>
      <column caption='Calculation2' datatype='string' name='[Calculation_822751416706744322]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;image&quot;' />
      </column>
      <column caption='replace Abc' datatype='string' name='[Calculation_822751416707125251]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <column caption='index_f' datatype='integer' name='[Calculation_822751417647521796]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Top10' datatype='string' name='[Calculation_822751417648001030]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_822751417647521796]&lt;= [Parameters].[Parameter 2] then &quot;TopN&quot; &#13;&#10;ELSE IF [Calculation_822751417647521796]&gt;= SIZE()- [Parameters].[Parameter 2] then &quot;bottomN&quot;&#13;&#10;else &quot;Others&quot;&#13;&#10;end&#13;&#10;end'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='City1' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Customer Name1' datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column caption='IP/OP Type (Sheet1)' datatype='string' name='[IP/OP_Type (Sheet1)]' role='dimension' type='nominal' />
      <column caption='IP/OP Type' datatype='string' name='[IP/OP_Type]' role='dimension' type='nominal' />
      <column caption='Outpatient_tab' datatype='string' name='[Inpatient_tab (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Outpatient&quot;' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Order ID (Returns)]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column caption='Ed_date' datatype='date' name='[St_date (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Parameters].[Start_Date (copy)]' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Calculation_546342990551388160]' derivation='None' name='[none:Calculation_546342990551388160:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_546342990860398602]' derivation='User' name='[usr:Calculation_546342990860398602:nk]' pivot='key' type='nominal' />
      <group caption='Action (.)' hidden='true' name='[Action (.)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_546342990615195652]' />
        </groupfilter>
      </group>
      <group caption='Action (Calculation1)' hidden='true' name='[Action (Calculation1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_822751416693846017]' />
        </groupfilter>
      </group>
      <group caption='Action (Calculation1,replace Abc)' hidden='true' name='[Action (Calculation1,replace Abc)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_822751416693846017]' />
          <groupfilter function='level-members' level='[Calculation_822751416707125251]' />
        </groupfilter>
      </group>
      <group caption='Action (Choose Visit Type,replace Abc)' hidden='true' name='[Action (Choose Visit Type,replace Abc)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_694117354003464193]' />
          <groupfilter function='level-members' level='[Calculation_822751416707125251]' />
        </groupfilter>
      </group>
      <group caption='Action (IP/OP Type)' hidden='true' name='[Action (IP/OP Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[IP/OP_Type]' />
        </groupfilter>
      </group>
      <group caption='Action (Inpatient_tab)' hidden='true' name='[Action (Inpatient_tab)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_546342990551388160]' />
        </groupfilter>
      </group>
      <group caption='Action (Inpatient_tab,IP/OP Type)' hidden='true' name='[Action (Inpatient_tab,IP/OP Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_546342990551388160]' />
          <groupfilter function='level-members' level='[IP/OP_Type]' />
        </groupfilter>
      </group>
      <group caption='Action (Order ID (Returns))' hidden='true' name='[Action (Order ID (Returns))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Order ID (Returns)]' />
        </groupfilter>
      </group>
      <group caption='Action (Outpatient_tab)' hidden='true' name='[Action (Outpatient_tab)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Inpatient_tab (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (replace Abc)' hidden='true' name='[Action (replace Abc)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_822751416707125251]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.271028' group-percentage='0.0537383' measure-ordering='alphabetic' measure-percentage='0.556075' parameter-percentage='0.119159' show-hidden-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='nThrive Primary Palette' type='palette'>
            <map to='#14377d'>
              <bucket>&quot;[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#26ab9a'>
              <bucket>&quot;[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[sum:Discount:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_546342990551388160:nk]' palette='nThrive Primary Palette' type='palette'>
            <map to='#ef4136'>
              <bucket>&quot;Inpatient&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_546342990860398602:nk]' palette='nThrive Berry Sequential Palette' type='palette'>
            <map to='#d32e87'>
              <bucket>&quot;hola&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='TOPN_2' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='7'>
          <calculation class='tableau' formula='7' />
        </column>
        <column caption='Start_Date' datatype='date' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2016-07-01#'>
          <calculation class='tableau' formula='#2016-07-01#' />
        </column>
        <column caption='Profit_Ratio_goal' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='20.0'>
          <calculation class='tableau' formula='20.0' />
        </column>
        <column caption='IP/OP_Param' datatype='string' datatype-customized='true' name='[Parameter 5]' param-domain-type='any' role='measure' type='nominal' value='&quot;OP&quot;'>
          <calculation class='tableau' formula='&quot;OP&quot;' />
        </column>
        <column caption='Visit_Type' datatype='string' name='[Parameter 6]' param-domain-type='list' role='measure' type='nominal' value='&quot;OUTPATIENT&quot;'>
          <calculation class='tableau' formula='&quot;OUTPATIENT&quot;' />
        </column>
        <column caption='Choose Measures' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Discount&quot;'>
          <calculation class='tableau' formula='&quot;Discount&quot;' />
        </column>
        <column caption='End_Date' datatype='date' name='[Start_Date (copy)]' param-domain-type='any' role='measure' type='quantitative' value='#2016-07-22#'>
          <calculation class='tableau' formula='#2016-07-22#' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter3' name='[Action21]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='New_Dash' type='sheet' worksheet='Q1_Perf' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Q1_Perf,Date_Range' />
        <param name='on-empty' value='none' />
        <param name='special-fields' value='all' />
        <param name='target' value='New_Dash' />
      </command>
    </action>
    <action caption='Sales' name='[Action22]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='New_Dash' type='sheet' worksheet='Sales_New' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Date_Range,Discount_New,Profit_Ratio_goal_New,Profit_Ratio_New,Q1_Perf,Query Response,Sales_New,LineChart,Date_Range' />
        <param name='on-empty' value='none' />
        <param name='special-fields' value='all' />
        <param name='target' value='New_Dash' />
      </command>
    </action>
    <action caption='Discount' name='[Action23]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='New_Dash' type='sheet' worksheet='Discount_New' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Date_Range,Discount_New,Profit_Ratio_goal_New,Profit_Ratio_New,Q1_Perf,Query Response,Sales_New,Sheet 31,Date_Range' />
        <param name='on-empty' value='none' />
        <param name='special-fields' value='all' />
        <param name='target' value='New_Dash' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Date_Range'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0jk5z0m0bc0x711h3g66d0lrjyhx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start_Date' datatype='date' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2016-07-01#'>
              <calculation class='tableau' formula='#2016-07-01#' />
            </column>
            <column caption='Visit_Type' datatype='string' name='[Parameter 6]' param-domain-type='list' role='measure' type='nominal' value='&quot;OUTPATIENT&quot;'>
              <calculation class='tableau' formula='&quot;OUTPATIENT&quot;' />
            </column>
            <column caption='End_Date' datatype='date' name='[Start_Date (copy)]' param-domain-type='any' role='measure' type='quantitative' value='#2016-07-22#'>
              <calculation class='tableau' formula='#2016-07-22#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jk5z0m0bc0x711h3g66d0lrjyhx'>
            <column caption='Inpatient_tab' datatype='string' name='[Calculation_546342990551388160]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Inpatient&quot;' />
            </column>
            <column caption='.' datatype='string' name='[Calculation_546342990615195652]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Here&apos;s your top line performance results&quot;' />
            </column>
            <column caption='Date_Custom_Logic' datatype='boolean' name='[Calculation_546342990638137349]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='date([Order Date])&gt;= [Parameters].[Parameter 3] and date([Order Date])&lt;=[Parameters].[Start_Date (copy)]' />
            </column>
            <column caption='St_date' datatype='date' name='[Calculation_546342990639030279]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
            </column>
            <column caption='Choose Visit Type' datatype='string' name='[Calculation_694117354003464193]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 6]= &quot;INPATIENT&quot; THEN &quot;IP Only&quot; &#13;&#10;ELSE &quot;OP Only&quot; END' />
            </column>
            <column caption='replace Abc' datatype='string' name='[Calculation_822751416707125251]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
            <column caption='IP/OP Type' datatype='string' name='[IP/OP_Type]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID (Returns)]' role='dimension' type='nominal' />
            <column caption='Ed_date' datatype='date' name='[St_date (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Parameters].[Start_Date (copy)]' />
            </column>
            <column-instance column='[Calculation_546342990638137349]' derivation='None' name='[none:Calculation_546342990638137349:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_546342990639030279]' derivation='Day-Trunc' name='[tdy:Calculation_546342990639030279:qk]' pivot='key' type='quantitative' />
            <column-instance column='[St_date (copy)]' derivation='Day-Trunc' name='[tdy:St_date (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]'>
            <groupfilter function='member' level='[Calculation_546342990615195652]' member='&quot;Here&apos;s your top line performance results&quot;' user:ui-action-filter='[Action21]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (Choose Visit Type,replace Abc)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_694117354003464193]' />
              <groupfilter function='level-members' level='[Calculation_822751416707125251]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (IP/OP Type)]'>
            <groupfilter function='member' level='[IP/OP_Type]' member='&quot;IP&quot;' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (Inpatient_tab,IP/OP Type)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_546342990551388160]' />
              <groupfilter function='level-members' level='[IP/OP_Type]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (Order ID (Returns))]'>
            <groupfilter function='level-members' level='[Order ID (Returns)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990638137349:nk]'>
            <groupfilter function='member' level='[none:Calculation_546342990638137349:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990638137349:nk]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (Order ID (Returns))]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (Inpatient_tab,IP/OP Type)]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (IP/OP Type)]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (Choose Visit Type,replace Abc)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[tdy:Calculation_546342990639030279:qk]' />
              <text column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[tdy:St_date (copy):qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='fbjil2cEuv' fontsize='12'>&lt;</run>
                <run bold='true' fontname='fbjil2cEuv' fontsize='12'>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[tdy:Calculation_546342990639030279:qk]</run>
                <run bold='true' fontname='fbjil2cEuv' fontsize='12'>&gt;</run>
                <run bold='true' fontname='fbjil2cEuv' fontsize='12'>  -  </run>
                <run bold='true' fontname='fbjil2cEuv' fontsize='12'>&lt;</run>
                <run bold='true' fontname='fbjil2cEuv' fontsize='12'>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[tdy:St_date (copy):qk]</run>
                <run bold='true' fontname='fbjil2cEuv' fontsize='12'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Discount_New'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0jk5z0m0bc0x711h3g66d0lrjyhx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start_Date' datatype='date' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2016-07-01#'>
              <calculation class='tableau' formula='#2016-07-01#' />
            </column>
            <column caption='Visit_Type' datatype='string' name='[Parameter 6]' param-domain-type='list' role='measure' type='nominal' value='&quot;OUTPATIENT&quot;'>
              <calculation class='tableau' formula='&quot;OUTPATIENT&quot;' />
            </column>
            <column caption='End_Date' datatype='date' name='[Start_Date (copy)]' param-domain-type='any' role='measure' type='quantitative' value='#2016-07-22#'>
              <calculation class='tableau' formula='#2016-07-22#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jk5z0m0bc0x711h3g66d0lrjyhx'>
            <column caption='.' datatype='string' name='[Calculation_546342990615195652]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Here&apos;s your top line performance results&quot;' />
            </column>
            <column caption='Date_Custom_Logic' datatype='boolean' name='[Calculation_546342990638137349]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='date([Order Date])&gt;= [Parameters].[Parameter 3] and date([Order Date])&lt;=[Parameters].[Start_Date (copy)]' />
            </column>
            <column caption='Choose Visit Type' datatype='string' name='[Calculation_694117354003464193]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 6]= &quot;INPATIENT&quot; THEN &quot;IP Only&quot; &#13;&#10;ELSE &quot;OP Only&quot; END' />
            </column>
            <column caption='replace Abc' datatype='string' name='[Calculation_822751416707125251]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column caption='IP/OP Type' datatype='string' name='[IP/OP_Type]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_546342990638137349]' derivation='None' name='[none:Calculation_546342990638137349:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_694117354003464193]' derivation='None' name='[none:Calculation_694117354003464193:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_822751416707125251]' derivation='None' name='[none:Calculation_822751416707125251:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]'>
            <groupfilter function='member' level='[Calculation_546342990615195652]' member='&quot;Here&apos;s your top line performance results&quot;' user:ui-action-filter='[Action21]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (IP/OP Type)]'>
            <groupfilter function='member' level='[IP/OP_Type]' member='&quot;IP&quot;' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990638137349:nk]'>
            <groupfilter function='member' level='[none:Calculation_546342990638137349:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990638137349:nk]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (IP/OP Type)]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='196' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#d4d4d4' />
            <format attr='band-color' scope='cols' value='#d4d4d4' />
            <format attr='background-color' scope='rows' value='#d4d4d4' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]' value='false' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#d4d4d4' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[sum:Discount:qk]' />
              <text column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_694117354003464193:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Segoe UI' fontsize='12'>Sum of Discount</run>
                <run fontname='Segoe UI' fontsize='18'>&#10;&lt;[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[sum:Discount:qk]&gt;</run>
                <run bold='true' fontcolor='#76b7b2' fontname='Segoe UI' fontsize='12'>&#10;&#10;&lt;[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_694117354003464193:nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='LineChart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0jk5z0m0bc0x711h3g66d0lrjyhx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Visit_Type' datatype='string' name='[Parameter 6]' param-domain-type='list' role='measure' type='nominal' value='&quot;OUTPATIENT&quot;'>
              <calculation class='tableau' formula='&quot;OUTPATIENT&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jk5z0m0bc0x711h3g66d0lrjyhx'>
            <column caption='.' datatype='string' name='[Calculation_546342990615195652]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Here&apos;s your top line performance results&quot;' />
            </column>
            <column caption='Choose Visit Type' datatype='string' name='[Calculation_694117354003464193]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 6]= &quot;INPATIENT&quot; THEN &quot;IP Only&quot; &#13;&#10;ELSE &quot;OP Only&quot; END' />
            </column>
            <column caption='replace Abc' datatype='string' name='[Calculation_822751416707125251]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column caption='IP/OP Type' datatype='string' name='[IP/OP_Type]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]'>
            <groupfilter function='member' level='[Calculation_546342990615195652]' member='&quot;Here&apos;s your top line performance results&quot;' user:ui-action-filter='[Action21]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (Choose Visit Type,replace Abc)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action23]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_694117354003464193]' member='&quot;OP Only&quot;' />
              <groupfilter function='member' level='[Calculation_822751416707125251]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (IP/OP Type)]'>
            <groupfilter function='member' level='[IP/OP_Type]' member='&quot;IP&quot;' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (IP/OP Type)]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (Choose Visit Type,replace Abc)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='196' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#d4d4d4' />
            <format attr='band-color' scope='cols' value='#d4d4d4' />
            <format attr='background-color' scope='rows' value='#d4d4d4' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#d4d4d4' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[sum:Discount:qk]</rows>
        <cols>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Profit_Ratio_New'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0jk5z0m0bc0x711h3g66d0lrjyhx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start_Date' datatype='date' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2016-07-01#'>
              <calculation class='tableau' formula='#2016-07-01#' />
            </column>
            <column caption='Visit_Type' datatype='string' name='[Parameter 6]' param-domain-type='list' role='measure' type='nominal' value='&quot;OUTPATIENT&quot;'>
              <calculation class='tableau' formula='&quot;OUTPATIENT&quot;' />
            </column>
            <column caption='End_Date' datatype='date' name='[Start_Date (copy)]' param-domain-type='any' role='measure' type='quantitative' value='#2016-07-22#'>
              <calculation class='tableau' formula='#2016-07-22#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jk5z0m0bc0x711h3g66d0lrjyhx'>
            <column caption='Profit_Ratio' datatype='real' default-format='p0.00%' name='[Calculation_546342990552133634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column caption='.' datatype='string' name='[Calculation_546342990615195652]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Here&apos;s your top line performance results&quot;' />
            </column>
            <column caption='Date_Custom_Logic' datatype='boolean' name='[Calculation_546342990638137349]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='date([Order Date])&gt;= [Parameters].[Parameter 3] and date([Order Date])&lt;=[Parameters].[Start_Date (copy)]' />
            </column>
            <column caption='Choose Visit Type' datatype='string' name='[Calculation_694117354003464193]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 6]= &quot;INPATIENT&quot; THEN &quot;IP Only&quot; &#13;&#10;ELSE &quot;OP Only&quot; END' />
            </column>
            <column caption='replace Abc' datatype='string' name='[Calculation_822751416707125251]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_546342990638137349]' derivation='None' name='[none:Calculation_546342990638137349:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_694117354003464193]' derivation='None' name='[none:Calculation_694117354003464193:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_822751416707125251]' derivation='None' name='[none:Calculation_822751416707125251:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_546342990552133634]' derivation='User' name='[usr:Calculation_546342990552133634:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]'>
            <groupfilter function='member' level='[Calculation_546342990615195652]' member='&quot;Here&apos;s your top line performance results&quot;' user:ui-action-filter='[Action21]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990638137349:nk]'>
            <groupfilter function='member' level='[none:Calculation_546342990638137349:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_694117354003464193:nk]'>
            <groupfilter function='member' level='[none:Calculation_694117354003464193:nk]' member='&quot;IP Only&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990638137349:nk]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_694117354003464193:nk]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#d4d4d4' />
            <format attr='band-color' scope='cols' value='#d4d4d4' />
            <format attr='background-color' scope='rows' value='#d4d4d4' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]' value='false' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#d4d4d4' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[usr:Calculation_546342990552133634:qk]' />
              <text column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_694117354003464193:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Segoe UI' fontsize='12'>Profit Ratio</run>
                <run fontname='Segoe UI' fontsize='18'>&#10;&lt;[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[usr:Calculation_546342990552133634:qk]&gt;</run>
                <run bold='true' fontcolor='#76b7b2' fontname='Segoe UI' fontsize='12'>&#10;&#10;&lt;[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_694117354003464193:nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Profit_Ratio_goal_New'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0jk5z0m0bc0x711h3g66d0lrjyhx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start_Date' datatype='date' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2016-07-01#'>
              <calculation class='tableau' formula='#2016-07-01#' />
            </column>
            <column caption='Profit_Ratio_goal' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='20.0'>
              <calculation class='tableau' formula='20.0' />
            </column>
            <column caption='Visit_Type' datatype='string' name='[Parameter 6]' param-domain-type='list' role='measure' type='nominal' value='&quot;OUTPATIENT&quot;'>
              <calculation class='tableau' formula='&quot;OUTPATIENT&quot;' />
            </column>
            <column caption='End_Date' datatype='date' name='[Start_Date (copy)]' param-domain-type='any' role='measure' type='quantitative' value='#2016-07-22#'>
              <calculation class='tableau' formula='#2016-07-22#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jk5z0m0bc0x711h3g66d0lrjyhx'>
            <column caption='.' datatype='string' name='[Calculation_546342990615195652]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Here&apos;s your top line performance results&quot;' />
            </column>
            <column caption='Date_Custom_Logic' datatype='boolean' name='[Calculation_546342990638137349]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='date([Order Date])&gt;= [Parameters].[Parameter 3] and date([Order Date])&lt;=[Parameters].[Start_Date (copy)]' />
            </column>
            <column caption='Display_Profit_Ratio_goal' datatype='string' name='[Calculation_546342990860398602]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Discount]) &lt; [Parameters].[Parameter 4]&#13;&#10;THEN &quot;-&quot;+ STR( ROUND(([Parameters].[Parameter 4]- SUM([Discount])),2) )&#13;&#10;ELSE &quot;+&quot;+ STR( ROUND((SUM([Discount]) -[Parameters].[Parameter 4]),2) ) END' />
            </column>
            <column caption='Profit_Ratio_Color' datatype='real' name='[Calculation_546342990868971531]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([Discount])&lt; [Parameters].[Parameter 4]&#13;&#10;THEN ([Parameters].[Parameter 4]- SUM([Discount]))&#13;&#10;END' />
            </column>
            <column caption='Choose Visit Type' datatype='string' name='[Calculation_694117354003464193]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 6]= &quot;INPATIENT&quot; THEN &quot;IP Only&quot; &#13;&#10;ELSE &quot;OP Only&quot; END' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Min' name='[min:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_546342990638137349]' derivation='None' name='[none:Calculation_546342990638137349:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_694117354003464193]' derivation='None' name='[none:Calculation_694117354003464193:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_546342990860398602]' derivation='User' name='[usr:Calculation_546342990860398602:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_546342990868971531]' derivation='User' name='[usr:Calculation_546342990868971531:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]'>
            <groupfilter function='member' level='[Calculation_546342990615195652]' member='&quot;Here&apos;s your top line performance results&quot;' user:ui-action-filter='[Action21]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990638137349:nk]'>
            <groupfilter function='member' level='[none:Calculation_546342990638137349:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_694117354003464193:nk]'>
            <groupfilter function='member' level='[none:Calculation_694117354003464193:nk]' member='&quot;OP Only&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990638137349:nk]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_694117354003464193:nk]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='155' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#d4d4d4' />
            <format attr='band-color' scope='cols' value='#d4d4d4' />
            <format attr='background-color' scope='rows' value='#d4d4d4' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Segoe UI' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[usr:Calculation_546342990868971531:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#d4d4d4' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[usr:Calculation_546342990868971531:qk]' />
              <size column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[min:Number of Records:qk]' />
              <text column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[usr:Calculation_546342990860398602:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff' fontname='fbjil2cEuv' fontsize='12' italic='true'>&lt;</run>
                <run bold='true' fontcolor='#ffffff' fontname='fbjil2cEuv' fontsize='12' italic='true'>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[usr:Calculation_546342990860398602:nk]</run>
                <run bold='true' fontcolor='#ffffff' fontname='fbjil2cEuv' fontsize='12' italic='true'>&gt;</run>
                <run bold='true' fontcolor='#ffffff' fontname='fbjil2cEuv' fontsize='12' italic='true'> vs goal</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Q1_Perf'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0jk5z0m0bc0x711h3g66d0lrjyhx' />
          </datasources>
          <datasource-dependencies datasource='federated.0jk5z0m0bc0x711h3g66d0lrjyhx'>
            <column caption='Inpatient_tab' datatype='string' name='[Calculation_546342990551388160]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Inpatient&quot;' />
            </column>
            <column caption='.' datatype='string' name='[Calculation_546342990615195652]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Here&apos;s your top line performance results&quot;' />
            </column>
            <column caption='IP/OP Type' datatype='string' name='[IP/OP_Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_546342990615195652]' derivation='None' name='[none:Calculation_546342990615195652:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (IP/OP Type)]'>
            <groupfilter function='member' level='[IP/OP_Type]' member='&quot;IP&quot;' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (Inpatient_tab,IP/OP Type)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_546342990551388160]' />
              <groupfilter function='level-members' level='[IP/OP_Type]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (IP/OP Type)]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (Inpatient_tab,IP/OP Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' value='12' />
            <format attr='font-family' value='Segoe UI' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990615195652:nk]' value='396' />
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='rows' value='12' />
            <format attr='font-family' scope='rows' value='Segoe UI' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <text column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990615195652:nk]' />
            </encodings>
            <customized-label>
              <formatted-text />
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value='My Image/my_pic.jpg' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990615195652:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Query Response'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0jk5z0m0bc0x711h3g66d0lrjyhx' />
          </datasources>
          <datasource-dependencies datasource='federated.0jk5z0m0bc0x711h3g66d0lrjyhx'>
            <column caption='Inpatient_tab' datatype='string' name='[Calculation_546342990551388160]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Inpatient&quot;' />
            </column>
            <column caption='.' datatype='string' name='[Calculation_546342990615195652]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Here&apos;s your top line performance results&quot;' />
            </column>
            <column caption='replace Abc' datatype='string' name='[Calculation_822751416707125251]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
            <column caption='IP/OP Type' datatype='string' name='[IP/OP_Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_546342990615195652]' derivation='None' name='[none:Calculation_546342990615195652:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_822751416707125251]' derivation='None' name='[none:Calculation_822751416707125251:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]'>
            <groupfilter function='member' level='[Calculation_546342990615195652]' member='&quot;Here&apos;s your top line performance results&quot;' user:ui-action-filter='[Action21]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (IP/OP Type)]'>
            <groupfilter function='member' level='[IP/OP_Type]' member='&quot;IP&quot;' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (Inpatient_tab,IP/OP Type)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_546342990551388160]' />
              <groupfilter function='level-members' level='[IP/OP_Type]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (IP/OP Type)]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (Inpatient_tab,IP/OP Type)]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#4e9e75' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990615195652:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff' fontname='Segoe UI' fontsize='12'>Query Response</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sales_New'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0jk5z0m0bc0x711h3g66d0lrjyhx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start_Date' datatype='date' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='#2016-07-01#'>
              <calculation class='tableau' formula='#2016-07-01#' />
            </column>
            <column caption='End_Date' datatype='date' name='[Start_Date (copy)]' param-domain-type='any' role='measure' type='quantitative' value='#2016-07-22#'>
              <calculation class='tableau' formula='#2016-07-22#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jk5z0m0bc0x711h3g66d0lrjyhx'>
            <column caption='Sum_of_Sales' datatype='real' name='[Calculation_546342990551785473]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Sales])' />
            </column>
            <column caption='.' datatype='string' name='[Calculation_546342990615195652]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Here&apos;s your top line performance results&quot;' />
            </column>
            <column caption='Date_Custom_Logic' datatype='boolean' name='[Calculation_546342990638137349]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='date([Order Date])&gt;= [Parameters].[Parameter 3] and date([Order Date])&lt;=[Parameters].[Start_Date (copy)]' />
            </column>
            <column caption='replace Abc' datatype='string' name='[Calculation_822751416707125251]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_546342990638137349]' derivation='None' name='[none:Calculation_546342990638137349:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_822751416707125251]' derivation='None' name='[none:Calculation_822751416707125251:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_546342990551785473]' derivation='User' name='[usr:Calculation_546342990551785473:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]'>
            <groupfilter function='member' level='[Calculation_546342990615195652]' member='&quot;Here&apos;s your top line performance results&quot;' user:ui-action-filter='[Action21]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990638137349:nk]'>
            <groupfilter function='member' level='[none:Calculation_546342990638137349:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]'>
            <groupfilter function='member' level='[none:Calculation_822751416707125251:nk]' member='&quot;&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990638137349:nk]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#d4d4d4' />
            <format attr='band-color' scope='cols' value='#d4d4d4' />
            <format attr='background-color' scope='rows' value='#d4d4d4' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]' value='false' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#d4d4d4' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[usr:Calculation_546342990551785473:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Segoe UI' fontsize='12'>Sum of Sales</run>
                <run fontname='Segoe UI' fontsize='18'>&#10;&lt;[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[usr:Calculation_546342990551785473:qk]&gt;</run>
                <run bold='true' fontcolor='#76b7b2' fontname='Segoe UI' fontsize='12'>&#10;&#10;IP/OP Combined</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 31'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0jk5z0m0bc0x711h3g66d0lrjyhx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Visit_Type' datatype='string' name='[Parameter 6]' param-domain-type='list' role='measure' type='nominal' value='&quot;OUTPATIENT&quot;'>
              <calculation class='tableau' formula='&quot;OUTPATIENT&quot;' />
            </column>
            <column caption='Choose Measures' datatype='string' name='[Parameter 7]' param-domain-type='list' role='measure' type='nominal' value='&quot;Discount&quot;'>
              <calculation class='tableau' formula='&quot;Discount&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jk5z0m0bc0x711h3g66d0lrjyhx'>
            <column caption='Profit_Ratio' datatype='real' default-format='p0.00%' name='[Calculation_546342990552133634]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column caption='.' datatype='string' name='[Calculation_546342990615195652]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Here&apos;s your top line performance results&quot;' />
            </column>
            <column caption='Choose Visit Type' datatype='string' name='[Calculation_694117354003464193]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 6]= &quot;INPATIENT&quot; THEN &quot;IP Only&quot; &#13;&#10;ELSE &quot;OP Only&quot; END' />
            </column>
            <column caption='Choose_Measure_Calc' datatype='real' name='[Calculation_694117354032234499]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 7]=&quot;Sales&quot; THEN SUM([Sales])&#13;&#10;ELSEIF [Parameters].[Parameter 7]=&quot;Discount&quot; THEN SUM(Discount)&#13;&#10;ELSE [Calculation_546342990552133634]&#13;&#10;END' />
            </column>
            <column caption='replace Abc' datatype='string' name='[Calculation_822751416707125251]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column caption='IP/OP Type' datatype='string' name='[IP/OP_Type]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_694117354032234499]' derivation='User' name='[usr:Calculation_694117354032234499:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]'>
            <groupfilter function='member' level='[Calculation_546342990615195652]' member='&quot;Here&apos;s your top line performance results&quot;' user:ui-action-filter='[Action21]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (Choose Visit Type,replace Abc)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_694117354003464193]' />
              <groupfilter function='level-members' level='[Calculation_822751416707125251]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (IP/OP Type)]'>
            <groupfilter function='member' level='[IP/OP_Type]' member='&quot;IP&quot;' user:ui-action-filter='[Action5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (replace Abc)]'>
            <groupfilter function='member' level='[Calculation_822751416707125251]' member='&quot;&quot;' user:ui-action-filter='[Action22]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (IP/OP Type)]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (.)]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (Choose Visit Type,replace Abc)]</column>
            <column>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[Action (replace Abc)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='196' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#d4d4d4' />
            <format attr='band-color' scope='cols' value='#d4d4d4' />
            <format attr='background-color' scope='rows' value='#d4d4d4' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#d4d4d4' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[usr:Calculation_694117354032234499:qk]</rows>
        <cols>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='New_Dash'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Open Sans,Helvetica Neue,Helvetica,Arial,sans-serif' fontsize='24'>Your Coding Health Information&#10;Management Performance&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-text'>
          <format attr='background-color' id='dash-text_11' value='#4e9e75' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='23' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='15250' id='22' type='title' w='100000' x='0' y='0' />
            <zone h='84250' id='21' type='layout-basic' w='100000' x='0' y='15250'>
              <zone h='77405' id='11' param='horz' type='layout-flow' w='100000' x='0' y='22095'>
                <zone h='77405' id='1' param='vert' type='layout-flow' w='100000' x='0' y='22095'>
                  <zone fixed-size='28' h='4500' id='3' is-fixed='true' name='Q1_Perf' show-title='false' w='100000' x='0' y='22095'>
                    <layout-cache fixed-size-w='457' type-h='fixed' type-w='fixed' />
                  </zone>
                  <zone fixed-size='155' h='19375' id='4' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='26595'>
                    <zone h='19375' id='5' name='Query Response' show-title='false' w='33200' x='0' y='26595'>
                      <layout-cache cell-count-h='1' cell-count-w='1' type-h='cell' type-w='cell' />
                    </zone>
                    <zone h='19375' id='6' name='Profit_Ratio_New' show-title='false' w='800' x='33200' y='26595'>
                      <layout-cache type-h='cell' type-w='cell' />
                    </zone>
                    <zone h='19375' id='7' name='Sales_New' show-title='false' w='32800' x='34000' y='26595'>
                      <layout-cache cell-count-h='1' cell-count-w='1' type-h='cell' type-w='cell' />
                    </zone>
                    <zone h='19375' id='8' name='Discount_New' show-title='false' w='32800' x='66800' y='26595'>
                      <layout-cache cell-count-h='1' cell-count-w='1' type-h='cell' type-w='cell' />
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='3370' id='13' param='horz' type='layout-flow' w='100000' x='0' y='18725'>
                <zone h='3370' id='12' mode='compact' param='[Parameters].[Parameter 6]' type='paramctrl' w='99600' x='0' y='18725' />
              </zone>
              <zone h='3475' id='19' mode='datetime' param='[Parameters].[Parameter 3]' type='paramctrl' w='51500' x='0' y='15250' />
              <zone h='3475' id='18' mode='datetime' param='[Parameters].[Start_Date (copy)]' type='paramctrl' w='48500' x='51500' y='15250' />
            </zone>
          </zone>
        </zone>
        <zone h='3500' id='14' name='Profit_Ratio_goal_New' show-title='false' w='13600' x='76600' y='36250' />
        <zone h='3125' id='24' name='Date_Range' show-title='false' w='35100' x='36400' y='10750' />
        <zone h='24625' id='25' name='Sheet 31' show-title='false' w='99100' x='600' y='49875'>
          <layout-cache minheight='198' minwidth='152' type-h='scalable' type-w='scalable' />
        </zone>
        <zone h='24625' id='26' type='empty' w='99100' x='600' y='49875' />
        <zone h='24625' id='27' name='LineChart' show-title='false' w='99100' x='600' y='49875' />
        <zone h='5500' id='28' mode='compact' param='[Parameters].[Parameter 7]' type='paramctrl' w='16000' x='59100' y='20125' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='New_Dash'>
      <viewpoints>
        <viewpoint name='Date_Range' />
        <viewpoint name='Discount_New'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields>
                      <field>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_694117354003464193:nk]</field>
                    <field>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]</field>
                    <field>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[sum:Discount:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;OP Only&quot;</value>
                  <value>&quot;&quot;</value>
                  <value>0.75</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='LineChart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit_Ratio_New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit_Ratio_goal_New'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q1_Perf'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields>
                      <field>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990615195652:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990615195652:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Here&apos;s your top line performance results&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Query Response'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales_New'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields>
                      <field>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]</field>
                    <field>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[usr:Calculation_546342990551785473:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;&quot;</value>
                  <value>9386.4639999999999</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 31'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='27' />
    </window>
    <window class='worksheet' maximized='true' name='LineChart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='Date_Range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='Discount_New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='Profit_Ratio_New'>
      <cards>
        <edge name='left'>
          <strip size='170'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='Profit_Ratio_goal_New'>
      <cards>
        <edge name='left'>
          <strip size='170'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 4]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[usr:Calculation_546342990868971531:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_546342990638137349:nk]</field>
            <field>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_694117354003464193:nk]</field>
            <field>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[none:Calculation_822751416707125251:nk]</field>
            <field>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[usr:Calculation_546342990860398602:nk]</field>
            <field>[federated.0jk5z0m0bc0x711h3g66d0lrjyhx].[usr:Calculation_546342990868971531:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Q1_Perf'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='Query Response'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='Sales_New'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='Sheet 31'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 7]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='LineChart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New_Dash' width='192'>
      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
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='My Image/my_pic.jpg'>
        iVBORw0KGgoAAAANSUhEUgAAAOkAAAEsCAYAAAAmZZRQAAAACXBIWXMAAA7EAAAOxAGVKw4b
        AAAgAElEQVR4nOy92Zdk13Xe+TvTnWLKoTKrCiiMpAguSu5Wq/vFWn7qh3a3lvtBy91/Qy//
        M+5X+cmmbUKg2GpRNAlZBmnJpECLEk0QEAmAmAtVQBVqyCmGO5ypH86JyAIalERKBKGq2Gvl
        qqyMjIibce939/Ttb4sYY2RrW9vap9bkL/sAtra1rf31tgXp1rb2KbctSLe2tU+5bUG6ta19
        ym0L0q1t7VNuW5BubWufctuCdGtb+5TbFqRb29qn3LYg3drWPuW2BenWtvYpty1It7a1T7lt
        Qbq1rX3KbQvSrW3tU25bkG4NgO0w1KfXtiDd2tY+5aZ/2QewtU/GPs5TCiE2PxdCfNKHtLW/
        pW1Bep9bjJEQAtY6VqsVIQTKsqCua6SUxBg3AN0C9dNpW5B+iuzjvNoaRBtPKAQifxuJxJi+
        nHP0fU83DATniQIKbei6ntOzU5aLBc6HBNKqZG93l6Iw1HVN0zSUheGj2c9Hj+OjP78X4Fv7
        xZnYyqd8euyjIP24UxMjxBgYBst8fsb1997n2rXrnJ7N6dqO9TOEEty5c4SPDm1KRs2E2WwP
        pTTgMUpQNxWEwN7eDlceeojZdEJZVkgpkEqild54259mW5D+4m0L0k+R/XWnwlrLcrnk+nvv
        88Ybb/D6G2/y+ptvcfPGBwghGAaL9ZaiKCgKAxKCF8x2xly8eAWlK6q6oqprprMRo2ZM3zok
        ka4948qVyzx06RLjpqGqK5q6RmlBUZRopairCqkUQgD3HOYWpL9424L0U2QfdyqWyyVvvPkm
        L7zwQ1566SVeeeVVTs/O6KzDFAUiRvCeEAJ1VRFCSF6wMFR1k35HGaLQ4B0CqCrDzu4BB5cf
        RkpFVSqCi6xWK05PjtCFxhjDznTKZDqlbVs++5kn+OyTT3L54iF7uzsouc1jPynbgvQTsr+u
        ivrRU+Cc49atW/zFX/wl//GPn+PlV19mvlgipcAojVQK7wJSCKqqIBAQgECyu7tH1TSczRd0
        XYuUktF4jPOOdrXE9Za6KZmfLdDGEEVMRSRlKItRylHHDVVVsb9/gHOwf2GXGCNVVXLxYI/P
        feZJvvDUZzHGfBIf3QNvW5B+QvbTWiD3Pta2LW+++RbPffM5vve9v+Dtq+/i+gEEgMB7R1XX
        GKVoRhPKskRJyZ27t/HeIqVBCEmI0A09o6YmOE/XdRRNgdIS17YQBc4HVqsFVVVR1zXj8QSt
        Cx6+8ig7e3uowtDZwBOPP8mli4d0vSUIwZOPPsytD97nf/4nv8ne7s4n+Ak+uLat7v6SLcaI
        tZa333mHP3r2Wf70T7/DrdsfMNiBEKCsDMEHptMp1nliBGcHzs5OWLUt3lqklIQYiYFc7Q2M
        JmPOjo8RApRS+KHH9R5vHSCJRLTSxBBpVy3Be6qq4u03X2d2tMv+pUsEIXn/xnusupYQJQeX
        DjhZtty6fczR8TG7O7NtuPsJ2Bakv0Tz3nPjxg2effZZ/vOf/AnvvnudsqxxztM0NePxFCnB
        W89qteJsvmTVdpBbH1VTY7TBe48IDqFSVacqGiIBUxtCiCwWC+IqIqXAWkcIYO2A1oqiqDBG
        5cLUCqUUq9WCa9eusr9/wM3r7zLb2aOoJqxWpyzOFpzcvct8uaLreorCIKXcgvUXaFuQfkJ2
        b2gbY+T27dt885vf4plnvszbb78FRMbjKURPXZc4Z1kuU1tltWwB0FXDhcOLBGdT4UaKBDYv
        UMogpaLrBrphYD4/oe97pFQoLQkByO9tTLE5Hu893juM0QghUErRti1CCI7ufECIkfnxXYqq
        QUvP2ekZd2+f8PbVz7I7m7G3M2M0arZA/QXaFqS/IPto83/9//l8zp//+ff4/d//f3jxh3/F
        YrmkKAqEACECMXq8jywXLUp1lFVJVZV4HzBK4l1P8IHlfAUElFZopVgsVnjvCTnklVJS1w1K
        KYSEdtWlgpP3OGcJIRCCBARaK7wPhFwlrnKVeBgGpFK0ywUQOfrgBpPBEX3gxo1b3Di8Rd+1
        7O3uUTc1Wkm01hvAbkH792PbwtEvyD76sVpref311/ny732F73znzzg5uYuzFqUMdV3hfaAo
        SiKCvh+QUlIWhhg91vaE4HDO4X0kRknXdYTg0VoSQszASF/ee5QS+fc91g6EEDfAkVIRY0CI
        BFJBIi9IKTHGICXnQJOCsiwx2uQebIWuRlx67AmefPxJHr58wCOXL3Kwv0dTjxhPGkZNYjFt
        vevfj21B+guy9ccaY+TWrVt881v/mW984z/wox//GKMMRaERArwPOBcQQhNiBCI7OzsURUnf
        dQxDS9ctscOAtR6R80rnEkCNVggkg7MZiIoQIs4P+JD6olIo6mpMjJFu6DbAUVLS1CNCiHR9
        mzywEhitkDJRBLUxNKMmPSYESmqEkvioEabiypWH+fznf4X9vR0uXbzEF576HPu7O+zuzKiq
        Ctj2Uv+utgXpL8hijAzDwPPPP8+//tdf5Cc/eZW+79BaU5YVSkoiga7vESjKskSI1CPVWuOc
        p207hqFnuVxQlmXKHYuCvd1d5vM5bbsieE9EZA8oKcuKxWJJ13eE4Igx4p0H5Cb0DSHknwmU
        VBsmkSkMZWHQWiOkQCmNtQ7vHTs7MxAQvKcoGyTJS0YhUFXJlSuPceWJJ7l0YZ9//D/9Bo88
        fJmDgwtopbah79/RtiD9e7J7yebee65dv843vvEsv/fl32Mxn6O0wFpLCCCEQqnkoZarOW7w
        VFWB1ooYI23bslquUpGn0EwmU6RUrJZL2q5jGDpWqxatDcYUFGWRwGU087MFfd/R9wPOOUJw
        ALmwJIHwoamXsqzRWiKVQhtN3/cpDNeapm6QUiXCcOYCKq0ZektV18QQMEXJbG+f/f2LqMJw
        8fAiBxd2+PX/7tf49f/+H3F4cAGtzksfW7D+7LYtHP0c9tPYQwlgHX/+59/j6d/9XV599Se0
        qwVKSULwhChACLTWxBA4Ob6LlIrRqKHrWqyzTMYTQojonAOm7xXz+ZxV2yKlpjAl1V6zCXtj
        SIT75XKJcwFiasUYo4kx5ZqJWC9wzhJjSEQIlTx21/UIqZF9uklEABdYzBcopaiqCqVyfhkj
        QsDZ6SlCQF179FxDjOzs7XH92jvAFd58+y2auiEEuHzpEJXD5+386s9uW5D+nPZxY1zz+YJv
        PPssX/nKV3j33asIwHuHlAXOJw8qdepJihi5ePEyRVEyWIs2hqHv6PuesjT4qPEBXIwE55FK
        UTUjiFAUYxbzM5x3WGcRwuC8x1qLGywheqQUFEWRQF2UlGVJ23YolYColKLrOhKdKRK9hehB
        CJSSIAVIRYwS60KqLhcaJSVFYRiGHu8DXdsT/AndqmO5OGO6s8PbrqftO5Qs6foeJQWXLh5u
        gflz2hakP4d93MV2enrKl7/8FX7///0qR3fvIPLQZ13XhChw/YDRCt8PjMYjHn3sMZbLFTdu
        3EAphZKglaRtWwY7MNvZZVTV9MPAqm3RZU17NscOA85ZhFQIIYkxEROGwRJiQJsErDXTCCTO
        eYZhjrUW730ePwMpIYTEUJJSoVTum4aI9w4QaFMk0AuBdZ6yClRFyXg8YbVcAYJ+GFIO20eO
        bveUZxXNZMzJYsE7776HkIKmrpnNpp/oebpfbAvSv6N577l+/Tr/5otf5I//+Dn6bkCIiHeC
        oirphgEXPFJCWWh2Lu4znky5desWt2/dpGkappMx1lr6YeDSw1eYz5f01rFcHeNDoO0HVssF
        pdZUVUUMgeXiBKlSm8Y7h1YCH0RurQiklAzDgHNhU6mVMuWWISSgrqvBMYYUjofksWMI9wyb
        e4IPSK0JwTGfd/SqRyoYj8cMg0VEyWDTjaAqS4IL3Hn/BrcvXEIohbj2HocHB/zq559KY3Rb
        j/oz2bZw9HPaWpbkhR/+kH/7b/8d3//+X9J3HT6Q+49pODvGSN93HFzYZzRqaNuO1WpAKklR
        aKSA09Mzdnb3KZqGo7tH2K6jyOHp4CwIiG7YeMb52RnRWwRQFCVSCXyIm36pUpKht1jrkFpi
        TIkderzvcc5n0K4JFiKH5LmYtO5txvR3rCddlFKE6FBS0fcDTVNTFAVKKYqiJEQY+h6ZB06r
        pmb/8DKfeeoprjz6GBd3Z/zv/9v/ysHBhW2192e0rSf9GW19T/M+8NJLL/Gvfud3eOXVVzFa
        s3QOY0oWyxVSSpwdiMEznoxTcUYoVm1HWdZUVY21A2fzU4qyoh96Fm2LUppYlHTWEkRkNp0w
        PzvDlAUIQbtsmYxHdF1LXVdMxmO6YcgaRi0+BEDgg0dIsNbR90MaZRMpF02sJI/3HkjEBZlJ
        DmTsRGJ2eIn0EEL6XaUUk0nquXrvqeqKEDxCSMqqwA0WYwqkEJzcvcUbr3qcd3TLh3j7nauM
        xyOapmbzRlv7G20L0p/DQgi88sqr/M7v/Ct+8pOfgIgcHR9TmJK+77FDn7oWBEZ1kzg9EuaL
        JQcHB0QCfe9wISBNgSfinaNpatq2S5XdsuD09ATbDyipSO4Uiqog+Mh4MkVrjfWpOmut23j3
        0hQMRLquTSGtBHkPNTExkhJhIbGCoDAGgQRBBnoCpBCpALWmGo5GI5RSSU+p6zg9OWE8ngDp
        OYkeqBnsgAiB5dkpd29+gLeCF//qR1w8vMAjj1xB662a7N/WtiD9GS2EwI9+9CP+5b/8v3n5
        xz9OXqK3jEZjQvD0fYeUMAwDo9EIoQRCSpx1NM2Io6O7SCUIXqCLmuAFVVXSti3Hx6cA1JUg
        +MCkbqiqkuVqhXOWvh8wpiDKsOHWtm3LcrnEGEPf93jnWC4WiZxg9Aa4a7C1bZvICjlvFULQ
        NGUmPYDPHnMtbrYOS7VOl8qaarj+3lrHMBwxmUyo6xrnHFVRMhrv4a1l1XXcunGD4OGFFwKX
        DvbZ29tjNpv9Es7eP0zbgvRnsBjh3Xev8e///Zd47Sev0rYrhsFSVCOc88znp0iRJk329vZp
        mobj4xOkDDjnmC9up7CwLNFFiYoeCKxWSwY7ZBpdxBQKowoIMNiBvu/w3jMej+n6ntOTU/q+
        JYQEnqqqGIYh56jplIaQwGmMQevUMmnb9Dpa6zyNkxhEZ2dLAIqiAGLOW9eeViGlys9L3k+I
        9PpFkds62jCfL7HWUTc1nbVEIZjNJpjSYG1ABM/t27d59bXX+dznPsd0Ot3mpX9L24L0b2lp
        vOwOzzzzZZ5//nnatsX5QFHUAJyenlAYldQTqpqyrLh9+w5CwGIx4H0a2NbaMFiHUIaT0xNC
        8CiVgOtcTwjg7YAgEr3AhTSdApHVakmIEaUkRVERItljGpq6pm1XWNszDBatNVoXWGvpujZX
        asPGI6bjicQQYdOuSbl2jAHvwYeIkIphcGgtiVEwDA4hIIZIiIl04ZwjCMFqlTy8zO9VdIbC
        GGIcOD09wvrAG6+/ybvXrvMrv/LZzXvCltzw19kWpH+D3Stt8swzv8s3vvF1zs7O8N4xHk8Z
        rOP46C5VnmSJMYWB779/fTObWZZNBkcEPG6I+BCIBLSSGKXo2zYBVipEZgjpoiDYBPqmqVms
        knZuNUphaggROwz07Yo2rJBSUJYVZVklYkMOTZ1zGSwxj6jlnFNKRK7qRpEmdVIeKjeEeu9s
        ViNMvVOlDGVR03UdPrp8A0l/s5SSrgOITIDFXGxC4N3dGW3b8sqPX+Y7hxf4H3/j19nf3//E
        z+c/RNtm73+DCSHw3vOd73yHr371qymnlJLJdEbXdyyXc8bjEX3X0rYrtDbM53O01vT9kEnq
        ljarx0cCykiUSgT2umwIPiKFwujc0qgqApJmtMN4vEOIsFgu0aZElzUye8N+tWK5OAMCWksK
        k4jybdvStu3GW2qlcC6BKYSQwFwYCqMZ1RV1VSJz20ggchtHobWgLNO43HpYPcZA3/cMNnF8
        ISJEpCjMJo/tuoHT0zNWbUvdNEynM5yzTCYp/P2z55/nu9/9Ln3fbz7jrf1024L0b7AYI2++
        +SZf/OIXuX37NjGSPNVgadueumro+4FhGBiPRyyXqWgzny9wPiKVSd5KpFaH95HgPUpKRtnL
        QHrMFAXVaEIQmqKqOT075uTsLqY06MIQYiQ4y/zkhOXZKaOm5uLhYVL7ExKIeGfzazdoqTBZ
        xyjm4pHKBIhCS4ySSVJl6BHB0RSaUanZn46pK01hJFWpaaoKkds6znmEjJseb4zkIpS4pxqs
        CcGzXC65dv0aR0dHDEOP9R1VmeiPX/rSl/jxj398HnZv2/U/1bbh7j32ceTvO3du8/TTT/Pa
        a6+xWCwoy3rjparS0LZL2nbJeDxmtVrRdW0KL4uSojBYO6SwUpCrrCm3IwqcTashlFTMdnaI
        UkKMKCUY+h6lBGWd9IqKsmS16hj6nkceewxnB06OjvDBMptO6YcObz0hRNqupe8HYgiEGIiC
        pMUrJbrQiBjSHKqQDG5AK8F0MkVIMEqhlGBWT+i9Y9VbjNE4D9b1eapGY7SCoBmcSwWoEFFa
        43OIPZ1O8T5CTJHIcrkEAt57dnYmXL36Dl/5yleYzWY8/vjjH8pPf9q5eFBtC9KPsfUF0vc9
        zz33Tb71rW9xdnZGjOlnIaTwsm2XLJcriqJgtVrS930myJcYY1itVgghsDFSlIZIIstHRQZ8
        yXg8ZjKZ0A8W7x2266jHI5rZjMH2tO2KGAN2sNR1zXRyQNeuOD66w4W9fZSSnJ3OWS5bCBEX
        PF3bJqUFJYg+omQCaGk0UUSCB6M0PniaQnNpL/Vc7x6f0ZSCaV3SVBWtsxyfdtyaL1FKYl2q
        ACshGFUFnUg92MG6VCjSBYUxtG3L7dt3mEymeO8pjGEyGSfBNJmYTLPZDt///vd59NFH+e3f
        /m0ODg7+f0DdWrItSP8ae/HFF3n66ae5du16LpqofGdPBZj5fJ7bHz3DMND3PVVVIaVksZij
        tUEm1Wq8c7R+hZIFikBV11w4uICzjmGwtF2HFDCbzVi0K6zzCCkZjSeM64ah7zg7O+HsqMcY
        xbgusf2K48WKwQ7EKDZeTOfZUCMFQlRY5xAxUBmFkooINFXJsm/ZHzcczMbcunvEpNJcnE6Y
        jA0ugI+W2aji1ukpBJEuFm+ZzsZoItV4RO88Z4sl1oc81G7Y399PnlNI6qZhuVwSI1Sloax0
        UtuvK46Ojnn22WfZ3d3lt37rt5hOEwF/6z0/bFuQ/hQ7OjrimWee4eWXX8lV27VGUOLk3r17
        siEQdF3qP6Y+Y1oNsRYXW1c9i6LEh4gqFDt7O2htWLUrRvWIsqqIIin/zecLXIxcvHQBKRXL
        5YIPbn4A0aG1oKlM8oqloc3C2UVZ0LeWOu9wAYnUAjsMDF1HqTVKRC7sTnFDj5SCxaqlMYqL
        OyOGbsX+dIxRisv7U5arFdEHZnXDyfwULZPXLUtDZQqmoxotIsu2oy4KfOXwIWJ9YLFccXoK
        hxcvslq1WB+Y7uxRaIkQEecCJ6cnGxbVzZs3+cY3nuXJJ5/k137t16jr1NJK1euwYTo9yMDd
        gvQeW6v6DcPA1772H3juuecYhh6tC2I8H1o+OzvLEieOruuyTKbZtFwgNVustRtZk4hktrtD
        URbY3iIRm7aHjymPTOQDjXSek6Mj7GAxWkN0lGVJDI660Cm8blu63jKZ7mIKw7hpEDKiEJyd
        zhlch9SS8XQM3jOuFZURYEq6waEk7E+nTCpFMBXjUc1q1RODJ3hPWVacdgN35wuMLilLgZKC
        g50pUkYKY2hKzdmyQ09GHJ/OmTQNWimWXcfJ8TGj8ZjReII2Rc6DdaJLysDdO7epqwoIXL16
        laeffoZ/8S/+Lx599FGqqtqQ8B9kcK7tgQbpx+3XjDHy2muv8fTTT3N0dJRD3MyJLSsWi8Xm
        OakyKzezo8Mw5IFqTfDn6nwxRkZNgyDiB5vlSmSaA40dOIUgIgA3DDg7EJxNWkhCoKqCsiyI
        TqGMZL5s6QfHweElfAgoKRn6jhAtQzvghgERHKUUNIWkagy7TUWIadrlxp0VFyY1n3n4At5Z
        unaFipGmMATn2d2d8MHRkrfev40SkqJUlEVBJLI/rYluoCxKilIzKhRHi45VqbHeMpuNCTFS
        1jXee7puxYXxhFXb0dQNIInRUZYVw2AZjRq8dzz/3ee58sgV/s//459z+fLlTVSyBekDDtKP
        U1c4PT3lD//wD3njjdcxmQDgvacsyw0IpRB0fRr7QqS5TJ8HqlXW84kxUpYlINJwdfS08zZL
        XRacnc0JzlKUJTGmFoYg5ZV1VWDKpLeb5IXEZmC7t2AHh0TQLRcMtic4x6iu0qqIQmKKGuF6
        dpqSnUmF1hHbOcpyxO3jEyaV4YmHDykKzQc30z4YrQV933Lx8iFvv3eLt2+c4CNMm4rpqEaK
        pBIxaQyF0jgfGY9L6lIjAGsDx4uW5WJBYUziMCuFUjV3j49pRg0+eLRUaFmyO5tx5+6dJOdC
        akF9/evf4MrDD/NP/+n/gjFmC9BsDzRIP2rWWr797W/zh3/4tSQWHZJYtMqi0muQWueSBIoQ
        SVA6JpqcUgrnLFWVNGfXIbH3gbPTE5TStCvo2pbBOSRp7lNICTFgtGRvb4/gPSJ6ulzZTa9l
        8N5CCCgZGdcF3lsmdUVdGELeG2qioxSBg91DJk2JktAtlowmhuOTJdNS8cTnrzC4wN27p+hS
        UTcFpioQZcWrb9/g3Q/uolTBw7sTZtMxtm0ZNQ0xBPbGNdWo5Oz4NFVtmwbvIy5IBhfofcAj
        QCZWVd92HFx8iK7vObl7l6osiT4wnU24ePEyt27dxOiCfhjwzvFHf/Qsly5d5Dd/8zc3s6wP
        Oli3IM3mveett97iS1/6XW7evJ10fog461BS0ndJjrPrus10yPrfGFJ+6bzbKCJobRBiAFJY
        rFTyqD5rEQkhcCEiZZpWKU2B0RJrW4qiwoewyXeFkighqYziwt6UnemU5XKFIFEDvXeUVYGW
        ikZ5dseGCzsTnAsMXaIbWmvZmdbsHeywXCyYL1qch8l0TEDw6tWbXL95TF0YHj3YZ1QVSCJG
        R6qDKUYrgnfUdYFRgslkTIiSuq7Y3fF0ITDvBhoM864l9BaEpO87Tk+OGY1G9M7SepdvbD5X
        zDXOe4pC07Ytb7zxBn/yJ3/Ck08+yaVLl9Bab3SZ4MEE7AMN0nOJkLTU6Gtf+xovvPADykIn
        TdyuJQSHQKNUlrvMzfsYyWp7Nr1WSFMl5EHpNSC997kifL7iIWbFvaTBW1CVJVoKpFJ0vaUf
        PM4mJlKV89LKKEZ1QYwhMZ+EosorKKKFxkgaoxmXJZNphe17hrajbEqKnYboU6RwdPuY3nqa
        0YjQDqx6xzvXbnK6bLm0O+XJKxfxXUfXrphNJzRNgS4UdVPTdh11qYnBUxqNswGBZzQq2Pc1
        bddz+8xhlELWmsGndRY+2KSYGMFZS5PzVWuHPF1jNpFHjPDffvACTzzxp/yzf5baMtvq7gNs
        a4A653jppZf4+te/zjAkPmkIYSPahZD4ELImkMQHC5ENUX1NrJfqXPk9hcshe2QymF2eelFp
        xCwTHPphoM1rDWOMFJnkoJWi0IJxVWWxakXX92gpMUKgvSd2S8ZGslcpihIUFr9yKK2YTsdE
        Ad7B2WKJd2k6ZjQZMXjPm+++T2ct01HDP/71zzOuC1anp+jGcPnwIkJKytrkYzIIIsoYhEhS
        oM7axEUWMK40uyONExp7d0mwLjGcVOIpD9aidcrFtTZUpaEoyjT7qlOeXZYFw9Dz/vs3ePFH
        L/P5zz/Fr/7qFzZFpAfVHmiQrm0+n/PMM89w9erVTUV2HZLGCP3QY60lRpE3jn2YZ5ryRp1H
        tNakfLuZVAEIHiKJ3E5MjJ/Vqk0jX6TnFDpVcevCoAVUhaLUiroqkAhEjEzqhkJGZHBcuTzl
        wt6MpqmJIlBWJSFKlNb0fcfRrVssTxb0vUMqzWqA+e1jTpdLhBI8/tBFLh7uJpXC5ZLlyZJL
        lw8oCrFRGyzKBueT9m/fHSOEQKu0ukLUNdZatDQYqWmKklmILMsBKaB3KeQYup6mGjNuxizn
        c9rVnOnkkL7vUFrRD31mNNk0u+o8P371ZX7yk19lb2+Xpmk2bKQH0aM+8CAdhoH/8l++zbe/
        /Z3kHZxFK5VBGfOY1jq3THOd68kYrXV+THykUJRC1XPyQ1rwKyRZ8CumtYRKZ2+pMEYzampK
        UyRSQlkgYkRGTxEdZanZGdXUSrI7q9m7sEvZ1OjMYBqCTcUb67h78zanJ8c02iC1oV92LOcr
        VquWqix54tGHOLgwRQvBarEkGsF0XDM63KMe1Wij0g6ZKOmHlkIprPcIJaibEdF3edZUQu9R
        ukD4QFX1TCWcNQPWe5q6wgbP4AXOR5pRjSlL7OA5OrqTC22O5TLpNW1uYFpy+8Z7vHPtOrPZ
        lIODA3Z3d39Zl8gv3R4YkH5c4SGEwI0bN/iDP/gD7tw5AgJGG5xNJAKbaXZJLkTgfdg87155
        kRhTGybtTbEZnHIz2pXe+Py9pdIoISgqQ1UUxBAojEEJsENHIaG3A5O6YG9csj9rKAtJU1fs
        X9ijritQBqENLgoGF1itLCcnp3TLRNGT0XBysmC+nNN3A01T8uilPaqyAO/wqyUozaXLlygr
        kxcK1xA9Uros7QmNHqfjdw5l6qwaKImAMpoYK5Qu8KsVZVEw2JbaKE5lpNCwM6m5fbIk+IGy
        LNJwOo7FYoExiWZZVSXeeaKPRJ36vt4FXnzxRWaTMZ+5fp3pdLpRlPjoebzf7YEB6UdtvXPl
        z/7sz/jLv/w+wSdt3LQAKUlbrvPStdTI2iuuQXp+wSQ92zUFUObnrgtE6x6o1pq6qFJFNliG
        vkPGgJYK6x2VqJjUJXuN4XCn4eLhDrv7+5jSILzL/diBNgQGJG034F2S5PTO064WiBhwg0cX
        hqbSzMYHGKNRRGJ0TCZTdi9cYDybIRLvKRXHhEAbjRABKVJvOAaIIuKGgQJBUwAA2wUAACAA
        SURBVEYqrbAUGCEJMeK0RopAWWqEEgRgNHjqlUHKyN5sxJ2jU7wbuHnzGirzmp3Lqy5kqgCb
        oqDvewqS6Jk2hg9uvMdPXnudxx9/lEceeZSdnSkPosrgAwPSdZHo3oruO++8w1e/+jWOj05A
        OJQusf2QVj4MaeFRap+ovKDXb5QN1tq6IHLu6bME5rn6+1rLVimVmviFZnDDZr+LjA7pPRem
        NVf2d7l8uMfezpidnYYLF/YwVcWy7bLKfJX6kb1jaXvmixXBg0dSNzWFkZiyIfZzTOGppw1I
        z2y2iy4KFNBMR0lXF4XIJWqhNEoVCJkkT2Lwif0UAlILhNR455EyYoxEaYX3qS0SiEQk1luU
        Bt3DWDZ4oO89x2crgtI8fPmQ6zfvsOo7RuMJZVnS9QsWiwU7sxl107BYLBiPmjTS5z1BSDq/
        xPuBo+Nj3n7nbX71C1/InOgHC6gPDEg/am3b8txzz/Hfvv+DRJdDkjGFz2QFa1M19F7JkTXI
        1+JcUopNDiql2qjDi7SbKa2QUCpzeR0xRAojmRSKg8mMw1nDpQtjdqYjprMJVd2gpOHtd24w
        uOTV5/OednWGsGlUbHd/ymQyZedgQlEaqqZA6zRCVlYlShtETEr1UYASEINHmhKZCzBSCqJ3
        eVlayi+DHfBDqmJLlTZ228EhpSFqiRrSykRdGKRUmXoocasBKZMnHZyl1IbDC1OcsywHh+ss
        47pkdXRC1yY6ZFmWdO2S45Njdnd32d3d5fT4BGUUZVHhXBpYeOvtd7jyxFN8IU8KPYhMpAcS
        pDFG3n77bf7Tf/omi+UZAjBFgc0ForUu0PpiuDfsTcrvWXBLyk3OufbO6xZMjPEc4D6zhpRk
        d1LzyIUpjx/ssL834sLeDsMQ6QbLnbunnMxvEl2SI5mOR+zujjh4/DIH+08xmV2gqGqK0mQJ
        lZilNTxCBGIUCGSaW/WR6CxKKzYgzMwoREQkuWxCjDmADEShURqUEEmDKQQgqwu6gFCSoizx
        keRtRfK4WkqEVEQFSItSoBXsTiqGo2W+2RnqKikJ7u7ucffu3axU4Tk9PWVvdzedA2cZhj61
        s7zj9OSEt958g9cefYyHL1+iqesHDqgPJEjbtuU73/42r7zyCiKC1gof0qKiGCGsd3Fmr5Py
        SzLH9sMr/NarJGCds2bvmXetROcxxrA7LnnkYI+nHn2YS5emjMYN8+WCV99+j5PjllJJDnen
        fPbhSzz08EPsXz6kGtWYwsB6ORNpM5uI5/tdlBLEqCAmkIkIwTtQHlXUaX7U+6TQENMgOCEN
        aQuliTEVxYgyLXuSIqsvpFaIUImyKITAaIlUOpWp8eACRE9hUjHJy4gpK2yIFNpTFZqmVhSt
        5GjZorSGwbJYLJPQmvabiGWwqf1SliqzuQbA4G3LnRtXefftt3jnkctUVc3e3u49s733vz1w
        II0xcuPGTf7jHz/HfD5H5jUKPvgkWh0ifvCbMbO1V12DIoWzalNE+uiFUhRJ1CtdZDCuC/Z3
        pvzGr1zh8sEMqSTHR6f88K9eZ7XqOdyd8k/+h6d46NHLzPYOaEZZaEzq7PFi3qCWgJrWRWQw
        ZnKFyLIraQdqSMT2rJsbQgApEVGihUjLmCDhMkSUVPgoiHiESpFCcAFcRIr03jEmyZeoI0KK
        vCxRIqUmT/AhkeikCoMuCsTQUxSGcV0wrS0n8yVD7ykLQ4gqjwDqTXtrtVqxu7vLfL7EGEVd
        Jy1how1Hd4547Y03ufjwFeqmAWB/fx8pH4wq7wMHUmstP/zhD3nl1VcBUFrhck4ZOefWru/U
        65UM6yHk80VH6RkJqHKjyhecx+MpteJwd8KvXDnk0sEOInrefe8m3aJl1FQ89cgFPvfZR7j4
        yBMUdUX0EW0UYS1aJiRK5uJOfre0DCkrQ4js0EIAKXDeUaiCKMlht0DIXJVWMoe1IWn1Zi2i
        9Y2GGMCHFAqrtPDJB4tCJl4yqRWltDlvKREQpKq2EBqXX99IgRVpIAAhqINjvBrYG1d0/RnO
        g4sOk2VWgA15JMmfmqxyEfP8aQrlCwNnZ3Nu3D6iKivG43FqRT0A9kCBNITA3bt3+eY3v8V8
        PkdIiffJk2qlabNSPPChu/yHq8IJqOnn4R7AiiSWrQXjpuaRw30+98ghy+WKm+/dZHdcsVsX
        XHziMo899gjj6YSmatB5I1ki4EsIEWQkxhTurTd0p2NIi5EQEpGmUxOwok/rJ2ICsVYKRCCE
        FAGESFqN6IdcxU17R1Nv0iIhhbkxoIQk6jQ+F0OiMTrnkYnzBPmdQeawOEIktXgALwLaSEww
        2FXamTqZjEAW9NZz63SJFBqpDJ3oSf1nv9kvMx6PCSHQtg49Scfadj0nR0cM/cDp2ZJl1zFf
        LCgK80CEvQ8ESO8VuH755Vf43ve+h7M2eRKSJ+zzGFqaYFmvaggfat2cgzXlnmsTWa6zNIrD
        3SmTpuTCrOH46JjoLY9f3Oehy3tcfPiQ0WgCQlCYOm8xEyghUVoilCEQkVEgY1q2HUiKe+td
        oTE4EDqFuQKQKU8UQhGESGFwCkaRQhMFOTR2CKGIwufQOOR8NH9GMhWdUiU7gS+GSAgCiQTp
        8/iZ30QUQoDIUi2pkpw9fQBlUgXYSINuFN5HDnanzFvLaefo+xWz2Q63bt1KSoOKnIumNMNa
        S98N1E3a4Hb16ls8/pnPs394wPHZgktdz3LZMp2OP7Hr6JdlDwRIgSwcdsZ3/+uf88EHtzb0
        PEG6sL33ebV98mjrPHTtWe8Nc2N0rLdsr6l/o7rgYHdGrSXjssAPHY8c7nB5b8zh4QE7e7uY
        0uB9pC4rlApEPMFHTFHlnDeiZdpstib1QyJWxOgRMSAyKGOMKKGznoNYH+EmZwSIQmSx60hA
        oKTBOYELadGxgLzQNyJiJGb9phhCUq6PKSeORIIIrJNZKRUxpK1wMeT3FwKESlXlEJAItNIY
        XTK4ASE8TVMwaipO2jlCKsqypCiKTYphtMap9Ra3VJW2tqOqKpztefEH/5XJ7ozReMrx2YKm
        KnG+Rt/n3vS+Bem9RZ317Of779/gr176EUM/nN+5Q9p94rzbDHivSQwJlDIDMrBWCjzPRQVS
        SGaTEXuzMbO6pFaB/WnJYxd3ODiYsLO7S90kEkFwjrKsEUqfX1SRTDeMCOEJ0eWKrgCSknxq
        nwRE1MlzCY2PHh8dApX8Zh4MkFKm6g0h5bNSp5wzJt3c6EMStUaCDJB3uqQBdpeALSXKKIJ1
        ENPMK8i8cU0RfeIrC6GIKhKtJ0aHFEkHyeWZUe8dSgu0yFVy56lLQ10VtENg1a4S06jrsT71
        QdO0TfpgpJRY6ykLUFIxPzvmhb/8LhcOL3E8P2Q2apjtzOA+lwJ9YBTsnXO88MILvPnm6wgR
        kTmvWwN4PZb2UdrfmkWU9m+uv3JVFcF00nAwmzCtCkZG8JmHL/C5Rw+4eHGHCwcXqOuGGAVK
        QGEKkMkTx9yH9DESMik/iogp0kiYFKCyt0+SLbn1ISQ+DMmDIz/EoIoxplZL3hV63scVqd0S
        FAJNElVLNxghJFLIDYsqkTAi0QdSjUiAFJsbEpuWTci6TOnmsr4RSCkQas20kplq6ZKgWprv
        oyoLBJG+66nrmrqpN1FL31vWscB6IklpnW6NMdIvl9x45yrL+YJl22Lth+sG96PdtyD9qH7R
        fD7nxRdf4vbtWylJE+fV3GEYNgWIBNIPi4itF+Sm/6fwTinJhb0Z+7MJkkCtI5995ICHDiZc
        uDBlMm0SKyk4CA4pFC4EvLUEOxB8qq4qKZEiIvFIkW4Ca/4vMSJigPwa54FtJlVkkkICUN43
        mp8TQ9iUeYgBud7cLXNrJWZPK0itnlzkFUS89RlwEqHOB67XzZfUs13n7S4VsmS6iUTSGJtU
        Bl0UVFWJlpKYZ2uryqT3JmAKDSL9u5ZK6bue1WqVPwORC0odwbukszSsuP7um8xPjjibLzib
        zze1g/s15L1vQbq2tWe8du0a77zzLt556qpOI2g2CVqvT26abFkPX4tNbzKsSQ4hQL4YZpMR
        dVkQrOXi3pjPP/EQ++OS0bhJLJ8Qid4RXJJfiaQVh0pJkJIoFVHoVBzNYSJr4GTgrb312rPm
        bS/5+AJCqNyHyUF4DJsbkFyTKUg/C8FmvrEEoRBSIY0GlQtfSiBF8p5SKYRSCK02NMLz1EGd
        3yhEpkLGTT8ICZs+MgiihLKpMFpRKJU8cUw3geA9WsmNQkUSfXN0XRq87/vkJbXSqVIXIsEH
        Bttx7b1rnJzN8W5dyGLrSf8h2r1V3R/84AVuvH8jk+Utzg9Ya++h98VcJFpXb9fhU9z8LKWk
        gboq0EhE8Hz+ics8eWmPCk8zrpMEZ27pCARVUaJVVgOUIhd+JFEkAEUiUkm8EMQ1MUGkAXEh
        U5gqlCagCKTijDYNUhXk2DnNfiKIPqRKMIkrLFUiCYoQWOfWIJGqRCi1qVCv2zrruVghRSJA
        qBS6RpEFR6UGdK6IB0QUiCgRBESOABARSUQJ0kKo7OFHowpTQJ09aVrotEKQxtLWKos+BFwI
        WOtQqkhgdgERU497GAZEhFs3P+Ds5Aw7uA1I71e7r0EKCWx37tzhRz9+mdt3bm/aB865D92B
        7+Xneu/uAeo5L1cISVkUSCGoSsE/+szDXJxWGBnZmY0JvktUQqnwMc2NCqWJIjOGUEhhIAhU
        FERnWS8cTER8g5C5CLIeGM+hrcyPCamS2oPIHjGDixg3OWaIYXP8IcWt+fdSTzWEVBSLISCj
        zFXb5AHzd8kbro9OSqKQqXIrQpplVQVIsfHUkZiquzH1TWMkbwkvkDnPnY4bJnXJqCkQ0WNt
        x9HRcQ5p7eb9h2FguVoxDB1CCPqhxQWPj5GuS4uslBTcunWDrms353Ab7v4DtWEYuHnzA159
        9VW8t6mQEQLWnpMWgCwYJj42ZEoFFYGSSa9nOq65crDLtNYYBdOmBCKjepxaO1l4S8lEnVsz
        kjak9AxAJc95say3ra39opSpQSRN6ovKlOdJoVGZHpjjVNb5KZyDQ4h1x0Sl0DrmarE2m9/b
        APyev1PKpL+0fixkJtL6rURuWyVPmyZfhJQIpQgElNYEkQtY60hE5KXIStJUBY3RycNz3otO
        Ia7YrPSwg01qh9amv4EcUkvJjfff5+zsJJFNPlJ7uB/tvm3BrN1Du2r5wQsvcO36eyilkCKy
        zAt913xca7Pi3z1T/+f0N0iJW8rV6rJgbzJifzqiKRXTSUNpNHVd5DDVo4sKrXXK59YN/nWl
        NoR8taewN4WfCrLg2aa1Q7ogYS25kryqVgZizAWa8znWNKBNCkFJbRgp4iaMFSqmjDEGjDD4
        YAlYiGl+VOaPTMTzi94LgTKAzXmf8Dn1jJsbysbbIggxDYqHuC7ipEel0kjlUSEyHin2pmOa
        6pSj+ZIQPF3XonT6LKwdcsU95fDpPEiscynxCJ62XXHn9l0uXV7Rrtr7Fpxru489aTpxi+WC
        V15+lfnZAqMVg/UbVlEiLQRCkChlWId5KUfNr5L/NdpQFoZpU7MzqtibVUxGFVVpMGWZdHdj
        QGmTFA6kyoy5AEoj1sQDadC6RGmN1CXSlLABVW5hCLEe88z9zzTrqmVaeQECvw5XZaYbxIgQ
        akPSkCpViEV+DKnQOheMlEKrEikLiCpXY1Vedpy+okhRgDIFyujUfhEq/S1S5xZQZtQjMgEj
        HVdq++aMW6TQWxUFujQIJZhNKnZGNYXOW9DbFXVZJlFwwUZnd7lcbkYGZW7FQFJebJdnnB7d
        xdr+QyC9HwF7H3tSSQieq1ev8vzz36YswIeBrltuwlrvPT4k+Uu/obqdE+khotQ61BU0VcFk
        VLE/HVFphdaSpKGd8tlRnZlDMYFOqKyA4B1Cq1w4Sg/L7GnXo18y541Kmk1LQyqDkmU63hwm
        x5DyOyMSV1hLkwpD5ny9RdoByibMTtloyhVN1i5CAQiiUoQwQIx412/6kTK3a2IAdJq6kS4k
        2UMVkx6RkAhVIHCEmD0dgUDAASJGfG63SBGJUqCUYDJu2N9pmBxVrI4W97RQ1pM7aRvAef3A
        U5YFfdtiCkMIgeXilA9uXGO1Wn3SF9YnbvctSGNMinyvvPIKJyfHGK04O1vhfdzMiXqfFhhp
        o+jaNpMD1iFmWsSUWEgCo9PKwemoZtJUNFWFNgbvPKqAsqhS019LfIRCK4KIiBBROhVUtDAo
        lTitUiQmkdiAM7c7pEDIIhVcpN5o+fpcuEoUvhSKmwxCgCCy1w3xPJTPIWcIiSC//r/UInt5
        h6DAOYl3fSoGibSZzQdLiB4RE7DyphpwIrVQhCb41JKSRKL3uWCUbiQSmWiGIXn+1P9Nn71U
        kdmoZmfccHza4jJ5vzCGoW83aXIIaXTQeY/2jmFIu1lD8PT9wDDYFPrf4z3vx+LRfQtSYLO2
        QCpF3zvs4HLXMeZCUSqw9G2/adQn0rncsHXWbYWi0BRaMS5LSpNW1nvrMGWZ9IryvhYli6Rk
        IAQ+D4ALbVIRSRfJO2q58aIyF5eQiigEUprUhpECmUfMpEiTLT6kvE/Je9YukAu9QLhHCG0D
        yEzzS5WinG8nZjyCTNSPEREMMSiicCm3FQUiOAQOFc8ryFnYARHEuiWL0ooYNVIK5IapJXMf
        NSv757E3KQVap/UU01FNXRnOlgOWiDZgijSqlsYEk4yNlJKuT31e5yJFkW4M8/kZZ2enbMrT
        3J9V3vsWpELAyckJV9+9SoyRtm9Ta0IKvFvLdK5H1c5pdeuL3GcPIEjr7CtjGFWGybikrEwe
        /1JJ78dI1EZBQYFQOJ/Gw1L+pnMOahAmkQTSDeKcwYRYV3ILglyTHhRKpr5nyAPa0sjUQw3r
        4lZEkkJ0kcqvySJALlKlT2T9w0SmJxETyH+f0AU+BGTUaTFUzo03v6sE0XuEzsUpF1BSI4Ij
        WIHSAh96ZFwzlJIHT941A0cK8ElA3JQFdWVoKsPZsksbAoawqbavZ2Kdc0k5w0XKyiR9pGIG
        SPq+Z7FcYq0j7x6+L+2+LRzFmLZ1Hx8dn/N0pczauKnIcq6pmzxMCnFTu2LN30UImrqkrgou
        7u2kfSyA0hpVlAlIqsgk9+QhHRGhFFqXaF1u2gQySb8n4GhDUIYgVdqIRsrxwpotFFMemaqm
        67ZNnnlZt05E2h+DkjlMzi2kEAnO588hexkl8yjZmjklkblY5mMgqog0Ch/SxIzzFusHnA8E
        ATZE0AVRG6JUeKXxShNEUpFwCJwQDBFQ5abwlPJMQxBJ7jPN4HqUjDSlpimLDyn/2+HD4m+J
        BWazt04FtX7oNufu7Gy+qc7fr9TA+9aTxhg5Pj5muVhg+yGR2bMsJ6x1i0LOT+M9jKOQ+4UJ
        EEYbRlWNFoHdaYXRCTT3eqgoBFIVRC1wQqJEauJbn2JDqSRaFgxIcFCkd8wsJLW5gGUYEMKC
        LYhSp+M1FSEmBo+SOld94yZfXgMhBJv6uDkqSDcmmds1idgulcpUwfV43oD3AescQmi6oWNY
        LUGFNBHjA0EIuj7N2pZViesdznqs63HWEgIEfJYq9ekx21KYAilSCJ8QKHE+CaSlCnAaeavK
        kv+PvTdptiw7z/Oe1e32nHP77CqryapCAWChIyn2BAnJomTaIsOyHXI4FB7YM/8Ij/wPHOGJ
        ZTtC4fBIYTtCNimaFimZogiDDQiCVSig2szK/van3d1qPPj2uQl4bgl1A2tQFZWVkXnvufvb
        a63ve9/nLfOcRdPKQEdpfPDYsfP7wvgA3svPTGbcA+3Q0/fdi/S5a1igcI2LdBgGHj9+zHq9
        uXK5bBsq2ze0uDReDNBh2/7fThQUzlmUgoOdmlldjFpTEctnyqAMBI3MPJPG6IwhJgkJjgGr
        NUU1wXmwvdwnswxcNhLuGdDEkcwgxaPNIBK8FLFGwNEir7NCuzcGZUX8EJOS7m7iil+kxjtp
        SCKyl6aVIaV4BVvzMUoy+PiQR2VZLeaEQaIdj4+fs1ltxheNZndvHx89/WbDECCkSD94uq6T
        orRWqP+9p+0Eg7K3v8t0Vo/z3DR+TRAxowTS4KzFWpmPZs6hjDSdtqOXbZyH1uZKJTYMUsR9
        19H3w1WRXtd1bYt0vV7zwQcfsGk2hBTx4cXxbyv/+2F20ZUXc2y2JKQJY7SiyByHOzs4J5pc
        bSwxjTPBpDAIFExnhvlqzeXFHKUMgw8ym7zcgHE0mw3GOfKixNqMvCrxQ6DIMooyZ+g2tMsN
        PgZmswmzSU1V5igUeVVRV1NiiLQxMN3bFTUQCZ1eGLi3+uAQ/I/sLj5FUi/Sur4f2KzXJALB
        Q9+3+ASL+QV93/H44WMuLi8IMVHUO+S2ZNWd0nYNhEjT9lwu1oQwkDlFbjVFUYw7vCFGz3yx
        4vj0kp29KS/ffQlr5Kga2FrpIsYp8sySZ/IiHEYqww8nrCsl5P+u6+TnYYxY64J0zR8+fMhq
        tbpCsFzHdS2LNKXEfD7nyZMnxNElcTWqiFuvpRnvn9vdNSHDwyTYSyQlrSpybuxNmdSFFLQW
        2k9EE5FjWBiF62fHlzz69DFFPaFte5wxzHZmnJ2dslo15GUJNqMbzsRtoxK9T+RFRVUVWJWY
        5DmX58+5eTTj4HCf3Glmkx3i+TF37t4jtAPOQFAJpxVFUeJjwrpRcD8ykmKSHBptjHRlQ6Bt
        NwTf40Oib1vOz8+J+RSnPEPwrDcbnj16hLE51XQX5zJW657jk1MyJ7v3YrHG9z1WCYFid1rR
        tA0q9JRFPuqWE1lWcXG55vhkzvnlinuv3qGeVCRlxkgPaY5luaEs86uQLOdkDro97m4besMw
        kOc5AN3QoU0iJs3z4xOWyyVd113bZPBrU6Q/LOmLMfLRRx9x//59hvGItAWLbd/G0n18MR7Y
        xhm+CFpK5GVBXRYc7M7I3DgrVEZIABF8TESd0/bw+PEjHj18zq0b+4S24+b+DtYq5mdn7FUF
        u7MZvfdkeU7fCdlPW83gch49PmW9allu1kycoq4cy3VL5i7Qu/s8O37K4d4hq9WC5BOFc8xX
        T7l1+zaDb0fTth6bVwYVJfQoKvk+Q5K0uBAGmnXL0PdEBT4GUrskqoSxjnazYbY7w2U5XTew
        WS44nGZ88Y0vYJ0hd4XscClSZpZqUqJtRtf2BO/pu5ZN07Lp1iiVWC43fPjxI45PF3x3+RGv
        vHyLw8N9ojIoHaXRpiHLLM5l9MPm6phrjBkLdiuq11fNJK0hRLnTz+dzzs7O6bqOuq6vXYHC
        NSrSH17DMPDxxx9zMZ/jx9iHFwloL0gGAvh6AeXSPzR/BDAqMa0KcqdxVkTikiqmRBSRaTZt
        4MGjZzx++oxX7xxy+2DCbGdKXeaU9Q71F97CVRXonLwoUE5BVCJHVOBDZL5ccXF6ytnxKQAX
        8wWZiRACOiWsyYgp0bY9RV7Q9QN1XY8BwZ44SvmcylDGjrK+8Y4aE37o8L4jBkl9G7p2tJsl
        rAmgFDEO7OzUhNATvWdW1lR3DqX7mmUyXkrCQYpeCkVrYOgwKqAtZK6mmkwY+hkhBnZ3BmY7
        O9x/8JiPPnnE0+MLXJYzqQti7NEarNEUmaPIHJuNGnfM7AplE8JAStC2IuU0xtA0cgedTGY0
        bcOmaQWEll4kCFynde2KdKv5/PTTh/ghiF8xJGkOIc0Xaw3eB5ROY+Zo/KE3cLqSpWV5RpFZ
        cifNImsdChEYJKUZguXhk2dcXM65e7jHqzf3ODjaYWe2S1VVZC4fhQkGbQKoDqMcxmU45/AE
        SmUoC8vhTsXrr92CEFlvOvquAwIkKTgF5E5jVMIUBpc7umZJZjNcXmwtL+PJQE4IKW2BYh6j
        EkPyuFwRggDDilyCmpQSs3mmcyAjz53gW4wh+HHOiRfWbxIBRjKirNqK/dXWIROiiDtCJCbL
        ZDLhzbdeJysyHj4+5vTsAmuPRq2FloaT0dR1zXLd0vUdWSaf/1Zj3Y8kx7btmEymgCQK+ODx
        IfD85PRaN4+uRZH+f4+6x8cn/OD99yVugdEFotQoxdvulpGYBF15pXONGqWkGZO5jNyJmshZ
        S5ZlaO2unBgxwZPHJyyWK27sz3jl1h5Ht/eZVBV5OcFkGdooQlJ0vic0PTFq+hBJNpNCiQkf
        Ayo5pru7XB4v6NoVtjBYI/EURWbJC5ESZi7HaIXJHMl3OGWxRTmKGOyVf1SPs1bvE2glY5I4
        kvB1wuQBjaIIOcok0tDR9i3Lrme92jAMHV3X07YDTS9d4G6IdEOkH2Rks30JpCAs4CKzWCMv
        wMwojNMY5654RjrPObx5g5PjSxbrlr3dKdpFMD1oS1EU0lgKwvkV9ZYkt1mXEUJHCFHGUeMo
        yXvPZrXm/PxcUtN/UqQ/vuuH7yEhBP78z/+Cp0+f4324snJZK4N76xxD31/pdlPSaMbCHcHR
        eZaT5zkhCkU9ghz3jPgo8Zr1umPedCRnWQXPg4sVHzw7Zrns6PpIN7T0Q48Plqg0hSsoypLL
        ywU206AsRltu3jzgi29+kd/6hW/wV+vv8slpoFt5FpenPH/+nBQGmuUlXdugUuRgf8rR0RE3
        9ireeP0eL9+xTKcTrBl1x1ocnyHJPDSRCCQCCpvlbPqOR8/nPHjynOfzjuV6Tep6Li5WrDcb
        Nm1H23a0bUPfNcSgSMqTawGkGZvQ49aZiBglKd4pqRGL6vFR0tqGICMhrRXaKGyekWcFRZFx
        sLtDVRYo5MW1XLXYrED3PV074KwTvlLwWONIuSS6ee+l8EcBVd91HD8/5uLi4qpBeN3updei
        SLdrC7d+8uQJm82GtusIMYyIzkheFCMyRcYxMmyPaGMJQxLBudIj91WQHsk4lkNifd7h+wUB
        S7l7h527P8uzD3+X0J3TbNbixlAJFQIqRiqnqa1DGUNVWPK4oSDjaKcgzy06c2Quw+ae5tkH
        /JP/4b+hbVqapqELA33XoJYrhi7gB89q07JuWx49fkZeP6Usa+wfv0fhqZ+4FQAAIABJREFU
        LPdef5m3v/YVDjK4vTsjqQJV5Ax+A2HDpvGcnl3wvXd/gMln6J2XWXSHRD3wg4++SVidMTQt
        tdNMS8eNvYJJvcPuzpT9nR2sUWSZIc8zSAE7BlIpZdDOYbRlGDzdpmO9WTO0LevVivlqzbxp
        uVh3LFuZaS6bgfNNw/nFnLqeUhQlTdPS9z27B7cxRuat69WC3GgBs6SE1hafBLUaM4dmS/1P
        nJ+dcnm5YLPZkGXZv92H8P+Hda2KFKDrOu4/eEA/qlX6vsePRzI/ojO1etE8slZa/gnZccuy
        RCnN4c0brBdr3nn/ATF6yqpmUpd8+ctfZe/GTYa04vTsEVnoqTLDzYMdJoVj4iLTKmNa10yr
        gno2Ia9r8WSSiEMQEJkSXybWjL8mD35VT8jKEhUHyXkBhhBouo7lcsnx6TlPTk745PEli7Zl
        svMq7ubb3O8z/sd/9I/4L/7+f8L33/uUv/UPf5v//h//L8yffEBCEbVls9zw5ue+zMX3/oTz
        k4fsF5rXb+9y9/XXODzYY293F2cV2Aybl3KcvLwg+h6lwGUFMUVCu0aJlpHgW7COosjZme2h
        7BG+20BK9F2HD4HVesN8uWG16TidN5yve45PzzmbLxi8x1iRVfYjJuXurZf58lu/wf/5+/87
        1ipRbUWFqSqaphmlgwrI8cPA8fNnPHnylMViwWw2veIlXZd1jb6b0eS9WnN6dkbXdvjBk2Ig
        +B7QhE7EBWGUA0ojSWalSkW0NuzuHvBTX/sldo/2+Cf/+L8jDK3ciZJitVyy2XyT9foP2JnM
        eP1gwiRX7NcFsypnZ1ZRFzllJUIF5cTpslmu6ZsNmggmw+YTrK1JJsfHAUXHejkndD1nz56Q
        FRmHN25Q5AXOiVBgf3eHePOIz73xConIpu355p+/w7/69oecPrnLx3/yAeum5X/+3d+hqnex
        3/pLzhdLlqteZIkZNH3Ld//6T5kVht/61a/w5mu3KYscl2XkpgSd6IYenxSr+YK+6zBKo11F
        VBpV1jglIxjfNmPn2BPihugFpF3PJlQ7JcbkGKfRVjOzU7K8YLcbmM16pucLJoXFOcPTk0vy
        rCBodTUGa4fE3/z3/jN+5/f/CGeXsntnmRyxE3RdQ0pOkth29okh8Oz5Mc+fH3Pr1q1xBq6u
        zdH3GhUpQOLJkyecnp7TddIpDH5A2DlhFHerKwG3MSKIF+lZTgJuHRzxN37pZ/nrD+9LkK7S
        oyBcYzPH5eWCGwf7HO7MuLVXcvvmHnuzciQnKDQKV2Tkdc1qtWJ9foIfPEo58jJH2YJnZ0uO
        z57S9J7JdMascswvTrl9eEBWTlmvFmw+fsDB0T47uzs0zYa63sFohTZCBpyVBX/3G79IH+B5
        slg3JYWEH1q0GXj/3e+i/SBhUErRtQ2vvv4Fjp895es/c4+vvP0mcejJTUZuS2JUbNayk52f
        nqO0oagm+KhYtz0Pj0/phoFbR/ssLk8xCqxOVC6nynP6GCB4Vk+esdvts3uwC0ryZEIEhZxW
        cqs43KupZwWbvuPZySmb9VLcQiAeWqW4eVCxs3vAfH5GXZa0fYdzpTTHYqDr5MrSdBtqL426
        +WLOMPhrd+S9FkW67ep5H/jggw+YX1zQtq2ML8bRBIgOd4vmSCld5ZDEGMmyjLqqeeulN8j1
        Pl24/yN/fgjSCa6risPdKS/d3GF/klHl48OlhDjvsgxtDZen58zPzlDGYFzBuvN87/v3+fT4
        grYXW1kCVFYSBs9yseJop2Z/VvPWGy+To7g8uWRoemZ7U5xekmf1CJCPOCzGwNtffJnTdy8o
        igKb1bRdR9u1tMMJR3t7rOZnMoZB88Zb95hfPOfu7SOCb1FDRDsxAbTdhjBETk+Pmcxm9EHz
        nR98wvsf3Wfd9LRRM5lM+da3v4tFZJbOWJSKvHL7Fq/d2qcuNYM2nJ1dYIxmtjMVZdUoPBBJ
        ccSaREbk5v6E+2XJYtOT59m460WaYeDR8yWHt29zevI9BuspipL1ak3f94Qgvt+UWsoyp2nW
        fPLRh3z+c2+y2aypqvJaOWKu1eS373tOTk9ZrVakOKaHjX7RH45w3xbl1v2yNRgrpbh5NGFv
        OheIF4wqI1G7BB/IneHVO0fs1QVOyWyQsY+KkkiFdr1iMZ8TombVa/76g4d8+91P2MSSr/z8
        10m2ZLFpWXc9bchw+58nFRPOm4ZPz+Y8XQSeHC8JAUKAzWrN0PWAF0/q9mTgIzomQu+pigl5
        7gj9hh0TePNmzUHlOawNadigtSJGS/QD2ipCaIhxoKinI6gb+hDIs5qnT57y4aePuOzgbLFh
        UJovfOkXcLOvshlqyCpcXvDmT32J3/z7/zENhu+8/5APHp2z9pouGk5OLrmcLxhCYAgysmHU
        R+fO4bRiZ1rhJDoOENG+Ho0Gi40HY9FjwlqKgdnOLtZYtpGTMUY2m4a+H+jbhqbtWK/XV9rs
        67KuxU66vX8MfS/SsRRGIgEC1xKLiJi+gaO9XWyWcTFfXoGxhaXj+XR+yeb+x1TWoJEHRylH
        CBFtFWWesTstSYMwdp02qCDhvEkbQgws5wsWy56TVceH959hteXtr3yZr//Gv8tlE/jWn34b
        ZzSHr9zha7/+tzlfTvnmP/uUe7ducnZxym//g3/Ap5/c5/5f/BkpNMxmRyOhQZOVNUOn8N0K
        YxTtpmVS15zMF1QZ/Pt/51f5tV/+OWZHh4Q4cHZ2wR/90bf4l9/6Li6riTqnaRtiJdBuZRxq
        8JTllNX6kqdPz8n3b/Ebv/UbfOe9j/j++x+SO8vNoz1efuOLPH76XaZTS/IdRVXwjb/1t3nj
        c1/gD//p/8EP3n+H52cLXjraY7/OccuWPWPRVixz1hiuMt90zkCgrDL0qhe8KQAGbUrun1yw
        mj+nbxpU7ggxYlJiZ2eG9z3eS/BzjImu7Xn65DHPjp/Rj8/AddlF4ZoU6Xb54Fksl0LKg5GU
        J3I/HzzWaHZnU/Z2Ziw269EpokYwdqTIIqfLU+698TWe/dWFuErUi6xSYxxF7jAqojMj9ARk
        t9YBusHj/cDZ+ZpPT5Z88uSEzBX8/Fe+xE//4q+wf+Mmm2fnchdOiU8++Ijvf/IUowry1HPy
        dMNkZ8re4T4HN29z69Ztzj56j8vT+7xx+BraKWymCCFDe4Fgr3xkEz2PPv4u/+k3vsYv/dJX
        2dnfRVvwXnEwrfnGr3yN8/kp7/zlvyazlsW8weyVZHlGXsiRtWt7Tj59xE9//W9y+NrnOLjz
        Ek/nPc7m+Lbhd3/nfyOmf4qz0G5qXGbZ293DasP+/j6/+Ms/T8bAO++/z4efPuW124doFSlz
        S1HkZKW54hYnpYkDuGjIiwrUUjreKHwI7M5KXr4VeP7sAd4Hqion+EiyHmMts9kubdvQtkIT
        bNqW4+NnfPzB92m+/ivXbl56LYp0e7QZhgFjLE0j81FrLTaIm4IRQbk/rTFEubMCfd+J2TsZ
        +qFj1VzyC1/4Kk/v/zHW5XR+PSp2BHbtjMEoMSdbY9BaSAihF2+lsY7VomGz2nBrd5eD6ZRs
        aFg8+YTJtOT20R0+/9bnee8v/oyZjay9R6s1dW4oVOTerSPe//NvCV2h3RBX5xTWMj9/ztGd
        u9jMEbwn9JqA4enZivPnK75894CvfP4upXNE3wNBFFepx6rA13/ubd77n36XaKes+4ix+RgS
        J+loJ08fkdFw8oM/w1WK9779r1gu5tw7yvGxZreLdEPPYnFJxsBOMeGte69x8uQBzz7+iOP7
        H2HbJfdu3mDerAnDgE6R5D06ZBK9UThCUvghoYdEbkdcjdFEImno2Z1M2Zyf8N/+1/8V68sT
        JAtWya4/gs0m0+kYNpyNCqWOED1ts+H8/OLaxU5ciyIFRpkaZFmOQhCdSqsfOfpYo7lxsMvJ
        +TnbZtK27T+Sofnoe5/wX/7D/5zZ7ICXXrrFejHncn4xEgIMjAS/TGucURgtkkKvwSlFllte
        vXvIzRv7dEPE+AS+5elH32d9eUbQJbcLiK/epo2BvK6ZTqaEruGgrqjKkuMfvEtVFtS5YVo6
        dDGjrie4vLwKjTIup+0TjVecHT/n5776GnkuSeGh71DREL0X2V6EUhteubHPe4/nPD9bYKrP
        o31P12zIiorbr9zj4OZLpOhZPfqA2ifKXPFrP/cz2GqP58dnrFZzlosLYgwEH/jo29/iY+9J
        Q8t0UnJ0uMNeVKybitkkY29WMKlz0Us7gzMGPx53nci4pHGXJNUt+oHHD++TZTkoGIZuDLJK
        1LnDZTk+Ji4uz2maDVud9TB4NpuW2WyXxXLxkyL9cVxb4vyLWIM0/pCHq9xLNYKn6yrj8gKm
        Zc66aUdeUCDhaduGTZNgDufPzpjWEw72d5lNah48egzKsG67EU0Srih+Knq0M2Qmp6hryipn
        uWzIhkRpJRZCW8ema7BZYKo9b7/1Jov1mmoy5ejOS2TOEruOMstJaaDrWnILZVmQTSbYPAPf
        QwBCwGU5l/MFF5cttBteOqowRhN60cISRDQf/QBRcleO9qe8/+SC5ydnLNvAXg5ts5I5aTUh
        qxQMA1nbycMfPLs3amxRc3B0QPKek6ePiH3D4nIJKKp8h6ZvsAaMc7RdT2YTe0dTdvd2hEwf
        A9aNhuyEYGaSwgfFatNgtKUscpoQKYqC6XRKSiPiJnqmZc6bd26w2TQ0KfHs2Wb82cqLNiVY
        rzes1xtSguVySV3XV8/GZ31diyLdLnUFtBIQ9BYypke+rbGWWZ3R1Rl1UXJ8PmebNiYZLYZt
        XouxmqKw7O1MsTZntZHuYdtmKAw201gr2aJohwGy3FJUU4boSdrQLhvKosBlBcMAR7MMk9do
        ZRlCYFpPqacTslIyPLGa0Ld07QaiGLE1XhCgSEraluCnXcmz84fM50vu7NfUk0yURSESfYf3
        ggQNfiD4gYRmb5ozLR3r9Zr5fMPB7R1UHOjWG1xlUTZjs1nhN2tSAmMdxuaEpiH2PVrB7nSG
        7wyTqsaHCMkztTW+60cUqCfLciY7U0yRk1krx14lk1IdElZFMgyb3tM2PVoZ9nZ22NuZslqu
        UVoz29lhuZqjtGNa1RxNKkKuWafEx0bRsk0XECbVMAx88vHHhBhYLBYcHR3hxtybz/q6RkUq
        HVq7TetOCWMcfd9KBzcGnFLcmNYUN/aIuuCT4wviqsX7YVSpaPT4Qy+Lknuv3OULb75KCLBu
        Gz78+IHoTGOkdjlGJWwmdHespqwcWVHiYsRaTZ7lhD6idKSeVORZiclLknFY76ljIsstLtcQ
        I0NoiKGF0JNlDgKYbSQhERUTyQdM4dB5zTs/eMDJ8+f8+k/docwLfIio1ENMguD0Cj+If9Rq
        hTWaw1nN+eNLvv/JI772pc/RLS7QKuG7DSZGynpClxTNek7sOpn/upzaOWKKmExDOWUYelIc
        iEk8n1Ybhq6jrjPySU1WlKJN1qKRjikRkmZICZ96jNMMvpWXSjTcuX0TFQMfN48wubxInLEs
        FivK3HLzcBfFQE/iT9+1qKYb/aOGECLWRp49e8JqvaJpWtqu/UmR/ritlIRIH43CpzB29178
        P60MzjoOb9wgixFdFhztTlmsZYaYZTJmEdGDcHbKqqQqxL3y5huv8uFHDxhiYuM9B6ZGq4Ay
        GqsVKRnJdlHgnCLPJrT5QPSJMHSoOIiqJiYUjkxrlE6o6BmaVgzaPo5/b0Xoe6zVuKKUHal0
        48tEg7U8PT/n/oPHTDPNjYMpUSUYOqK2GDPavILIIomR4CPOWvanJVWx5N33Pybov4vJajLj
        hYzQdWgVsbMJRVXSrpek6Im+QyWPImGNjLW0DYAhRLmPR+PIigxlNHlRjnkzBj2az9UYGRFS
        QCXBnS7Wp/Te43LD3ZducX52Kk2kEFks5uzszFiuVqw3DdW0pl+vMNGjYhTa8HiF2cZRLBZL
        Hj96yttf/BJd2zGpJy9GPp/hdS2KdLyJjg/4BJREEWyH2kpBURTs7c6YTaf0F2cc3brJK3cu
        eXhyLnYqY9A6ErzHKMitpSpKtJIowFs3jijrkrbtadqAM+LEsMZKhxeJJXTOYvMSUsLEJM0b
        Kjk+KoMe3xyy70vcvUgmhPgeRgRKnpfY3KCzbOQXBYyTwCZrc773g3fwPvDy/pTdSQWMadhK
        AF1aKbR1oMCHgFE9LnNkznC0O+GTp+e8+72P+NoXX0FHUUrZLCN5T9QaGx0uL0bF0ED0AzEM
        JIKEN43BVjbJ772CoI0xkVoLhziNpnA94k/QwixOJuNisaH3gd39CTePjmg3S2aTgqYbMGj6
        vqcsC5brliFpfFBkWfUi+W2UeW4VZG2z4dmzp7RdPzKrrse6FkUK0isCWFwuMGP03oumQaTv
        e/q+xemIyyyZtUxmE4o8Ex+mUiQd0CSc1UwnFU5LU0nrRF0V7O7u8OzJcy7nK4x7CTUiQo1V
        6Kgx2uLyQooqJYzMDITHM0oUjZEcli0A2ycJ8pVcGEPm3BgobDBW2LnC9wGdEhhN1JY/+dZ3
        SH7g5YMp9SSXma2RdDgpEkGqGAyZy3BZRlUWTHLHjd0Jj08u+ed/9E3efutlCmWIOkmYk82I
        SfhPxiayMifEQArywlEpjKiSkV88IlVIjCqtMayYF6Mx65wkpuGJyUphacPz42MUiqPDA8qy
        FLIikaFryTND1yfqqmaIiWaQz62upiOlPwn1ghfHJa01q9WK5WpFd41YvNejSEcAtPeBLLN4
        P4wjmXTF2fVxQCVF8InMGrSVwKSdSUU7LCjznK5rCUlT5I7cOUF7uEziHbRhf3eHx4+ecH45
        F0OyEqiZ0iJid1km+S4KtHuRmHaFMolJcleUEoK8tuiYMONYRxmFMfZKZO6UkAlCkrAjGStp
        vv/Jpzw/v+TGpOalGztkZXEV2SixEWZ0+chOI3BuTWYdu7tTQlxyZ3/Kxw8f89EnD/nSm7cx
        yN8bUkSnKPEWShNIaJWRkoIYSCESUrj6zLe7mDTUIyrF8WQTZTfbkviTQmMwaHTSBBSDDxhr
        uHXr5pXbx2jLdDLBqDVaJVxek1vLxeUFh7UBJZBzldIVXtV7+dyKImexWHA5n7NpmxFati3S
        z26xXo8ihRGm5XHGkWcFQ9YQk6HrejTgXEZUQtAz1tC3kYM8487uhL73YAzR91hkl81zi80M
        WZ6jlMGoxM3Dfd5RiVXT0rQts0qIdlopCEKQt9pgtGBajLESLTEqfLeZhHIklN0zRjnsGuPG
        42GU8c5IqSUO8ueP8Rf9EPnd3/9jMlPw+bv7HN2ckec5RiG7t1EoJBIxASppvNK4EepdVzlD
        3/Py0YwHzy/5nX/xr3n1tf8IU8iObZN0iLdxFvLHBiRpG3AKrRxpxJ+iwpU+mhHopkZQt+8H
        UoqMxGt5MSnQRM5WLafnS6x13Ll1k8HL5+esZPHokFHnlpASVVGyWc0JWU0KvSBtspxIIAUv
        pwj5giV2wnuG4frod69FkY5xtmitubw8J88tzUaTvDxo2hjKqmLwPQDaVVxcnDKrEkf7JZer
        NUlrslRKErcxVEWOdZmE7ipFip47t2/gXMbx6SWXi5696XR0wLw4Vm8xLNrIbi0IUYFpK623
        WvJxPosQDkaKr4ph1LCONEMDWhcoJZJHZS3f+s573H90zsHE8oXXX6KqSzGxRzBO9MZapaso
        CsFjyo6TZY4sc8x2akKKvHpzxscPnvIv/tW3+e3f+GXIE8kYrN6iUTJS8jDSEWIMDEOPUZpk
        BTWjkhw7dQKMJSLWv6HvscbIizGl8TMQiLe1gQ8//ITZ4ZsEPuXo6FAQqi7Djklye7MJezPH
        0A/4oLHW4tFsfKQbPDFFiXTU5orPG0JJP7RXkYzbp+Ozvq5FkW6PXV3vuRjTn7U2Y4CR2J8y
        Z8Uw3LTkeYY/O2HnYJejbo+z0wWzg0Muzy7pBs9qGMjyDGfGpGwkrXpnZ8r+/j7Pnj7jr77/
        AW+89osECU0Q4FdK47HV/Mh9KUZhzMJ4Y0vjLpkYRz4JFSXljZFNpG0mMYNahBrKaP7sL97h
        B/cXmHzCL395n6Ojmsxo6ZgqO17VZPcISdi70uNJWK1xVozWIVn2phV/4wt3uVx/zD//429T
        5Rm/+Xd+mSJzEISymJRCKzlJ6BRJSby5MUg0Bkqg4vrKTWRgewXIIMQgSJmYiClKMDGKB0+e
        8cGDc3Q+45VXblPXBTEIlmU6nXJ6fklZ1tw62scpT7PuSMqQOUvbeYzJsSkQQpQwJ70NYVYM
        bUscBumW/2Qn/fFZkgmU6NqWdtNDAmsluqDvJHi2mlb4puP56ZzPv/kKPgRm0x1uBs3maIGt
        ciZ6yrrznC5bqiIb4+nH7qTSZM5y7949Hj1+zDvvfsrf+7VfY39XoyJE1aPNSBPcxton2RXs
        lhQAL+5wgCaNxSvjhLEfIv8nmZHhA5eLNf/s//pD/vjP36XpNV98eZfPv/4SuZNmE3G8E6aI
        9xLiZDXj7ieqHUYNrFEybsq0UP1+9Sv3+INvv8//+nt/xIefPuU/+M1f4417r5AXOYREjF4S
        28ggabKyIIZEij0hehRjmrncPGHMMlUuQ8Ug46mYYIhcXpzzzvfe5/f+4P9hrQwR+A//3m/K
        cTgJa0objSVRZpYir7ixv8fy4ow+DDSdZ3G5wjoLIYihf7wbB++JPki0JQlttuFWfOY302tR
        pCnJWzsEz2x/l6KsGPycEAaMUUIKTIasmPDodMGXvlRgqhLrcvYPClJSdMsF7uiA8+WGIZ2T
        WSf8WKPF+pYUmTW88cptvre3y71XP8e3/vIRNmv5/L1Dbh/tYpHBv7GZDFWsE1afNgSFwLhJ
        Ek2vkuxWjNBtrUnaEkm0G8/F5ZLnxwvee/8J95/e59MnjwlN5O2XJvzm179ElRckE4kBohfV
        jg+94C7DQEgeZayokHyPih6TvDB40WAV2bTi7UnJ0f6UP/jTd/nTb/813/yLv+b2jX3eePUO
        r79ym1fv3ubo6Cb1tKLOMozRuKxEmQqXAn5MX0tpII0JbV3f07Ybjk/OOD4549PHz3jw8CkP
        Hp+yahq0VUzKmm/8+q/yyt07kLbZqgqjhTMchwEdE7v7h2RFwWI55/LRY04vV+i8op+vhAS5
        PS1pIW4En2i6QDZm01yHdS2KFCCGeAWgUsaRZyUKjctyUkjSQImJh8/POb+cS76ogZ3pLnk1
        YXF6LPPFao+zZaBLnrLISUpIdZIAkzjam/KzX/k8f/md97j/yQe03vN7/zJy88Y+e9OCV+4c
        cevWEft7+0ynObNJTV6UoMeiR+6LwyAEw85HTk5OmV8uWK1XRFNy88arfO3nv85bt2q+8/H/
        Tdu+z1sHFV/+4ut84c2XZbQDJDRtM0f5JKhRDc648Q6qMaNFL8XA9uaulSXFhMuFuVsXJUc3
        LJ978x5Pjy/43oef8vj4go8/ecR33n2P5IXjazPHzmRK5gxFkUvEqpKcGaU1Xd8x+Ejb9qza
        Db4fCCHRDZ4QA3VVcrA3463X73LvlZe488od9g6OMDqRlMFHCcjK85Iiz6mrEhUD2lrq6S5N
        31FmGXlRU9a7GHNOjMPITB4TzZXcxzMrVHx1dTz5bK9rU6QgYoblYk5uHbqqyIsclzmapqOo
        Kp4/e8Kq0Dx7dsZuZXCZo55WpHXL4cERyVjSsof4CWVhZGiexjwFZUghUOSWt996nb3McnZ6
        wmK5ZLFpaTYLHi4u+eD+Y2IasCanqnMyOzJ9lfhPM+cgjAG52pC5Ssh3KVIXGTdv3CJTmne+
        +YcYY3j7Zsu/8+VfYjatUaYndh1DsyElzRDEv2oTGJPLg2rAOAFVa+dIfsAq4QzprkVrRd8N
        uKzAjPfHsqzYrWpu3brBz/z0lwgJNq1nsWi4vFxwuVhxuWhYLuY0fct6vWEYenSSIoxBYXRi
        mjn2yoK82KcoSyEmliWTumTvYJeiLIUsYaxEZBjDEOQqEZKIMOqyYOUcZZGTFzl9JyA4oqdp
        G1xRM9nxuCwjRSEKAzLnJlFWJUVVyMz1GsxI4RoV6ZZef3F+xs7OlKbtKKuKzg+YrOXmzVti
        cRp6Pn74hK++dYNhaEkMuEwRgyEpS/JzchsYUkJpsMYRxsmf1tIYOjrc53CnQvWvwdCO3VfN
        0Pesm4blekPf9TT9MJICtrkrDmdLrMsoi5x6WjKtRsLgzpR6MmU23SGrKrI8lxkrXu5/vsW3
        PRIbqAjR44eONAxoa1FKMm+scRgruFBlreBJEqRosF2PUi0oNfKHIXeKlEqMsWRlhc1zkjJM
        djR3bmfSNMOhdIZKkagCwSeMVqOvdZDIDhXGGaZ4d1GaEOVz84OX/JyYRgp9pPM9CYUzlpCk
        UFGiDnNK7tfKJdbLM3Z29rFWU0wqFmeXrBfnWKMYtCbFbRdb/tqiqiirauxJ/KRIf6yWUprL
        yzlN2zCbVRJ3UNbk2rC4OGfoG9pmw3rR8bB0fPmtW3SbhmG1JgQgKSKKvltjDWhnr3Sh8qgF
        iUSMEZUU1hnKYkqW7eNsJqIHJ3EURhu0RaRzyshRWRmcy1BGjWMdK/dTux1NiFonIg9cjNu0
        baHSDyrRdwPDpsG3HX4I9H1Liok8L9BG/u3KGpPloiPWGu97lA5oGynyCucauq4jDD1hSMz7
        ZnTwFBRlIZ1SKzGKWucyfkyj5lYrLJbkEPmhVgQVcS4Sg5AVjB0Dg1FoHQjIEXzoBPmZlMxR
        rbJELZk0MUo8htEZ4NAuxw89ykeGdsXaKjHUozg9PaNrBCc6DF5iM7Soy/I8R6OpigI3Fuk1
        6BtdnyIdhp4HDx6wWq5IoUPbjFmVE5Lhg2fPmFQZfddCjJyeL+m6gPc9Q78RFU1IRHJ835FZ
        TTO29mUAr4mxJySwRkH0aKcY1YQym4QxgwXQCZTCGgtJgp60MeOIQrJRgatcGq2S3BeNdEJj
        2sLNICRP9AND29KtV6zmFyJYR6FVpHDiV7XW4YoSV07QVkT2W5EgHv/NAAAgAElEQVSezQRn
        akfTQD+09G0gyx2Dbzk7PYEURBSRFRidjU2v0VUUpVs62nTFpxpFBaWMBGIpjYxsMCQDMSkI
        kpEaUkIZ6ULD2BhKgRhFs6zGbiyqJcs0ZeFkXhoD3WqFceJ0MVaz2axYrtbkRc5yvR4/B4Mx
        DmsyiqKgrqrxuMtPurs/Tmu5XPLkyRNA0feBfj3HuIL5YoWKgdPj56ToMdqx3GxYrVvWFWRO
        E70nDIkhOtLoQc3yUQqHWNhQwhRiOwuNoyhfWRnmj80LGBst2mKVG4X75sXv0WOiuH4xdklI
        7qlSgFEQPEqNqdihY+ga+nXDZrEk+oB1VvSwKZFCGJVNDpvnZEWBsZUICxIoJyFH2g9YZ8jy
        irzsUWogyzVZsrTrNZcXF0ynu+T1DslGSEpGQEpJ8Y2gsBQTIPLEOLqGtHZAxIcBbWS+KiJB
        gwrpSqyRxibPaPq9eiFJrqrGOdm5nRHlkYqR0HW06zVeO1rvWa5XQCLPHM7IPVQ+U9nFj45u
        MJtNx6PuTxpHP1br8vKSk7MznNVcti3zxSUnxxdYl9F2G4gjXsWJsXnZdqw3UJYZkcTiYolW
        lmBzUIYiL/E+kSlN8J7MOYLvRiXLKEzYyvy0JmlxgbwoVkbHioxxlJJ54nbormC8T0lgbhyf
        ppTkwd8CRRkNze1yRYqRPC/HQrTCBfIBbQzGurHDq3BFScRSZAUhBEIYCH2P1hFrPFnusNaR
        ZRkqBYzOWa+XrJdrppsNJnPgrWh2tZPvLyUR+icpWBUDZnxx9WhSGNAmynEijRrlJPdh2X3l
        LppiJIU4zoO3n5MU2xax6sY0tcuLOXVlCUnRNh1dFxh6j9aOcjJBnZ7K+Eap0ahvOLxxg2ld
        izRTXQej2jUpUh88TdNw/PyEssjoho6maem6Dmszqrrk/PySUSjL0A8s1h3DLKNtI8Fomj5i
        dUfXNrRNhytLlBpIqcMoSSrLXAEqyr1xBGhpnTAqYnTCGOQIiICy1figaPWC/qDHoCMYj8rj
        DqVGpZGKSDzG+NhGpUlenCFZnpMVFa7IMcYwhIFovFi2RhjakHW42Au5PnRkeU2W17TNJSGF
        K0CbyTMyV4hsMmtBOVrfsJmfY5yhmDhClMAkq+3VsVeEU+MOpcCgsMlJkHGUc0FA7p963IG3
        88ztCyykCKM1L42KAz2yjX3biE7XKgqnUeWMrN4hsMEvWrz35JN6zCnVV+FbZVlQTybcuHGL
        qixGkuP1WJ/p72Qr+wo+cDlf8vTpQ4ahI0VP8J4UI8PQUtaF2KuA+XyOT5GziyU+aJ4+P6Nr
        A9ODXfJJjiLQNRsgEIcWkau/ePPHGCEGYoQQIpK/Oz60WpMwY7d19HQqLbvJKACXYh2PfaRR
        gD7a6pK8ALQRIXryHvqOEAa899g8FxbRZIqtJuT1FO0KApYhJsLgCX0vjRXf0myWzM+e0DcL
        AIauJ4QOpcC6jKzMyEtBnJSFle+r7xnWK2LfkEKL8hvS0OJ9L+ojuHpJicZYfoWxeROjEOsT
        gZAGsbSpBMHDICkASY0OmhjYXhrTCDL33mNUZG+nZO9wB2U1682ahMJ3HcOQKPKS27fukGJA
        a3VlLt8/2OfO3dtUVSXSxJ90d//try0UO6VE0zQopdmsO+aXS/kNSRGD5+LknJEShI+SGn2x
        2ND6gDMGrGValxgzQWlHNySMFv1rHDW1CfF/amVlE9CjCH50nKckaE+lt/fMeCUp3DZbtsfG
        0b817pWaFDwpxZH/+8KvGcKG6NtxnumwtkA7O0oOR+3q4MWFog19iOjBo4eGEPqrpkwMntR2
        dL5lSNIkM6aDmBOV7ERmm2saE8FLwWvjwUQRdCC5pEqL3FK0sWJHk0lLGufBIBHg46E9RUmT
        k6+EkKSpJA2fNMYaKkIE73uMgixzlGXGwc2brJuWxWJNUWR45GsxxtA07diIk+PuZDLl9u3b
        HB0cvOjs/sRP+uOxlFL0fc/FxSV5XtH7E2nNw9UxcOgH2RHHQkhJsWwa1n1HnVuUER+l045y
        UrGXIr3XrJpA6HoZaehRTD76Q2OM8unJjAKVovx9Vz4XWVcP7tVvfRFtsbWshTCMxZkIoSMh
        Hd3k+xGrIrpbQXRumylLHt9/wCcff0oT4NZLh7z+6uvjXayRYtayw8QQhCm8aXjnex9wOV9z
        Z2+Hr3zpLYrZhJQCPjKKAxQRxLs69JhowShS7MGMDa7xBRXG00lKwvhNoyE8Jv8jOuWY5M98
        ce8MAiaLaWzKyUstJUVe5uzu5VSVY7p7QDMcg9L4oacPkvptnaNpGmIE6yTjZ3dvn5fuvMrB
        /gFFkf8be/7+TazPbJFuH/SUEk3bEkKkrie0fYfRItiWyImID178psFfdQPboSWisTYbIVmJ
        rm/QJKoqR3dCdVfJk6IhJU+MImGTO1lCIU0NkxRJNk62TR/xg8YxTVx2HK3FJSK7jgj1Bt8J
        6iUOxOCJaUClSOi78b9ldy7KnK5Zy5hGa44fPSD1PXfvvsTz81PW55cc24dw5zYzvYdJCW0T
        PgT6oWe+aXjvu9+naVo+9/JdnEk8f/aYo3iIUob1ck2ROayzGCsoljh4VEjgEmDG0U/C2Izt
        pVR2/QGUZMCmEMYm0SgAUXq8X0uXOI0CB8necWybYxINAlWZUc1K+m7NMHiSUiijGHykj/Ji
        cM6xXK5QKpBGM8WNG7e4ffsOs9kMa+2PPCfAZ3pH/cwWKbx4U3etdF1jDGJrImKsAa2JIUCQ
        HBKZy8ndqesH+qCo93YluqF9RO8ds53bhKiwqqPvW0zoycsC6zR9HJlJo/Pj6gefAjEoog9o
        K0dVNXKWYvTjjFQRxjvUi501oFQkRo8fGtmtkqTDRT+Q4iCGc2spypIQA6uLM3wYyI3j1ufu
        YfKS14aWtm3xrcQ9rjYNRWFQvQDCm97z7MlT7r58m4ODQ8qqZr28ZHF5ycX5AqKnLAvKohZB
        gALfdfI1G4sZBrIiJ4x8YqOKcewiN3aF4IB9EL9uHO/aaTzSp5jGK4Ae/ykv0ZQ8SctpwiqD
        SQORgczt0TVrFJpqMmPTdOAMg9ekGNk0DX7wGCtSy3pScffll7h16wa7uztXHfTtM/JZX5/J
        Iv3hDz6lRNd1rDcNxljyLIexELfzsxg9eS2xgCBN3rYd8EljixmuLNDzhwRk8C5ig0jmDMkL
        EhNjMaZAjQdCwaGMGJFkQNlRJRTHI5/BkAjRc6VZA5QSIUJCjpQheIJv5F46ZtJs77jbY7XS
        MrPMixyjNc16TR82NBdnVLNdXJahrKUz9up+3nTDeARN9IPHKUU9nZIZi2/W+KbBKk1Z5tS1
        dIytNmC0WNCU4ERjHEg6kTZeAN1YVJA7sUJfSSZjECqhUtu+9PjziZEUhHgfg5cju/DScDbD
        Ky0mgCRxigp5mSljuVw8p6gPyIucpA2rZo2xDj8MVwR7awyvvvIq916/x507tynyHz3qfpZ3
        0O36TBbpdm1/AE3bMviBajohaTlmbh0x4tgP9H0HiPJGKSHRnc3nfHj/PnduHPDlV+6wShXL
        lSeXGQpFbglaEXxA9wFXG4gBP8r4UooQxyH/OOMLwWOCIRpJDwcvDZLxWCe4iBcZqcF3osGN
        Ee/7kaigr+aJ0pxKKCNAL62cJI8PE3zX4fsOFQaUUtg8QzmLQ7NpGkLXAooqL9ipb2LHjnLo
        PfW0ZGanGDuK8bUd+cSMzS+5S6cY5I46SOZKVkqn/P9l782eLLnuO7/P2TLzLrX0iu5GAySx
        UBySJjTiCmpEzYRDYz3YEVLE+MH/oMPzphhPxHjCoZmhLI9WEiQEYmmgge5G71t11d1yOef8
        /PA7easBgrIpyxaqiRPR0Y1C1a2qm/nL3/ZdrA9Yr015LkMzRPWYVI/MkmNBcsWMpAhZp7sG
        zXQxS+lVtVeIsadyls3mCYYNcbmmI9LUp2i7joODI/b29kgi9L2qMezv7/L85Rd4/tJlLl26
        9ExNdcdzIoP06YsgImzWa7qu5f69uxwePtka0nrv6fu+WE3E7deKZFKCGzdu882vvUAlS57c
        PeCwNTS7F0kZgjXUkwlt8nRJSH1LPVEdV2NHBQVIIvis64NEwroRmZMRExEyUaKqEhiDOKuB
        LWgvOgykofSjOWMsx2uMpKUiRjDeY4PF2IzNHl9PqWYDkhL9ZkM1mZJKLz76eTbeqf5tUJif
        tRYkEetKS219RwpyijINFyyWbJ/qo1FFwNhHjOmwOemNYwDrtigtKbKBxhhSCVjJGdFI3F63
        JBR9J1E8tHWYPFBVAdOu6VdPuHhpzvooc3h4xPz8aTZt5ODxgohjvVlhjKGpa1555RVefPFL
        fOXLX2FnvvPMBSic0CD9rNO1HXs7ezT1lGhV4Lrv41YtUI2bXOkXdTFy/fYdrt+4x7e/fJrV
        0iEpE4wDJ3hbQbB0yw4rxdFLBBcqrAGTtZRNRgHizso2I2TJkKMCzkUzVDajYp5ON2NSknrq
        W7VoSAnr64K3EGIf1VmNrOWsC2VybHGhQO+MJ/YDta8VW4uuMawZ1KPGV+VrR+Ezg6QxWCoQ
        Zc4Ipuxr1bdFEOw4IEPXHNkkMobVck01qcvXqHaRFMifgqWKHlLSMleyDncw2quWUa7unkvh
        75whZ0vtA74JTHb2iTHzwosv8vZdx2I5cPfeAYdHS+rpjJwUAXb5hed5/vILvPbaa1y+fLkY
        Qz9750SDGaAEjlOLA7JC1yZNQxwGnCsQvALlG1tDY3zRRMr85GfvsYyBldlhdvYFvK+YTKZM
        mimSE+vFIcReET05FrxpLqUu6IRTyo1Z/uS0RcIIiSxJBc4kEaNyQGPfE9uWfr1WXZ4EeUik
        vicNmlWTjP3puGs9dh3PovhZX1dU0wYpigYq7anY3qryOlwJYZv9nQ8F526wToXWQPt0UDyy
        iGg2BsQol9YY1fXNZNr1ith2pL5lSK0OgEpprr9/SZ2SVcrpE3pD+t45Y7cTcKWvWVJM+GpK
        27UQOxabChhoN2v+4q9/QkSB+dYaZrMJZ06d4pVXXuXll19md3d3i9561s6J/q1GXV0R1WDt
        hw078wnNZIKxRYRZjnG0T1MiVK0vc/vBI3761kfMdvcxIeBCRQgNNlQk4L0PbrJeR91vZlG9
        oJQKoyPqTrOwQnKOig4a1ycpFiX9gRz13+pS3TPEjn6zol+vEVEzo0QsAQij/Oc4cNLSOKoq
        /5iNYtHBjQljFSBh7LHqvXEWa3WirT26KWbIbouASmXQZawlxqg/R3kIaFiVXSZegw2ha9e0
        qwVp0ApgfA0N1IxkQ05o71kwzWzfeYq8p/6OSYx+v5zJqaOuHKGeY4OhTYc4E7l75y7Xbz9g
        Op0Q48BkokLll55/nldffZXnnnvumc2i8IyUu957JRL3Lbu7M9btwL6tEGC1asuwyJSAzoWE
        oVjalIUf/+RNmiB855svYfbVoLYfMn/703f5P964QgpzvvX1PYL3qi1bcKuiiaD0kTrZTEkn
        uNmUzDuWmsaTksLlJGeGTctmeQRYnIOAISah7yMhmBEaiwmBXKbUxjsNzpKtRhZNykl/kFi+
        CJ0yiwhiBaN8Gv2BrQHncMZpNjYQk2CsrkRSgpiV0yqxw0sufalDckElpcRmvcTXFXUIW2wy
        hXgv4/ALLddFMjmlsopRMbRIxhRZmph1Wiyxhxzw9YxuMNDWHB2s+NMf/yUxC+vVGh/UMeDU
        qT0uXLzA888/z3w+B56NSe5nnRMfpMYYZvMZ1nsm8zmQMYcLVqtHIyNqTEbb/ZmIkPPImBJi
        zvyH//oz3vjFVZ47u0ddV9x5+Jjrdx4j1nH1o5t8/ZUvY6zihLW3LALWxqrol6BWDFYTrQaK
        LbxGi5gMZHUFHwbaxRP65ZIwmSMhEaPiVsnCkDN+9IApVWNGSFG1inJSuc6h77Gl/EYEiUWx
        3QiIQXImo1lKCdcGrMV6izgVSdNs6wqTJ5TvoTtPEyOmnpCTgjDUGFxbhz4OpCEiScCVGqXg
        dzH64NDAHEvdcT88GiyNIAfN19YH3r5yk996+Rznzu3h/JwrH97i3/1vP+ZgGZk0DX3UXnva
        NEynU3Z2dtnZ2dmCF54VGOCnzzMRpHVdMwyZabNPt245e/Y8y8Wah/fvIhIxKAgbY4gxljL5
        kwTrBNx6csSNR08QESpf4QrT/2Cx4Gh5xP65M2V9ksEoODymjpSz8kO9MlaMNZhkC/IGICHl
        83UvGlktDrVHJMHQkozTGx5LTH3J1tqDWlHQAIXSZYCh75GciL1mqKpusM1oluTAeeKg6oCS
        VPkgpqQBFNUQKVuDKQigcX+ZSsmaYibFnhwTdTNR35riHI41GDmml5FTERQ2GJP1JyxO3lLG
        RZRhm0FwBnLptLJkMpZu3fJXb77Hf/6Ln3B2f8aQI7fuPsGGgLOemDLe18zmU+azGc4Y5vP5
        M13mjudEB+mYFft+YG9nh+XhEadPn+NouVA2hdN+1bpiiFSGSH4LwNadnpoNa0nsnCtDm4RE
        UTPgtleS+NGC6c4pJSoLyrbJ6rOSUsYXZYXY9+Ad4IlbnI3ietMwMHQd7XpDPZmQRRjatdpC
        FNhcHyNZenKK+NCob00xfBoHUEPXQxKMeHJMpG6jqxSnUqLOazinKAxdW6RYMkkGsKWq8Prg
        st5u1fVzAc6rollFTBHb98RBHwp9jCrwVni3Y90/rmFwqokrMWrQ6kZZ1RjGDL9NvbIt2Y8W
        R6y7jgHL1duPMMZQ1Q2gjmyuDLR25ruAwVc1e/unccF/4n54Fs+JDtLxtOsNw7CmT2tOnz3L
        jds3ioq9Pd7zlSHTOGiyzuJDpdnG5DJgMlsa2bZ0MjAMA7fuPuSFy5eVz1HWH1JA9ToDEVIa
        iltaVsaGZKpQae8nhizKs0wxEhP4AjqIw8CkmWBLUPTDoHA5IkgHvSF24z5VthWAKynKGEvw
        DdJFnDFYn0myAaOmSEO7wHlPHDIpd1ukE1YHSKoTZAlNrQExafQ9Mg4xmT72GBHaOJBTZuqC
        trZVpdWDKYOsrKunGEc+qVN1iPK+6jpMQfqq6uB05eQsT46OENSisiuQxOPWJBOCo65r+mGg
        rqeEuilaUYWPWz53/PezdD73Qfo0BPDpCzGenHV53zRTpvMdlt2SV199lXu3bulAqZCcjTFU
        IRC8p+06JKv7mDid/sSYP/P76L7ece/BY9oYMas1u7t7xKEj2IDIoAwa50jlZsa5QtcSstFp
        jkF7YB3mOPCqPhD7SE6JjFeaXIwMKRNXK6LryVHo2w7nAtr8WbxvEGfJcaW+LNbiUk+MCUIg
        R0N2ltTrwChmixOLry2SLRIjtvLq0l3K3DwIm3ZJJhGaCsiEumKIiaqxkAaGIerqxHmdcqOc
        UOMcLniGXqfYCpW0xFzoepIYvW8wWnUkYxgEMoaYEgcHB3gfSlVzfG2d0xVRU4juwTmCs9RV
        RfChvC/PVlB++nzug/SzAvPpE2OkjwPXrt9kvVny/AuXuXnzFhcuXeb+vbs456irmlFKo6oq
        2k1LkkxKvQ5NtgoCmaf3quMNY63lyXJF7DPrtMa6wKyuyCgFjhhpc6T2ulvISW9coKBqCo/U
        GL1hLYTKYSQxdEtizGTxZNuyWCzZrNbYHJlWDU0zxYcGsRUYIXUt680Ck4uMibWEKtDHFdYY
        +lZxxCE4mp1TbFp9IPUp4r1h6CNdt1Egg/OkmHC+YrXqyGkg5oHhwRHt0GJDYDprmO/t4G0i
        D2v2dncBwZtSpZShcYp5+xAadyzWGOWOmpGmphYQWTIpiuKEJTPEzJ27d8lZfWTH65GKW1tV
        VZw6tc+jhw+hCQQ359T+Pru7e1s7kfFeeRbP5z5Inz6fFaxj6Xrh0nlu3ehYLlaYnMgx0nXq
        7DWZTEoZq/A3572C5qFQpsz2xhi/R9n9F4xtpusit27f5UsvXNKpqRjF8NrijFZQOYJRWUyU
        GmdsUNpXMTtSFo3BWRX7EhHWqxWmzWx6w937h6zbjso6Tu1E9ncM812vGSpm+rZnaHuGNlKF
        ChGoKgc5Mp1MsJXFSYTOIBE27aABYuHg3oph09IXWwprDb6ZMtmb0TQVXbthvWzBVyQSSRyz
        U+fJqWPo1kymE3xVld/LKaA+K58Ua5GogShbBopeI2PMdoeqIhcKBdSdqqPdtDy4/3D7uccM
        Fp0CGyM8OXjMpPJ6XYyqC/oQCEUE+1md7MIJC9LPOsYYdnd2mE6nnLt4gX7TcuP6de7fu01T
        1QzWsLMzJSXDfGfGarmkmTTkgnEFVLLyqUw6/j0GrIgyVp4sjrjQnaKZ1Fg30XIxqzqgMQLi
        2KotGEqvJoVVkrE4UtkJOutBLM7X+CrTDxHEcvbsGQ4OlwSrr/3w8YLFcsNsvk/uM/Q9Dkvt
        Ghof8N4TQkC6DmkzDIIQWfeJ6V5FWrUFtA+npvtINZCsSsKknKmmO6ojPKvop5XiZ+vA4ugx
        1XSCd9Ctl8ymnvlspr46OW3XLHHotS/05YHGaEylVQSF3K3kby2DxRgEqxPkbHj0+ElBSqlt
        oh2BFVnJEPr+J1xdKVPGOpqmUQlS57b3wbN6TkSQfvoCPJ1RvfecOX2GM6dO8eGHV7l76zaO
        hKREqFRz6CsvvcKjgwOcMdR1w7rVodJisSwDFO0ax5tj/H5jZm3bjkljWCyWdJs1cVpBnha5
        SwWWZxGiqKU9o2/nGOiStnvEcYVijCOmDhcck/kEPyTsJmFsYGfnPN1mIHbloREjEHBBCE1N
        TolT8znDak0dKvCOAITpDGe9ahK1GYlCaCbqVhYcdjonp54uCdJoT2zEFihgJLZrTKXIop39
        HSa7c9p2waQx+OrYXjCniLOqomiAEPS1xJhtPy5SBkWlvM1ZyAUoIaU/TTGRJHPv3l2tcqxj
        tKoMIQCUqS446/BVVbDFhmYyKdc//H97830OzokI0l91xtKoqgLD0NG2K3b35hw9eci58+e5
        du0608mU02efI7uG61ff5cLFS7jgSbGnrms2m3Ss2FeYFW3bqWnvUwiaGCMPHh2yWK45dWqX
        IQ3YUONEyzcpgIGR1J2z3liiaPIyOFI1ghgHDGOmyVRVjXUZawa6vgMT2dmbkQZL3w5IDvSd
        LvIjGuzrodWgqWeINczO7GCbKXlImBxJT9bM93boho4wa+hXG3afu8jR4WMmTU3brjE50XUD
        1gjt4ghipNqfIka1fY1JVMGAbbDOkI3uUTGFQxMTzmnGF1Ipa6U4f4ftxNcYdO9rFZ/bpUif
        oB/UsOrmzY9x3pcsCn0f1QnAuTIUbAghEEIg9jqQC96rBeKzm0C350QH6XiGYaAKgbOnz2Bw
        3Ll1l6qG2XzG/u4er7zyVepb91gdHvDcc+e5fuMaCFvJya7rmEwmeOvBCDs7OyxXS2I8ZtGk
        nDhcLrn36IAzZ/eZznqC8WCskqPxZAMxZYJV8EEcytrHKEUk5oTxWTMwZd+PRyThLGST8Ub7
        MMuArZXFkqJhvuPJWYN/2KhcjA+ePq3wVGSnFvXiLbPdHcLZSF15WC4IlScbRz/0ikBaq8h2
        t1kjXiCCqwxhd4ZrLJIHBXuYpILWvsYa0fKUhHO2rH+0hFVYdClzi4aUYowLMEIyKmXmwCrl
        rR8iSRz37z/k/r2HhGZaSlzZrl2897qqKTDOnJJaWVp1BajqRh+OHFdXz2LZeyKD9GmVwGEY
        aNuWzXrDbDLl+Re+xFtv/4LlkwOmzYSmmVBXgaZpAMPe7h5nz57nfn8H69QacBiGAmJIeB9o
        Jo1mq/VaWSspYtBgfnBwSNcnurbFW0NTTcrUVgccWRJZFJTgnIqAYUdrPoOkAUEtGtRLNBZb
        ec0KpgS+SMShgHlfV2pfIQYZBBOBiOohxUw2hnZ1qK7XbkJns8qZbHRoNDwZICfWy0dkI2z6
        qCWny4obrixmUmEdiO2hoLFSzLhCAE9ZtowZKKAHawtndEBSsYoQT0xlSIZowI5TXTLdoHYd
        KWdigg8+vEYfE6ndEKMKshljtfIoqhQpJ6q6UuCFGJy3VHVD3UyL78yzGZzjOZFB+vQREbz3
        1HXN7u4ejw+eMN+Zc+vGhzgsOzu7uGZOmPe4EPBVYDadgzHUoaJ1yvesqoqu64gx0RWZld3d
        XY6OjlDFBX1iPzo4ZLFccW5/TttutMSdTHBiGVKPswlJCpg3WelxUkS57Vj3GaNKCEbxrers
        nbU8DvaprKBi265CTYCtRaqyk9wMuotNSgof2kMNC9ezGVaA4CpHzOUBkTNxGCBY6qmq9rug
        ShHGGbLRh0rMsiVpWwNOlFBmCsEbSWxlSQtaSHvmAvUT1XWSEcYolixBpURzYuiH4g1jePLo
        CR9e+xiB4vKmDBrrNEhTTDTTyVY+NFQN3WqNc55+yKoFVR7W43kWg/XEBumYTb33OOc4ffo0
        MSZu3X3AS195havvvk2KPecvXOD8+Yvcf/yEs2fOsbtzivl8V2VBjO4Zx4FFXTccHS3o+04X
        5yEwmUxK1h5Kb5q5fesuX76wjxFHGyMWoWlqcswYr/vYZDLIgDeu9KO6tskpl4xpcTZgXdpy
        OcWksXnV9YUoDjaXgZSgynyuNoQqEIxXcEIyyNBhTIsLmZxaTEo4vw8pq3PbkKh2KjAZXGSk
        2ZR4LO4QhRxfSllnwHlHH8tapAiKheALkqtIdRaqW4qdDoxQZYacdV0iNpDF0A4DUdQN3DjH
        1WvX6Pqh4JsLTtlpQMZkCjZ5IIRAipkQajrXs2k7Ysosluttefz06uZZOyeWTzo+PZ1zzGYz
        mknNYnFIU1XcvH4DawJnz13gK6+8zL07t9mpG06fPcfe/j5Hqw27e6fAUsrgcS+qQZ+SkrPH
        cjeEQFXpFFEQbt65x717BzrIKGuInIbiwQnZlJtUYpG8VKGuXKhiWSIxDYgYvG9IIsQsDLHw
        Mg0YX9zGMJiUtjhjj1H/FiMl4AZs3ePnlrAjuCZSzTJ+km8OcMkAACAASURBVOnTE4xdYmyL
        qQds1UPoNUjtoDKi5QGkrHPB5IS3gjdqEzG6vmEhGQvWY13YDtvy6DkaMyQF6g+DKu4PORIz
        9CmThkgcCioKw907D3jjzXcIVUXOoqbEtmB0s1J/xum6oso6fDDMZw0pRbr2CJHM0XJZWDXj
        TvtXA19O6jmRQfrp8sYVDOo7b79Duzng1q1rBG/Ymc9ZLVbkGJnOZlTTGTfv3me+t8OQFIA/
        chGdd4Sq+Iw6tYhomkYFRJyjaSaKbsGyHhLvfXybVTfQ9pG262g3G3XeTkJKvXIpjdqjjPIt
        KQ26qhiX+UaNhqwbCd4qZWKdxWKxLpQymeIVU9Y3WYHyQx6IEuliRzds6IaWTb+iHRa0eU0f
        l3TDkk1/yLp9Qt8vSakl5p4kEYyQUw9F9gUpXp9juW1t0f0txlRG1fnAINaN2mOMPNIUVU0/
        ZlVdzKgi/hB7+mEgZei7gdVyw09/9g5HR8tSHWT6vtuuXfSXLJjdKuh7WUpe5x1d2/Hh1StY
        GTg6XNB1wydahE/fKyc9cE9kkI5nOzyKA+v1BgF+/vM3SENHu1lz8PgBw7Bmd39CaDzVZM7i
        aEPqO/q+o23b7WuFEPBFx9VZjzUO7zy7e3tb5szFixeLSZPn1t2HXLtxh6GLZLF0fa+YVIRU
        UDVqGzPo0r/o/eSUkQJqMFZpZXWocVYtFI11RbIkYZ3gxj8F2SQoGN5gSxDoiqhPA33q6WNP
        lzI9hoilk0w7dPRDSzao+xtjIKpPiykmHE6nRAW650iimVOs1/fEefU+DU51k9yIGho5o0/9
        Kf13LqCGIavFYT/0fHT9Jr94/0O8r4l93KK+fEEPOaf8VqzZWjzmrC5ro+XH/XsPuXPrFpt2
        w2q92UI4Px2Pz0IZfOKDNOfMYrHg4cNHVFVD36lf59HREev1mqbxtO2Sc+dOcfD4IXfv3SHn
        RD8MimsVwfuwtcoD2RrQKjLJYHCs1y07O7tUocZ7x9Fyxcd3HrBYLtgsFwy9LvazmC24PKZE
        zKqar2zSY4sKFclzOOvxvsIVuZPMsWenjGsNAxRHa1c1ON8QXIWzhspagvME1ygQwChuNiX9
        /qpKITT1FFDKm+qwOYx1VKHCu0o/rnQCrA2MePg8TqWNmiI74xAcxoSnQrKA5nMuU9xRV1iI
        aSCmgSEOHDx6yMNHB/zVT95C162GfhjYeoki1LU+LKti7TEMmiX7PrJZtxjrmM13WCyO+MlP
        /oau61mtN7Rdty17n7VzYgdHigRqSSnx0UcfsW5brn50lb2dOQ8ePCY0NY8eP+Zv/vKv+M73
        X+f2vUfcvHWNeeW5du0u7WpBTpnlcoG1lrbtVUAsJaoqsI6R2WxOynB4cETTNCyXK+pmwmq5
        Yohw49Z9dicVwcCkqVmtWyZNjau0ZyvgGWRE6EjZjUrWCaaou9kw9NSl1FPdIvVKEYvC6EQ/
        1zntiW0BSYSs7msgeAtCTUqRIUX1LbXqpD0JTQlKJb+LQZk4osa7KSbV2zUW5yoUNV/CTaxC
        8kaaX87gFI+M0VZWSe/Kd82omj1iiDnpFBZL2w8s1y1/8bdvcvv+I6azmX7NmCfEUFUNrgzS
        YuwJIWyzYCz81JEeuL+3y9tvv8U3X/sO0+mcZtJgraWp608o2D8L50QG6XgBcs5cu3aNxXLJ
        W2+/w9HiEEkd8/mM1eqQruu48t779EPi1a99g4unT/Pmz37K40cP1JDIGlarNSLCcrGkqlU9
        T/tCx3K5Yr6zQ8wDdImu27C/f5qMEKpAO/Q8fHzE3rRmvjvFRAjeMThds/gCNzSiw5KETkiD
        KzzL0svZQpx2RienfReVZ1k4l9ap10wWNQIfZTgLNgAAmyOgmdnZSHaa41xxI3e+Al+A6NZr
        phRTUFCqz5tzBqtDLmMVsCAWbD7u9RRLm8lpUKBCKsqFpc8mH6O0UjYMGbo+smp73njrA67e
        uKsAjZxogt+CPSZNjXOqj1xVnvV6ifeeqqr0wWC1tWk3PfOdQEyJo6Ml77zzFlU9K8ya0+zt
        zJhOJ1tM73i//Kq+9CQE84kM0vEN996zWq34u7d+we2btwjec/HS8/gw4cHDRwiO5arl/Svv
        8/HHN6mbCQ8fPiSlhHeu7D6FYdC9aBAHRoN0Mp0RU6LdtFQhsNmslLGyXuKdJQfPMPS0feRg
        uWZ68ISd+YSurqkbnRDr5S+yKSJYcoERWhIGIxmTjveoo2Cac3Y7KDFiC8um9KtC8QZ1WKvV
        rcUgST8mYvEuYYwn5UHLeFt6SDuinPTvIj+s7mtFHdCU11dFpkwulDiLVcaLk6KUqKV5EsEY
        r8B3gSHpaCzlRBQYUqIdEj97811+8d6Hyl7xvvx+AELTTGm7jr4fCMHTNDXr9Xpb6voQGKl+
        KSmUse975vNdrrz3Dl95+Wu8e+VDjo4OObU75+KF85w+fWobqCmp9u+46zYGvHefMHb6PJ+T
        8VP+iqM9S+S9966wXq6w1nL23HkER1U3WwW/GAfS4Hi4WNC2nWJKGRX3TJFaUZxoVblS0jnm
        sxmr9XpbVnvv2Ww2NE3DbDpluRI2Q0/KiaPFkip4hr5j6GssgqmsZiYj5Y0ehaO1V/TOgySM
        CBl1ABdiWUOUILVgJRd3Vb/VZjI2a5oTqzQxI5D1NYwPahKVXNk9KvTQWIMfWT4AThDxjMgF
        b6162YjqC8YsOFN6VQPG2VLlFglTY0hiMAzK/bRKro9DYhAhCqy7nvc/usVPfv4OUdSmcMRC
        jztuihpGjANVpQbMe3unODh4xDAMeK8ZN+XEbD5js2mJw8B6ueFL0wk//9kbfP+HP+Tatevc
        9oYbN67zwuXnuXjxAs4HlovFlnQ+Yr0nk4a9vb3txz7P50QG6dMsFbVUEJ67dJFutaDbbMhS
        tIpEfWAqE1iV6a9sdW2Py01gy37xPmGtI3jPcrmk73soN6U+kUXlTiYTzp0/x+rwMcPQMwzK
        kplPJ2w2LVUdsOoCSCjubsaNtvMJxNBnFYkGQawGgHcWMUEDsWRVg6pIGBlXIbaouE8UHTRa
        KjqDcQ5jPWTwwZExWyHtUddJRCeh+rGgpkwmImJLJSFb06TRTzUbbUCVkWdJQErFUiIWnC52
        1MMmAd0QuXPrPh9+eIO27/Ghxlq3FQ4fyvtorWMynRKHnpQF5y2hatjZ2SWluL0246BwOp3w
        4P4CY4RbH9/i5sc3ODq4x+u/+3s8erDkaDrlzp17nDq1x+7uHoeHR1y4cLHI1gzszOdcuPAc
        u7u7n/sAhRMapECZ+PWcPXuGi5cu8OHVq9y+dZP1as3Zc+c4f/4ci8UBjx8+UjB3Up/SlBLB
        e50+FtDC6BnTdd0WHLFer1CDX8164zAi+ECMic16zXx3h9YFbNbJa9d1HB4uVE/WedXKM0J2
        QlW0j7wRjBXEGYzx9KUnlZLdpDxBfPDFokGdtLWrNYxC1Vq6GoxTeRLnqqICURUEjmBDwKAi
        4Nbq75vTaIRcpE+296grJagGnC+lNDIq9JfETcKKYnajHA+njPX0aSDGTB9hEOH6R9c4Olwy
        bSqCb8qay2OMiqflrCW2cyq9IlklQ4chUtcNzldFoUE9SUXg4OAxVVXjXWDTrjB2haTIW2++
        gXeW73z3O9y9d5eM4b0P3ucbX/86jx4fstp0rFZLZtMJ7WbNH/53f/BPcdv+g86JDVKAruv4
        6KOP6NoNbbfCB8+V99/j1q2byjIpDIqu60sW1ZJv1LA1RqedztrSJ8EwKGKm63S6mLbY2qT/
        rij0rMxmvcEXV7LaqSJD7AfaTYt3Hj+rFadbLAK9MWqFmMGIIXn1QMnWYDlWlddoNZ/QsXXO
        k3PEZKNqfy6UT82q/lD4cAqUEB0G+aDkAFFRa2OkSPI6QE17k2QV9BJDkliU6xVbO+r3jlWH
        rkItkUTKsbBypFQksZTJlozl1s1r5KHj/JkdDpYdGGjqBuc9oQrlPe6IcaBtN9R1RTOZkbOu
        0IwITd2w3ixxwbNYrphNZ7Rtx9AP1E2DdZ62bfHOsFh0/Pi//Cc+vv4RL73yKpPpLvfuPsCJ
        Yd11HB0dYgw8fvKEl198sah1fP6zKJzwILXW8otf/IIPP/yQ6XRKdanmzp27LBcLxMBms2Eo
        9CxrLcFX9MPAMAyfkEoRYDKZElOm3Ww4PFwQgidGU7IoyhPlqXUA0G42Oj7xM5oq0ARX7ulI
        zD3YOVijloZe1y62MECMGMQUFXpxGhTWk4dOQfsY3VeSsa4oFiBgKsX05oR4r8GcBazVbGPG
        tYz+rLrML/9pjNpvZB0sKWS2yJqgPaeV0QXNIag/qT5oiqQoI6dUM7RgGOJATokoDmM8D+7d
        Jq6WnN6d0UsmVJa6rphMJzjv6bsW51xhAWXadl2ugtm633WxpaqUezsMg0Iv84T1esP+/h6j
        paVIYrlstxaOt+/c4/btezTTKfP5Lpuu4+KFS1z94H28NUzmO5w7d5aqqrZB+nmnuZ3YIB1F
        sb333L93n9Nn9tmsW53Athu1chctcUEDuo8DcRgwRcd1DNadnR2quubg4BDvFUUT40CMw/Z7
        AduvGfujw8NDTu/tEaqKupmwM/OEusLYGt9M1OCogNLjkDApEZwpgHblmEJSoeqsJrw6GBpv
        f6PSJELxDAUkY0JghB4o6sepq1qBLWIM3lWIMThrVB846u9qnQ6ZJKnL3NYOwqSSUdnS7XTQ
        pcAMY+LWbyZzrEaR4qCC31nI1vHk8QNWR4+5cO40iYiVmsZX7O/sMplMGHJiiMoVHQNtbDdy
        BmMUx9tMG54cHqjEZ6tB3bYbAJ48OSQEv3WdA31gzmYzrHU0kynT6Wxbabz33ls8fvSQ06fP
        8MKXvsSlixeYTJpfup8+r+dEBun45Ash8Prrr/Mnf/LvuPLeVby39F1PVVXUdcNyudx+vt4E
        unQ3BZUznc6Yz+eE4Dk8PMSQCUHXA0pX08GN956u67YE8LqebIM4poHgPfWkoplNCU4Fvmxl
        abslBqM9sFE+qlidzLpsEQkKancdLtSMmzxrxgyocD1fwOy6hkhAUG6nJECz8HHG1AxsvZbA
        OZX1jwgUErsYSEaO1dYogyWxpGRUVTBp6as/j6KMFOzRF9V/HbrF2JNEhcAfPnjA8ugx586d
        woUio5LU2nAynTCZzgmSOTpUf9HJZMLR0RE5Z3Z3d9nZ2ePx44fbgZ0Ai8Waup6wXq+w1ula
        rO3YbDZKPrBmS45YrzdIgWSGqubunVvcvHED5xx7+/tMplN++PoPefFLL1LX9d+7P/08nRMZ
        pONxzvHyyy/z+//y9/m3/8u/JfYdzivm1oeAc3bb+6Skgxnng2bgMoiIcWC9Xmz3dsrIGLQv
        Mo7ZbFQaNFulBg1QnTq27QZvhaqyqhQPhInHD4IMkZwMBE+oFPea+g3eZTAeBzrMcoAMKCTP
        a3bLsexDNVhTVhK4NR4juYAQLEZU0V5yjySLDZpylZs5bJFBLgT6tlXwg/5C2nuOfSqq1+S8
        Qgqt0X2ulsPK5smFqqesNTVhSjkj1nN48JihXXJ2f496UiOStBdPPTaAr2tCaFgvntA0FU8O
        luzs7DLf2WW1XGEM1E1gb3+fvu9p2w3NZEocOjabNcYaur7V62JLT58SHqeaycaSh0TOG7pu
        4NHDB9S1uuQZq5zYV7/6Vc6dPcO5s2dOlIDZiQ5SgLNnz/L6D77P3/z1X/LOO29jsrDZ9JjO
        4ktA1vVkO37XDJAYevVG0RVMpm1b7blE0TLWWqbTKT542s1my2RRIjZbClrf60STlHFe3c+8
        NZiYcDnSDZGULLE31N5jitKeDINOWbP6mZokIB4TCu4VzX7GKkjdFiBDFkHhFoo1zjFiTA/O
        IdaSY8LaVGB/KJBBDELGFfROllREyNT6QkwR785J7TUy2usaU/pSXZmkpDhkxDDEFh2oeR7d
        u0eOAzuzCdNJpdnNBLJVa0PJlsXRmtVyrYyYvi8l7sBsNgOB1WqN80+w1rC3t4O1x72/avGq
        YbGzW+hTsXA0SPH3GUESMaucjrVqmDWbz/jyV77Myy99ha997avs7JwsR/ATH6RVVfHd736X
        P/zDP2SxOOTjj29pCZPVSXvolSAMuiwf96KjQ3VOuv8cgxD06Tqfa5/abvQpfywxqZPMsUwa
        UmYzDNgM3gg+GPIQCd7iyFSh7BGjSof44IhxIHhDlkTwE2LMZTVk1XAYnbhmspaWBQx/LBsD
        MP5d9qA5Y1KvWGHnwaq6ey58MklKtM4otM8wkJOSv/Non2SUHSNGd6Nq8KQQxFh4otYahjQA
        wpAGDh8+pnKOMJ8wmTZKrSNjnacXi3ee2CfW60Xh6mbWmw2huAuMK7DlckW7acs1SltIoPas
        KmUztiEjB1jL7biFIY4PV+cK5tdYmsmUV199lR/84HV+9KN/wUsvvfQJyOBJOCc+SI0xXLjw
        HP/m3/yPNM2E//Xf/wnvvvsei6MVdVURZaDtjqe5pkDLRmDCsbbu8UWui1HQo0cP2d2Zs9ls
        tk/q0ZVNNWYpXp0t/RCZNAFnHLbxQKYJNX0ayN4WO4lM3/XUwdMNEZ8jOa8JoVGFvdApqds7
        HCho1lZbetoo1K2z3wTWbzNlllycyDMuJ4xTX5Yc1Z3cuICVgRSHsko57sWcQVdDRbU/5XSs
        Q5TVgiPlSBw6HVw5RzdEFk8OqCtH5T11U+OdBSM4G8gZQqgRo5P11WrF3v6+9vqiLcV8PmeI
        Q6kShMViAeQtHLCqjveko8P5SEkbdXdHDupIcbOFX2yD48yZs3zta1/nh69/nx/96Ee8+uqr
        JxJ8fyKD9JdH55YXX3yRP/qjP+Lipef4T3/6v/Pzn/8dd+7cYbNeKwPlqSzpvd9q6oxnVGQY
        M+pyuSQUbPBYdo2BPb6ORVczVagwrpRf3lP5oPtHLAHITlcFIoKPxepeMjIkCKncWJY4pJKJ
        tIwUX4AIouxRHQo53fmmQXfBxhRimCl4YeWzOlBiQFKBaZLSwnIu6vNFmsV5LZ4li6pL5EiU
        SBJDTJGYE0NfXMtjxLhAu1rS9x3TWsEJ1aQiBIezDucDIhmHJWVLlB5jE2kYWC9Xuq4p73vK
        iWYywblA33ds1qtPPEDaMtUdK4hR1lNE6LpuO8xzTs2cYlQpUF95nrt0gW9/+7t8/7s/4Hvf
        /TYvvPDCVk3ipJ0TGaSfPqNFxKVLl/hX//K/5cJzF3nllb/ijTd+wtUPPuDhw8cslivW6w1t
        237iYj1td/i0JEsIuigfVe7hl/dpxiiDQ/LI44Tg1HKishbEqdbRuMIxqgmUUqYbMkNKkHU6
        idOvj23EidoO6rcL20GPNQbPKF2iGVEyOmwq1oD6MVVcsKYADcRQqNxgc5HBVDhiiiAmk1NU
        jLNATAN9ygVWOdC3rcIFxdIuVmQZCM5R+YALnrpuMAUQYqzHCEWMTFQFSUR30AXRlZLq9a5W
        K5x1ZKfAhb4EHiKKuIqyhQSOEM6maZ6aD5jtv7tOlR2ctVy4eIEf/PCH/OB7P+Dbv/NtLl28
        eOJK3KfPiQ7Sp8uWMdhOnz7Nd7/7Pb70pS/z2muv8fbbb3HlyhU+vvkxN67d4Padu6zX7ZYB
        45zblsLHT+1M36dtgI6Zd7xZxie7LVKdvvZgDc5XBSJncV5xsEQAoTKQjCEboxA4MskCOdOt
        O5IfVzWZnAei10GU5Eg2CpJwRYzMGzVzMKmIniVRT1DRHnLEB2eje0dQNUBJJapLL6vvmyNJ
        1D8ZhlhK3BSJQyJl7T/TMND3A84GQqjwLuCDw9cK91Me6mh0TNnBalavgq6DdO+s+NuqqhiG
        gSdPnijMz3u1uDBsH6RjQI8Px5QSbdtuhbNH4D2wBeJfev4Sv/cvfo9/8aMf8c9f+23OnTt3
        YjPoeE50kP6qU1UVly9f5sKFC3z729/h3r173LlziytXrvDmz9/kvfeucPfuXdpO2S3tptUS
        UlRUa1zbjBd3LLXGbDsGqveenZ051WSiBr6FBaL4HIXnVU1g6Ae8VUV345W0bI2QkmPo1U07
        xkRKquHjdIdCThaSRaxDclLAvHXkOpOtJViV40QsRCWEgyFbnRpjHDkPOANYg7ZzikbIFKyw
        GDKJtu/K3heSKb6hRQKmbQf1L/UeX1U4p0Md7x0uVKpW4XSHOeSsqCtXkWOPZGHa1DhrVPso
        HYPrQQdyKSWaptk+MEdww/jeP73PHHvUMcPqTrxmd2+Xc2fP8cMf/i5/8Af/mm9961vs7e2d
        +ACFZzBIn76g3nv29tQi76WXXua3f/t3+P3f/1dc/eAD3rvyHjeuX+fuvXscPnnCcrlksVhw
        dLSk7Trqui7Y0rh1mT42tA3b73H69Bnm89NUVaNVqTdYp8EiCbwHU3mGIeJDVXCzyo203ih+
        1qftlDmlVKznve5YsyOahOkGnNOvqYeWyXSmCghGwQbWqPRJ2g6XDMbWOCOaFWVctQgKHCq6
        S6IoqiFquYvVqbeuexQyWFfHlLd6MsF7DTpbSl7vPFmirl7EqWFxVMQXInhnqUIg9fET1+pY
        cVDL1aqqth93Ba01XtMRxzy+/0+jwEIVuPzCC3zve9/jj//oj/nmN77BdDoFPv+Qv/8n55kL
        UvhkoD5dou7u7jGf73D58gv8zre/zcHBYw4ODjg4OODoaMHdO3e4efNj7t57wK1bt3j48CHr
        9WormD0Om4xVIvaI/9QyTQrG16uKAEUKU3Rv6pqarhsUHN9MyyRWiDaToiHHTEoKok+prHuw
        pMIDTSlpYGCIpid16nPqvMN6h7NBwfUGXa1YR5aoqoNeTZayZCQlchxKIBpiNkUPWMhisZVh
        GNRVvGoqQqXcVOcVAOK8x2C2fbszHusMRkKxgVDbjT6XHaxkmqZi0lT0QyZTFAdLFhwz6Th1
        H8XIrA1FLjRt33Pvg+pI5bwdFu3v7/NbX/tn/OD1H/CjH/0e3/zmN5hOptt74CQH53ieySCF
        X/3ktNYymUyUD3ru/Hasr4z/jqOjI+7du8f169e4evUqH3/8MQ8e3Ofx48f0va4L1u0aZx3n
        zl/gwsVLNN5Cdx9V31Pa2AhJyGII1mK9lsPDuieSqLyiYKwzxLYj2wEvmZg8PltiTuQhEaNi
        aV0ZTGVEBb+WG7D6YHDWFiSOK/Iv2m/niALura5GUkwUxAYYFGhgnQpMF1AF2VJVNU0zw1gd
        QtV1g3FVUfEzBKeoLmtsCVBlCXnrAUOUtAXzW+doQk0VVA2RFFVorFZNohCCkiDy0wGle+1x
        VnBMDjfUlSKImrrm9JnTvPbaP+eHv/u7/M7v/DavvPTyNkD/vnvgpB0jJwG8+I90nv5VP8ua
        4NMeM4vFgvv373Pnzh0ODh7T973eLFb5n1U1wXvHm2/8NQfX3+XcjsEF8N7irVdDKJPxxmCC
        wxgHydAOG3LqinyJZYiR1G7UaTtqiTjEAUmGvh+UVoe+liJulBNqChDBFdwtxuKCOl8n0YAs
        Sr1qYSFZVzgqqaRqhkmhktbrIExpexXWOfDqn2qdL9WDpw6VgttBQQPWEQdl6mCcClfHgS4O
        9H3Her1ms0n85795j6s37mGto+vabT8JiqoKVUWOyhvNkorSv6FuJjR1ze7eHsEHptMZu/t7
        PHfhOV55+WVe+2++xcsvv8T58+d1FfaMBObT55nNpJ91/u8u4NMlcl3XVFXFmTNn+OpXv7od
        +QNlIa4QwoNH91ndv8rPbmW6KMybWgHyxb7CFvdvI8o2sc4w9TO63tN1K4LJeO+gmWAHj3Vl
        IGKmpDjgeyVIx16HS7Ggg0zB4yJjGIJq0uoaxlhFNlmvfJmYVA1iVCzUvW1mOp8RQgWkYtuo
        BG5cwIcK6xQZ5KyjqRtCseRwwWONB+vUq6ZMlMUoIER3Oyr8bX3iK1++yJkLl6knE7p+7PMN
        e/u7RQRNd7zz6YzTp08Rghoa15MZs+mUU/v77O7vszvfYT6bs7MzZz6fs7Ozo9n1qd35sxao
        v1FBCr88SPiswcIvKeQX7uOnj7GOU/unOb23o2wVHJIS1lclixqc1dLXGFOmrKpDNKkDVVXR
        dgusZO3TgiVHlT6xwZOGhPe9ciwnFGpYJBf+pqgKGTmh/a8ZcQAC+GIOrBnJhcJJ9Q7vHD44
        rLH44BUiuUVjidpIuKKTZIR6MqEKteJ5AR9qFS8z4xRbv6WRjEX05zU6PR5XNRcuzfmf/vUf
        88qrX6XreqbTqSoNFgK+5IxzlrqqmM5mhK1IWJngVpX238ZuZwy28Pc+PYN41s5vXJB++nzW
        Rf10T/NZnyMlg1lrcCapJq4Ikgv/EwXb6wRTtoGqN7XqFpEs08mcoU9a3vpBc2EelykW72sm
        M1UsSFF1gSWmbckK0G06lG7mC7DBqlp9zgTrsJWKjelzxmx7S6WR2UKR01WODToltkVFvqpq
        gi/u5abwVl1Q/K/R39NI6WclFbZMKqZPypv1znHxzHP84Hvf59z5C2SRMo3+1Pv5qb3333d+
        3c8/yec3Lkj/sS7m06/TtqvSH+pUN+cEZec3WklQVPYoNzXW4KxHssPWBh+Erl+RzQbvnSrx
        2ay4WwyhbvBesbkplz4U3Wc2k7QFPWgJrGJqiixKeN9suajKULFqeWFlOxUWqyJGORVyuK8K
        3c9p2Vq0e8XabY8KSgKXOCBSML85amovmS4SsVawOSq0EdnyZf/fXJdnOSg/fX7jgvQf+4gI
        Q9dhiwuZKWRoGf8YlR2xZgRGKGBBJCFl15hFFeJnYZehC8Shhxx1outLZo3aF/pKAfdStJII
        niweayuseHIR4nZGnceNFcUCFwzvuGsU68E5UtJqNUkqjxBP1cy0T0Z7Tee8Srk4r2oPzm2V
        I1R6JSPFk1RZO7IljCvdLZP7NY8e3OXM+Uv/FJfpRJ8vgvTXPMf9qiohpJSV71hggurxqYCC
        lBPeV1tsMWiwKr61yHAaNfIlJxCYTHZJVaJrl5icGMTi8QAAIABJREFUySSyE2waVy2V7kLz
        UJzWFEw/jo6cKzq6OalmrtH1iHFWeaWiZG5rNeCMKKjBWUfVTBV8r+tWnK1U5cE5TBHD3u6d
        s+j3EUHSgAYqpexVdQpEcBisWNp2wzt/97d85dV/Rqgn/z9ftZN9vgjSf/AZ8aSRvu+x1pWe
        Txfv2WQo4HoDeuNbFbN2rjrGzxqLlUA2/XZS65xKu8SUlcqVo4IljNlq4RqriCD1xNYStLiw
        YBgNh4sINl7L8AjOW0yWsk8VbHCEZizNbZFU0QeCNTWjqLROpsuDBXuMCR5XPblYM1qLRd0B
        rDVYAW8sQ4588M7f8fFH7/LSV19T60cZuQfHD74vzi+fL4L01zzbXSqAQN9tWG825WZWcIHe
        dwUbmwbEWozTlYUYwRqnrBfd45Al40T1chHBZIqivCeEqdLHUo+kCCSwFmtC8YFRITJjsopk
        lzLUUinSqO8Kidwz0IOxigEWtoMtdWNTHWBFFyrwAiiEgfL/R5rcSL8RUb3gMWsaoygmo3Kh
        KiFsMCbjHLSbJX/xX/49p06dYv/cZYzxpTIx/Aa1mL/2+SJIf80zTkLLAoejgwcsjxZl0qtA
        BlXgK/zTvKauNNBsMeBNEvHUGGwhRTtVVyhcSmsdKXXFaTsridlOkZAKP9QU9XlKpvYKBRSV
        P3FO3c8Eg/E1oPjeOjQlq6sOb8rdVobFqL24DpacKt8bY8C6MpEu4+SR7ylSdI0FEdUNTlnL
        fmNkm4H17coY0X71+odX+PF/+J/53o/+ey5c/i1s0J/vOKt+cT59vgjSX/cIjLC1oV/w5t/+
        Gev1UnegRv/3doAkuUxPtTSNqacKkxIoorpDwYOzDClCEtW9TYrm0a8DST2jXaL1Telj0Wxt
        tAz1lSJ+VFFPgQRGsjJhYizlqt1WlipClrFWBbyzpJLB1ZzYFSieiE6CdQc7KlIU8TNJiMQi
        jGbKYEo1mJKksssswt9WcKL80Hf/7s+R7h7f+O7/wEtffx1fz/4JLuTJOV8E6T/oGHLqeO9n
        f8YHV36mSn6l8TRGFfasdcBxeSgluHMBFAA6VjU6ZNK1i+BMIKUBk1UE22YhG7/VyRXRjI3R
        3g8owyrNoDkmjFEfF5VNsXhbKZ9UjFpfZIUZOtswLobAYrxaILLN0qi3qivSLVZJ65J0+EQh
        lUvJgCIWa8vrF0J8zLmQDfTB5qxjuTA8uvMLbryvQm9f/trr2JLxvzi/fL4I0qfOMWrl6Y/p
        34qY1ZNTx62rP+WtN/4ji+VjndRuJ59AgeY5O97AyiElO8SUdUUue86kIHuDxXiL9R6TPRKz
        ErmTagRlk8oPYRijwhSDpoIq2K5EglcQei5MFINOY0V0R2tQuRQRKQanpiB5LKMm8fF6RUvc
        nDPWHBtcmRGMWPpYsRkrapJl0IdOH/MWEWRLMDtjsLbirTdvc+r5q3z4/p+ys3+ac5e/icgn
        uZ+/SbvQv+98EaSfOBqKn4X/lDLkScOS61f+ird++h8ZuM7QgTcOZ2zJFlnXFpSdqFF0zti7
        aamoerwWHapkdJoqRlUWvAsQMngtVY04TErFvUyAEUesSCZE8N4iTiVb4CknNU3XpaXMmmmd
        PiwMFLsXg4jKvhSbNox3mGzIZuSVQpRSRmPKz1GgiMZgvSOJunQrs4bjn68YM2mwQl1XHC2F
        1ZM1090bfHTlx+ydvUzVnOKLCe8vny+C9KljCpZNyj7x+Ag5brh/5xd88Pafc+fj94G7SOqR
        VGGdKesXndzqBFj3lJZMShHvq5JN1V0NGcZHAmo/qD2nUsr6sltV5UCyZkOPhVRUAccdq1Pn
        7aji/LqPFV2HjNpNKUkBziu3VApkERFyN6iKPolxZK1qD4KYjLOQo4plZyhOb9p8j4Jm1miJ
        a42ulETSMcZWFGHkDEgpj0PwnD61w52PN5x6IfLowVtcf+fPePlbf4h1zfY9/yJg9XwRpJ95
        xhtESHHNwcOrvP/un3Pjo7eIw4pgB+azzNEyF1hcKlaGCgTAFHQPICnhvNsGztNZOotmGZdF
        fU2G+AkwAUmHQlIylvEO8RZvg4qLZSlbF1X8M9Yh1qinjPHkbMhZd6vKjCl/jApu59hr/yg6
        RMI4DE53r6IO5VsX8lzYNWVyPQ6SMLYEn/JndWtrthBJtQ4vcEDUatxay2Q2oWtVwhS35vq1
        /8rZ51/m1PmvY3BfjHqfOr9xQfp0gjR/z/8R6Vkc3uDD9/5Prn30BgeP72KxeJ+pm5YQDGRL
        sBZXGCjjC5qC6LFkgilTV+cpSDmVGjEqupUlYSVpSZvH1ynZUMVvdfAyvrgzYBzOV2pMPA55
        CthgW1pnHTSRi7WhMRhKFpaExMj/Rd6b91qWJdd9v4i9z7n3vZwqa+rq6qquYg9EEyBMmaKo
        gSJgA7ahj+XPZBswDFkSLVgQbYmkRHazq9lTdVXXkFk5v+Hec87eEf4jYt+X1RRgSzSpVvPW
        lPnqvbz3nLP3jogVa61g64jbKXmVTKUZE+Q6eJdErfNwkZxCDtHKGR5EECMXLVs3bielSk++
        7jh9VGF3fgbrhnaDqmz9IR/95F9x6/ZXmM9fB78hTMTVZT/15Sf2K6x8efn1t2qTjhF/J+gy
        IxuiOQ/FwTvL4TGffPxH/OB7/wdPH33M2o7gQtGJ3dwRX2gN+tJQV4xO9ZKC7Br1XVIKTlGH
        4UwY6SajL3qKQFELunXojkmMlghUJjsu3cKQr4D7ksdK8Gqj/ktpGlEjjjrQrYXzgfUcGeFI
        DxtPCLK/cCPFCy26hhAgKY5CDi2OT/8SRyjqzo0M1Tl5TShIzzmpApZkDxi+SRPHY8yXKQ6w
        8fkn/x4tM9/49f+W87vvEsvTc2OmDekvSAz/Nrz+Fm3S4TrHCR29kWg57o3ry8/4+MM/5MMf
        /RGPH3+KtSP4gYIgMlPrMfuSyrzfc3n9BLSlBXY469UiJ7sSJCRjleCwAokA11zukRa31hEa
        WqdAfD0NrSXGC+JODt3Ge7RPooYtYD2YPe6UaifCgam/hEZHtGSQD8xOzgeSMToCXcrqRmDK
        w2VsWnykvDk/3D1vpaYnkY2xpRiDlJGMpJyjE+jxDKWhUmlHR3fBVOp+zY9/+K/56MPv8u3v
        /B7vfev32Z29TkDQg8r18su+TJr4FX39LdqkN+2UQUaIr61cXnzCJx/+G372o3/L02cPWJcF
        5YgUj2jYBS0dVaeKMRVDvHG+MzYkN25N+5HROwwqXezXaF9E/3GIlkts5Jzy7S701gKEytaN
        BwUpopg53qLviRDk+taghOdv9D77adGKyUnwLZlBBP/Bc2SgBuoq5SSdG0QMMqMwCPpiet9q
        zjItymmcYreRJvfMCkr2T8d0gKzDNbKHwSwSCfOzF8+veOOVO+DQXaEULq4u+eM/+l/49Off
        55u//nu8+fZvsjt7DVwDHT8deL/6GxT+Vm3S2EwjTTI7cPn8Ez79+E/46Kd/zONHn2LrSmeh
        KLhfB1vIgi0zzTNFYZ4ihRNRetPI8LJP6XJTOYlF9NGMTsMzXtSTK+s5MiI/D540wI51R7xm
        fRp2ltZDoxkAbFqmSND/dKTRg1NLtoxkKHKGc4GcprQhhC7UPSd/38zKOaXMkqbakrTA+KAp
        6vaU4MW9VcZ1Oi6K6IjIkp83DphgYoVFTNGJW3ducWs/cTgeOPQJlca0i+Fan3765zz64iPe
        fuc7fPPXf4/X3vwOdb7z0rMcm/WvffH8Z339SmxSPyWuL1dL5EP0L32n9QNXLz7l5x//ER9/
        +O959uQzlvU60kVtzOK4r6O7Qesb87ynVChqtH6km2EOF9dHpnI/6i+CsC4SG0ZO7z1g1QCM
        6MO9L+pA8Z6DjU/0gPj3ILUTk79dBKljHCEk6nRa9C5RAfvpLdNihJyDIzX7lRIHBYnYDoK8
        gHZyo75coxPRPlPv+G/W1PlXP4FE8ZniYMgJ6yVM0qKfG5+pyITLRqmFXS3sKsjZxHqQaPGo
        Umph7SvH9SE/+fELHj78C97/xu/wjW/9Y27f+zpazk7Z7xjHeAPcjVZa/v6/8F38K7FJgXgi
        4+Qev7+pyujbNc+f/IiPfvZv+eSj73Px4iG9hdOBSkfVUG9RG+4UpeImTFOc7uorva0UEeZp
        x7zfDVIeWlLUbYZOcrMoNP5/UG2HSFoyXR016SAlZAQmknHMIxqlt1IpehJSe0+0V8AVZIzH
        6D3R3GAbjZ5p3IIWM1BLHCDh60scBKUknTCPlZfY7lIUTSkaNppTkibfUZdKWm+OZxA93kop
        ATZVB+vhWD9UNmUq1CqUaeawXnLrTNhvxrrNuArdZ8rUmDRq8MPhGR9871/w6cd/yjtf/y1+
        7du/z+177yMSjoNkT/alnfor8/oV2aQ3T+QmqgK+sRyf8eThn/PRh3/Mwwcfcn14Fn5B2xoj
        6mmUCmIbRY1pislo27ai6vRtjShVCnTYzSkBawt3bu84XOpJ8hV8XUF0So6tn1oiQqaTGpuM
        MkCZQGVPuWNG41CjpPufRQQrsQMgHfJDaJ6eSh4Df7WOWpsb6t8Ag0qmu5ZEB4+NaTbGI0YP
        01+6rz5mx6Tjgjqp2Bl1ZmzKcNOP+lc02jciGmQOFXBB3SlF6NbjAJxnmCtadizbNWf7Susr
        lYroGeIr9ILJ0MUaLy6e8v3v/gs++ejf8Wvf+l3e/cY/5vzW23HPGX5SnACuUzbzX/Cu/ZXY
        pKek1gEa2/KCi+cf8/jhD/n8s+/z+NEnLMtVTLLetvCYrUbxADxKFcSMudbwor2+oqiH23wR
        dvs9ilPqROuGbyvTtAsBtmgOeiL1lsEAqlooWpHBnZVBvo/Kzazf9C9dgqbnUd1ReKnGDHKA
        imJYgDKWKK9KkuajvSRlMKUirXUf2GzW0SmC0fTuPYFXBqLZYPH8szIKD/sTlbgSx0Mpkw77
        PnL0jLwqkiMcx3s4VYQuBafdtG4ETGDdLpl6ZS+VWmCq8R7reokXZ0/BpdFwNhHcNnqHZy8e
        8b0/++d89ul3efe9/5qvvP3b3L7zLlJ2uVnjPsB/+eDSL/EmvenEffnXmcGdSpDo41lfWI6P
        efrFX/Dzn/0JTx7/nOvrK7Z2xMnZmj0jineqGqXGz6uAFKfZiptxti/sZuNwtaHTxDxP9LbR
        m9D6xn6amOcd85mxXkpajDgiNZ3dRz9RT2QDHS0XTY+hnIzmyRwabUrLdkuSanPwUtiSSImG
        iX2J6WOYy2kQr/hLPcRMPRn9ThWyd4KTG+mkeCm5BQ2Vku+brSSPn4mNNaiPA2iK9wsRgGBt
        i2s2P9EUGz2GRUlcj5iB9XiPBn0V1iJIMW7tZq4O16juKO7UahRfkDPhqjlmE10DVe6uPPzi
        IS9e/DM+/ehPePud3+TNt/8Ot+68g9Y7QFiS3gTSX4ymL3V7T+XSwDZ+eV6/xJs0Xl9OVPxU
        YgWm0WnrM54+/hFffP59vnjwQ548+SIsLlXAOy4NFUN1pRSJGkugKrjlOEOmkH+5U+fK7fOJ
        3p2DrFGTUji2A70tnJ/tOT8/A4eznbHuKlM9OxmAxWS1iJCOUpKQMIgSEV1uFCc+RjJQg4+L
        Yj1cDgaSJFnbYtAzZRAdfVNAYuShnwYcBf9PoncDLvTRw3SJ1s7Yx6NvPGpJyTS45GDhNsAj
        GOLwqEHTydCJzy/BmBIRqhY2sXBDHEOQE9UWorc6tKeiFSkLW9/YrpW7typTLbS1habWOt1g
        EuP23GJuKoawY7OFpXeOy8SDL77gydN/zp2f/iFvvPE+r77+69y9/w32t99kmu4hOhO2Ly97
        9I6S3W8W2+mmwF/e1P95Xr90YyZO3Na8eaemxgkPamzrBZfPPuLBZ3/GZ598wIsXj2jbxtJ6
        bBAWigRaK7qhAlPVGCcvhvcYUhvJqWRPL3qB+3lmNxUujwvr1pEyYSZs7RpFOD+f0bLjeGg8
        f9a4ePIWcz3HvWTUdPDhWztoepZo70Js5Ck3Z9x6lRgUrKoxEEkIS9CpvoQSx0vShVBS41m1
        YEJuyrFRLdNUQRz61kEs091EcrPudb9xEQSJqebZdvGeLoUSUdg1uLcjDRfCiM3zQAryfcN6
        bGBzw7qH1WcOoTILYcF6uOR8v/Fr/9VtdnOMnjweO70Xbp3PLNvC1nreu41aArBr7UCzqJsL
        QusLTsV8F2VE+juJx7iM/e4O91/9Oq+89i3uv/HrnN1+hzrdAUm/ppdP/QHf/ZJt0l/KSHrD
        lRlNFaNvBw7XD3n0+fd48NkHPH78CVfHS7x1wmGgcTZv1BJorPWFqVSWdQN1+uZUQNUoRUBX
        lIp1osXgMR1MtbKs4RrvBkaLKOHGPE3spnO21pl3hbPbnYsnHdFK0QlItzzJFoQFqaGMqCG7
        l8b5jclrSdEZTn7maI0NJNnXvKkVw0CMlKCJRP81nOXjTulJdjZKg56DnWocUMbJXR+5iSzx
        j52GJA2k1t0DwR0i86pYb3jr2Yry0NNqAF8+ytHgAqIlaImS6HRzoueLorrR2kotMU1tv4O1
        GYflKjOS4e0rHNcFZ6aWyr7uadbwvjCpMM2BiZs53Y+4Vbqt9HZgtSMPP33Ek4ffY/fT+9y5
        9zXu3v8G9179Nfa332Le3UPL2U0dK4Ms8cuxQeGXcJPG4s2b3o+sy1Munn3Mowcf8OiLH/P8
        +UOWdcO9UYpT90rVBSFYP4fDJXiOOrCeETVI3YUbzyAzkCLU3R6RStsOLOsFW4uBvSlMoSY9
        r9Yp5oOWHdvxOd5WVM+REhvAaQkQDVZNRFFJc7AB1ITNUcwFlZeSmEFGH33Qm2Xi2U6pacuZ
        VboliimjdSMn9Fhypkus75DACTGSoqgyfK1zN6EqmCWPN9U7fWvBFSbZSaIv1ctJVvCUtTU7
        9VVHQ8nJOthagmfx/1XjsxcVttXZjkaR9FGSTi2KofTEDwJYDlfErS1sa6fUoBTu5rP48zwi
        rkpDULo0jM481UyzAVvYls95+ugxj774LlO9w/7sPrdfeYdXXvsWd+5/g93Z62g5j1k4v0SI
        8F/zJv3FipKX0ouXIKGXMrpIZ5/x4umHfPH593jy6KdcXT3keLwOZozCrfOwE6llw01YjtfR
        B9RKzQhRppl6mkBmiHSKVNA9iFECr43TfbtkWQ5MGkwXHFqXcD44OerBVAu9R7+0lonJJmqN
        elAsCpxR0zFwlzH1TKabi45PlQZG8buTUyBEOuuRupYazoKSLvjojejaB91QRuYcKLLlBiER
        ZRlsoZfsVk6UukxVRad0I+TGfWGMw3ipNo7PVOkkU4kkM5wE7fnU3WnryucffcjX3n8vaMPj
        +iWUOdQdOs1sdkR7pPqIhfYUp3uQMTR9l8w9I3IcKFeHjaKFUoWp7mJGjRvSF+b5HNE51EgO
        Lhutr7R+ZEJgW7hYnvLs+Yf8/KP/i1vnr/LK/a9z/83f5P6b32HevQlST/f0lN+9BELJ39BG
        /mvepL9wAV8qf8e5C3jH+oGL5x/y4NM/5eHnP+Di6WdYv0JU0oUuPHO8d9bra9wah76FCVep
        TLuzjBIxEKm1hdZiRopOM62Bl0bflkhHzcMFoU4cl2uqBBJoY4zDtKfWHVoUa07RQnenbce4
        MjWEI/uzwnK1hE2nW0YZSdlYLNzTlQ4QyUY/suembBkS836Yg1vMHB1WockFtmQIRU06QmK8
        xviGQcYPYCrTZIj3dnCP9pB5p5QyePdJlk/mUxHMNe1e+g15Ig3UXj5qReNAGe74as66bohW
        Xvvq21BqDlSONg9acGvUKccxirK0zl6VOml+L3ivmB1QB5GWyydbXGXGKTHWoge6f7BOrXE4
        mL+gNWJWrOzY7facz8rZNIMa3ZWpd7o3VjMuXnzO0+ef88kn/47bd97gq1/7Hd746m+zv/0u
        UmbgL2c4f1OR9m8gksIvXsxA1dyOHK4f8vTh93nw2Z/z6NFPOR6v6H2jt0RkJaJR640iHiqT
        YuhcEd/ldO2gum3bkW1ttNOqM+pU6NaDOmfRVywUWl8QKWkfm1FTLAkDOSRXC70tODE4t2jh
        eFwjfZROUWc+2zhebrFhZNSEN/05HTlb8l9P/VIk3fgshxmOTkcQ7KNt0lMEHqPpb0bSRyp4
        UvUwomaKzkfa6QSPdlRcpdxEcCF8gB3Sc+E0Xc08R2QMgoWUtI/Jp7o1xFrQDEc9O77fok6u
        JUzTyvntRFNjoFOwogBXPMXq7oaLseZZNRWoUwWFbSHShE5eOyiV1jZELQ8uQGLMRWuO1Blp
        xn63Y91WTDuH1jk0o/TO7fPCfpqo047NF7R1yn5ibU7rnadPPubixad8+vG/5avv/F2++t7v
        M5+9RR5/sV7+BjPhv5Ga9MsAcmdbL7h68REPPvkzHj34ARcXD1mXA822XDwb05QPzyMi7HdK
        0U5VBxPW7UBLGZREI5FuWyCaWmOUIMI0zZg15nkXrW0RrI/2gAfDpVSKCkKnu+doiBiICxFt
        wkhrbDyllomtrUzzNZQXeLufg5CyLvRUpHi0Vf4yf3Q4NORmTR7u6He4k4SBm4HBnOrV8X03
        JPaB0AZ3/4Z3pQzZXPgeqRKbdRDuo7Ga5Imo78yjVgWLnma3oCeqnqRz1j1BMD9tbBIUG7pd
        S/4u+XwY9EIPL6XdOag2RAKNNje2JuATtRSEjalq/mi8l/We7vdGlZnmlgdbYZqEbT1G++ol
        Gxm8UdhAZroWnh46u6WzmwvnuyksanpHClRZWBuYF15cfM71D/8pL55/zHvf+h+4c//biO5v
        rulv6PVX2qSnftP4wC8p6Uc6O9T+Zgvr9Rc8e/JjHnz2XZ48+imXF4+xtgawIJ3qnoOPBivm
        Bkjx3tiWI2u3YP0ETebGW8dT57mbmGoO11Vlv7vNcXkWsy0B6422rZi3aNp7ZzefI77GYmD0
        MCPFcxdKqVSdWNoG0mPeSkaW/W7m1r2Vi0cbKru4ai/Ri8zBuBHGQicSw4jTPNtvHBc0I6yn
        xaeb3NxXPCmHKbIb/b38DC/T3yRTQvD0/uSE1Bat/CJyKUNRk0nsMBAbT9bJOrB3pA0lTn5f
        HiSatD+zlMbZyAo8Fr8K1nrW3DcspvN7Ti3HzAoqW2u47NlaZyqhrXVZIoKJolkejExkGFlA
        uh9aRWXC+oJ5UDdr0aA9eiDmVcP4uwHrunFslXvneyY94LaCOvNUaBYgFO48+OzPuLx4yPvf
        +m94/a2/x7R7FYjsYpD5vwSs/KVf/9Ve/z9E0r+cm49TD1aWJUCgRw++x+MvfsLFiy/Y1iuw
        MHwuYllHSox3dzDf8oEHwtisx9xPAFV28xlma6RZMtDOxm7eUeuE+TFRxUpvK21dEBe6R20p
        WvC20cd0az+mX6yEzckAcSz8a6ccbtS2IypheI1viEBV485d58XFNdsyozTQYO2EC8GGyhSp
        tvziYTbuW6DZJAoqJRYhXsDHJLSc8yLyUprLaSNmhy/BFYkIfiLvVwZ7KNLgTE3Hf/Fc8KPe
        dKw3hkWpeyLMzk30zPRWMjpaH/rRIBuMe2jWb1BiHLRgKGf3Fu7dy01vHaNRVDHbMKkc1yNn
        ux3NK64d9xn3LVfcaBWN2TchXh+tHfNxnwy8gq9gK7XONOux+VSoKmzdePRi5d7uwP7sjG7G
        2oK+KBrZwlx2LMdn/PDP/ycePfyAd9//fe699h203Gb0nWUgZuNhcAPB/FVT4/8kMsMv/shI
        v+Krnd4uuXzxc7747Ls8+uIHXDx/xLatWFvAF4ral5anlEh/HAvCQbJa1raACeITiTdE/zFy
        QaSEZUm3xjRP0SPVHu543qnThImwXl1Sp120X+qOZTnQW/gD1eJpctLoPaD/3Rz16KgHR2ob
        UcOpBXBj64ES13nPod3iox9Vqt0NkkT64UbmVVDdxeHgLUYJ1hsQaUS6MX1NRFLZAqUWSp1O
        qXHm/7HkR7/UPQEdOd1TLTWcEzghQrG5bdxrP6G4p2fqjeYdXLF1ozDsPP2m3jQ7oceextcw
        Smgb8TiBuYaQThIU6C3m2rjw+jtH7r62UTWAqUCKlO5gMmHWOd9PocBhQxy29Yqtd5qNoVeW
        7g8tzypNnGGNNN4Et4VB9ECFWm+zbitSZrrHJlQKyMStqXM2g5dC6xKDnQ3QTO/dKWVCp7vc
        f/03ePe9f8TdV78dFMSXpXKnHrV/6ff/qa+/WiTNvCseysrx+iHPn/yIx198wJPHH3F1dUFv
        C70vVDq1dJQSekNbcUm7yebUWsO5XYRuTl+XE7OlaDjWxYJpKEIpDsVybubEPM0ZGTS+R6Nt
        4b0x784Dne0rrUUELjUoa6VU1I3WgohQNGRhpUyp0ZzZtkN+71gAc/Bmt44pqHRuTy94/e2Z
        p59Uus1IV8ocdbHLjVWKZ1poLe5FuAGOiCcRUIu8tN0Snc020Igbg2s7QKPRjB/V5OlnbdSb
        foqeeDstoPFnugdfJxrE0XfsuYlPQvk0y476sSVxA04s+6xvxwYWblQ4ms+vO5Tdyq37FZUF
        fIsDcSDDXk5ig23biLgbrTdFmEoQGUYtDtEHDowrDkUpFesrWsL9oWgeFR6RWjXWj3SnCwRD
        a+OqFS4XpyqIBhmm1pneN9yvcRPW3mE1Pj/+CRfPPuS1N36Dt979Xe688m207Bh4QpBX/kq7
        6/T6q21S7/R2zeHqM548+HMePvgBF88/57hcBA2sdaCdmDG+dTor5tBtzVozTt1lWYMXWiDI
        CEYpM+4t+3oCEhtFgonANJ1Ra2X4vHaLCdcBcLRwxmsLZdqHakQqvR9j0Ut4yUbbZNSBTpmC
        tidEi0arJWkcSt3R2fIBJFKrMW+0bwuv3lHW157w4sErsXFa1JKhbEnQQxJ7NeKQaumVy9jI
        hS9Vo06mjc4Qj5MRUdI61BJYGhvO3E89zxCNB+UxiboM5NvdkrQRX3MP5DbS0/G1nghsfp6A
        UjPdDTj2xqc4mzMe79dbiyxFlN4DezBr3H+ZtVaxAAAgAElEQVTD2c0b3iL6z/Oc7TIBOmIW
        4I8JQkOkZ/oeG640x/qWzz6ANRvXn2ogsWxd1bz/FiCkSaOUPe6dWnYgFo6NBNbQFZo5bd1Y
        pVGnNXqxZUepo751mjUuXnzBxYtnPHr4F7z97t/jrXf/PvvzryRPeLz+WmpSH39HWvVSanvz
        q07fLrh68XMefP5nPHr4AZcXz1mW64hUdkTpDGe4xBOy/3WjonQvSGnUomxmSNc4ARWmuSAY
        WvahpazQ+/HEj1VRpkni+7OHqCUQYdUw+iploica2NYDIiWmm6me0s7hxeNEOl1qjc8tSu8d
        80M8aG9oATNNPWbFZZiChU2mcOTNN/YI1zz7HMTO0jxPcE1RdWpDXUbaaoysUzW1kxrmZFoK
        pQzJWnrbGvleCRXpMAPL78kpaKMNdNKTJnobUS42Xz8dGpHyeesx3sLjAOt9cPw4aVM9/Y7c
        tyDiEwyteO+sL5MuGJvcMFqadDfuvgavvW5IW/LPDt+iWvY0FrwP0r7hTLikOz9C75JrqsWa
        qnP8nqizJQGkUiY6ngOrApcoZaanNlYkZtRIanqHpUyRoJjupgmhYtZC++rOukGte87m29Qa
        QChWWbaV68tP+NEPnvDgwXd55+v/gDe/+neYz97kJG1KLvCXKcH/3zfvf6AmHWlQwPPDgkQw
        2nbB9eUnPHrwfZ48/jEvnn3Ccrygrdd0sax3Ih0NMbJhtqK10lrLCVs1SQOdbmFdiUf0KhSc
        jbC47Mxzzc2tlOksiQQB5asoZZ7Y1iPzNNNtpVDZejiylync64I5MOFtpQ17So8adJp24EEo
        71sgllMFUaHUHeuyZuo7430J0y8K7mucurYhCOdnt2hbo/WOaKeUc754Vnnw8Y6dn1PLHGT5
        rCtVAh3WExNI8+sZmUVuLE1EKNOElHKqVyH5rxqptKRLgmb7ZoA0PckVN0BGLNy+reHEcMIm
        7bQJ+zZSYTsh0aHMGalvRB6sJ4BTsEYCdZ2cTZ41aXzd+oaJ8cY7O979xhkqC9dXz2LqXOgF
        macz1rbQ20qUCJoT5Tb2VZmKsG0LvXfW7mzNmKZdoPRlyoh6M5hYBaxtlDrT2xKZlkc/vda7
        NDZUJNJvneh2pGoNgn4OwArAbAuMRII84oQ5ea0TuymzBp1pzTHvOJXz21/jra/9Nm+/+7vs
        zr6S1NAbBP4XEfb/t9dfiqQvx83Yvo31+IQnD7/Hg0//lOfPfoa1A8t2SdvWSJGkM2mh2Zq8
        0JgeNoAD97ApoSjdN8SzLkUoSayNft1ySiWzYcGw8uh9yZQu0q3oXRY0BdRjPiceBf6kO3rv
        J2ZNsOdatlmMWgT3LQbforivWavEBhItNIvhtyKGKbTtSJ3OmeZbUZ+ulycnvq2vwWdlwu2a
        r7x+j9u3Jz776JL16jY16+6ToR5TzOwEMpzRiXqwaNAMQ6MZm0i9QkmFjGswoQYxP4XlZErr
        2A3gQ6a2aZJGN7yFzcqwaYnU9UYoHptxpMqWoNYvgJcSzJ8x8kLEEl2NiCEedWuzxnSn8N63
        zrl3rzPJkW4L01w5Hhe6j5aM5ygOMNsCA5ASbeZUKAkV84WpTrTeooqX6SRIPwUVj+enJUsk
        DcL9kNh1O8TG7p1aZvAAybobRecoD7J+KNkWq1porWM4zYy2do7rhJbKfu5YXyh1pvUDVy9+
        wk+uHvLoix/w7nv/kNe+8ptM8ytEVS3/MfvzP7xJX5Ia0tslz774Hh/99F/x7OmHYAe8H3FX
        tvUaM2gt6owYXNsRH7VQAhvpaOebYV6jr1lIwsFNhw4CoXO5GZunw6pSY3BRnSqtZb3mjW1d
        cFsxFYrMoE6lxISvMiFtAzSiebYNUnMSOsbcABHVewq29dS097EivTH0j0GlLaferHljXRa8
        b8zTGeYlBFO28uqdc/bfLnz26QVXT85pfUf1CVNH2Bg92ZN42tI2M2tGG5RCKbgprpEKht2J
        JF6TTUnVTOFikbqlhCwNzTIspYws2iLDMQIZmzNAJgPoSX4Yfer898irkH6qg+WETpNevHEA
        dzbuv1X4+jfvc7a/jgOxN+q8x1jYqg0GJFtbmOpZ1ue5lkhBAOktrKkaEsmoGZpT6w0tld5v
        XA9xRUqht5VJS/bTC55T4ETyUDzZpg5zuI75huoumkkePzfUTSOLC5S70Ttsh4J6ofYNlTXW
        z3bB00cfcPnic15/+APefe8fcOf+NynlLCPzf8wmPdWfvMRUcfr2nI9/+i/5i+//AfRn4NeR
        0tkGPgX40y0WicYszNQ9oxqkAR9mWuJITc1kmYPGl2QEMFRfQmVHyhKs6GxhRETp1sFbnmaa
        /M+zcEbQmgBJDu7NbruqIt3zzyxY7zEBTePnDUtBdKboyRaqsqOqUqVgtjHNd3ALBU1v1+h0
        hnsHczprtluEqUx0Dx+fvl5wZ56Z3qs8u3fg0edH+uVtit/KzZ8LJGtKP9meJEqb9ZP1HqBs
        dyztO23MZlGhb/1Uq2OxqVRiVql5y2iaEdU8gCGPdpITm5qXspRxSgcri1NtKVlHB7MKcE4O
        /qM2FIlWzOaNr31j5p2vn6FyiXtI1RKNYFJlN1cOy4q5opaUvyIIM+Yb3lsAidEMCvfGdLSo
        qnSPfrQRWZQkuSAGNm9UnRi0S9WXrjE32igp8BsTcq9EZtU3oo9fA5W2To4OiPqbdiKnuFRc
        dhw7kfH4kbl2RBa27ZJPPv6/ef70Z3zt3d/hq+/8ffbnb+KUG4R6ZMAnPOjLm1jcfICCcaQh
        bMtjfvqD/5Uf/+SPOF6vSH/OPF0ionTbaJvjzKdoc1JUeEelxak9Bg/JoHLFSN3w9UmCdU2C
        tUpA45l6jn4h+GC0Yb6FyZVEj7FOd9jWa+pc6NvCXM8SKjfKNAW6vG6RLqZCZsuDoyjM8xn0
        I92Nra2IhCNA1UyzdYe1lVdu32VtK6s5vW1hOOad3f42V8cLcGeqMWH7bH+X1o3j8YqQgMFu
        SiVFOWMz5fHjxtNHe3y9Qy07RHoIu4Ovl9YmjaJzHHglW/XpjBALStCag30H8ydRTU2RgTsR
        WUWg+6nO6r0Pv7M4CLNGDvDIk3ChqVN1ug0TtdHL9BPi7AP9dXDfwIy2NaysvP+dc958PUZF
        okIpQc/s3U6HTLPQia5bS7WLoGX0e5XeLil5kBdRsKj7EehUjsshxkQOnnROVR8LOhhWa1Iu
        DVgQJkx3ICVIIx4psgpsbY21OSxurIf4AcBLTFqXUE7hmvdG2GxD9AzRPe5R++Kd4htn+ynS
        a51xdty5/03eff/v88ZXf4t5vs/J4GCwxvyl32ZeXJHhixNf7O0FP/rgf+NnP/2TmNXBxq3p
        yO07Z1xeXLAdj4HKSqCz6DCq0rxZBdXx4CKSFi15WA/GS8/6YaByUxg8i2SvNE5At4ZKj5NW
        J8w7c90H+VpiqrRQEZa4cZJ1mCltWyMSeKcUoW0roTnVqFFay89gmZrfHF2iE+ZKa8JxuWY4
        /BWZMFuo055QYtSkmgm17FmWhcNyQZXCvLubCozOtl7RjlegE2+8epv7r2w8fXrJ88dHrO1R
        0bHMSDs+hu71NOYeMjMJNLT3LVK0jNoZlDFNBFPDMsXsht4YUWS43EfjfxD+NQ+CWAZJkPDs
        sVrUa9F64cb6yB2zLCA6uKzcek1471sT+3nLNpEkYDgwiErv+WdLbKSaTKNSSxIsBNhCLJ9r
        xEseTlrZ2jHcFi3S+ZIGbKqks0S2XcRRmej9gOoULbpaibk3scG69QAzVaklhiAXCu5xILtM
        uR6D4qlqeI+UuEiJOhYFFnBDZEZQTCrmZxw3x3ymFkP9mmePP+Dq4jMeP/wB77z/D7n/2ncQ
        nXP1pQ73F15pxRX/tn7g45/+Sz788E85rguwUvWaeTK29SoGF0GqDgytNZrxKTcKSF5wEyDq
        VDmldXJ6H8l0NkCi8cQtCfCAN1RmTCR6ThILVsQwOyJyC7Nj3FRrFClgCU6RDnYUpE5Ii1Pv
        ZBngyUcVP7FUWg+wppSshaXQmsUwXJxC6ByjDVPREu7yNVUpvUuQOQ5XTLs983zONO3Ztga+
        BcjhzqQF+pFdKXzt7Zn7r8Jnny9cPa2UrVPrqEGnTMWGaiYjpXBqvwy0cDzSAH5AehaKnQSW
        0hCbyvDDHejxiQnjQSU8WZeKBkWvW9Z5gIdsrvWW0Td7t27Rk9WFV79qvPVVYTdZ9nVDdWMe
        kbBoybEU7UauVmOhe4etL8zTHbZ1xbxza38ObmzrgSKhG+19WMMUUIsIn5PexkQ3TW40vsU6
        0Oy/ZpgaQFUAXFFmpU8aKiFfHFLCMd2tN+h9iyRRKuYb41STk+yw5XtLrtVxGFaaSbyfrfT+
        gE8/vuDZ0094/5v/iK+8/XfZ7V9FZOAkv7BJRwPG+oFPP/rXfP97f8BxOUIaQhc9srVjKPdf
        sviQapTSCQ1RfFCxEDurVoYTeuRjFuHeLS5Gk73jSbj24I5q9vhEAjDA4ORlm2MZBlprfWOa
        zmjLRVDgeqRlWmLCWMm5nuO09DwAVJxadpgdxvrMaWeagnFyOloLnWqdUHW6bZh1Jr2Fo+z3
        5yxHYVuuWTuxuItytr8bKdB2AKKVs5MKRKsgdLGFKnD/Ntz95o4HXxx4+qiwHkCZA9hQSUfB
        sVlvrEQGOweynNQ4XMIPF0gLlOjRDtgn3AzC1ifSZNWX7UgVF42WTupVISRjbo60hrVh9dlP
        mZfTObt3xZtf3XHnDhQ/oh48obAGrbEGXJi0ItLp1gLoG73fUtkwthYtoN6W6EmnoOGEslrH
        NDZpkcJUBetBwBcVmq+ITNl/GcL7dFK0NUCmcAhmFILRojnEz9FPPkxI9OCr7ljWS1Rmxhya
        EAkMwK/kgRDBJkj6GhxuBJgigOGIzrQ+x7qWhavLj/nBB/+ULx7+Be++9w947Y3foEy3TyDW
        aZNGM/7AJx/9Id/70/+dw+GaUjoqK1o3hMJxhV09T++gYzi260ZNRG3U3yJpjIwnIT4MvqIv
        GL8+NXSRqGekA4m4uURxLoZoIwb0bJm3B3ytJZQvbhttizRUamWM3KtTDcGxp8OAbSCetiWS
        N9NOaR6JoPrIl6yD7DA3puIheVMCIS7gfqDKLXrb2LYjh/UAXqjTPerujDLtsS0ojfO0R1XZ
        ehDW593tBHEi1VyWK7b1MXfO4O77tzmsxuPHsF7uE1SLe+pJuxub0clDMYkQTiBNL7etVCSi
        1khpT+hltG80NyHkYSAloqwGjgBKmZKoMMT0VfAtUt++Lcy3jnzlPePO3V24L7YNo4dwQfJw
        RTEXWluQ2gNzIFNL65g1jBXVwjztWZZLSlV6D4dBpNKlIRr3QQl+tsuKykSzRrcjU7nF1sJ8
        23y9eW8LFY93S/K3BFfc4oApWrHhJ+MBULW2UFTx3tlsZI+WOt7BV9bIGLXmoaOn9J4MPlOR
        dO6/AYKqCuaV7g6t4XLFxx9/nyePf8bb7/wWX3//97hz730iyc2a1OzARx/+n3z/e3/A9eGa
        mrMvYUllSGeqt9i2A72tzDtl2u3Yjke25RpXoeqcUHVNICEimRBN5qIBOJ2K41NqEZ5BUfuU
        DAudqe4QUYqvDN2jWaJpHtB7ILETZdI8327mlFgLdzmzNXJzGad+IsXJK+09kd1Twz8GMHUa
        jZVZQlnhXulUqm4Ub2hu7BCXawBOE+znHSrQrDFP55Q6cTw+Y9s2dtOMU4PwbZ3D8QWH5Ypp
        OqeWie5X1HrJO2+fs7SZ508LVy/OoNVg1pQ5kOSMDqMI0yk3I0AyhAbhvlDzoNRTbSgJ5o1B
        TyIaHFckhTOZTMtojykmSZtvTuuNOl/z2lsHXnvdmbSloCGi76QzQ8wdipl4Vm0Lz2CViVI0
        5YbBDkKUbVuhL5zPFVfhcOyYW/JoJTCIYqhBI+h5cWAJKru4Fy9nG/mUcAvXDZ1QsaghpbDl
        4a2abCkRLCmfnilxkPeDamo9+65OAEoEVuK2MFqCJ+sc8hmcSqvALkr+2Vs75PsJnoSYw9VT
        Pv7w3/D40U94/9d+j7ff+V3q7pXYpJ98/G/4wZ//AddXz8Lg2TdgQ+j0tlGnmXXZsG7s95Xd
        vGNtR/rWQoUiU7oeOFqHnCpSpBgMaDdkbA2S82DVeKZBo8YaaCP5MyI9gJPIpxMpDi7vXM/o
        TkRzD9ickcrRcaJZfYK3JWCtmLjdApJXSbfB8LkNHkamhgQfWCq4Gbf2lXm6g7WIXtdXFwjK
        PJ/j3pikBgnMjDrtI2hbY11XpnpOmc4jDW3C4fAYBG7f/QrzfIf1+DyAlbbStktmrbz15hnH
        14ynT4zl4g7WN1T3SLa7RAgCvGsK30kQbzBveiZ1CeidYM+426WW05wZcgO7hshAIFoibmHZ
        CXg3dLrmlVeveON1Y5oU6QfonULUsZ71mucGCSJ+3vuiQI3nOigc433dIKVxW9to1oMF1KK1
        Yx1MB50yDpfeLDIfKbS+xSXKcE0I4Mhpp1R+GMKVOscBNQziEkodJtpBfBhSyTwMXUC2tFcl
        0l6Purxb9GqHzFAZxnSe6p5wBpEEUXdTuIkIMQysWUGJOtbNuL58wo8++Kcsxwve//Z/zzTf
        ofyT/+7d//Hy6imqHWUBO0Tz2Dp1muOGW8z0mKTh6qzLkb4JdZqCpVOjTgnCsyGe4/hG70du
        HorkA1OJzaSlInnzSEAn3Pw8Ny4MJ3IV0BKuCToUKRRauyaLYbxFXTGQzEFaD8sTzUXeYhZK
        Sq8EYa7kyMNoSZitTNOcqbxR68RUKy7QUZZtCeS4FmqZqFWzFGq4h2DYvdOsM8/ngTQbXF0/
        pVTh1vkr7OZz8B4RXzWJ/cGmKgqTHtntDpzfM+bdCnWle6E3j4FJJU57LXpCWzXlayRNTkpE
        FUkSvqYtjJQAiSzDsEocWNZyrGG3YCU1oF5x9/41b7618Mr9HpPn+nXUXxJa29MUtcQQUlIR
        98EsW0iO+8Kcyp8ijveNdbnicLzg/NYrgW8QLaapKLXs6N5j8Yvc7BtAykzrW66ZOTGNnp7H
        N7rbokH9M3O0Rno6HBBFys2oDMZmzpaf5KHvA3wcyqyROURKGhrkQfMch76ersUTUxF3eo8p
        CXbqZCjIFGhyifdrfeH68hH7/Tl3XnmX+vziC+aiOCtiC9DoFqDMAH3G9C9VixTOPeagFNAS
        qW3vgTAiQXAvaqm/ixO5VKV1j9kq8xkiHuwhKYn29qTlOkhHpSMS/c4BdkStZHnZ0fty8ZAI
        WbBjNtsCPcxF2lPPKAlkjEaxJ1Ian3fKKG6ITmweN7jWkKz11lmOL9gkyQZ6F3OlBrpBnQNg
        Qie27UUcFlujzGdgEdW2lOztz14N6RxHwGnrBXRAA/oXEUo9p/crvC1IN27tOrcnQDuLGRfX
        lYtnhXa4E+2wRNfLVKNuyowhFlCoccgtEwus05thJQuF7ngZdzVSakRwWbnz6gX3XjVun0Hx
        xrpes6UBnJc9UpSd7um+sdkxFSWGUCGVJQ3Y2iXzFK0Gs46YpLj/GMQFjxRymiZqLTQriB+Y
        p6w725Gp7OJnhaBU2hYprnviDDUIESTJgMAdes9goIkwDwM4QiigMmMtBnTFOutZzwZA1q2j
        Hki5lDkJIoEBBPMs3EHc1gTKyI5FzwwuDqVuPToRAn0zOnPyADpFQL0lYuwcjk/5yQ//GXdf
        eZtaXejtCtWN3o8ozm53jvuW/0TiUHRlnifqbuLpU6fg7OZsHufprzqBBRztElS+00lE9vpa
        p8uRWoWz/TmSrJDWgjwd/kKK6kqZJjTNqcwLKpXewoXeetQ3cQR2TECs0/xIlYluDVVDrCAF
        ghDYkRSXh2+OIjKDCKWWmJytxrYaUKkSUjtjok57agkPo40ddYZXbt2hrc+izvRKW2NydjTE
        h7pfqeUcx5n3Zyg1HliP09pNMTasOaINKeeBbsvMqg23hbZdUuuMb87MJW/ff4P+mvD8+VOe
        PlOWwz28R6QoWk9prSRaHSEehrPBMOjGwvE/0mSQEo4VyMatu1e8/sbK2Z64Ly0OmlonpJwz
        0MJIhxtCYdId5iHj0hIEAfUW6iepbOtKneZs2zXseAVm9M3wugs7GRG27Uh0z8NcLviziUJL
        DiJmgx6tuW074r0GJzojoWiOzOgruNA9QEtra2ZnHgwuh3kWvIx7shCa3yzRcMS2GATleW8T
        GIqSrGSnYR8HxIlSGrWopTA9BjXXNA4A8S3uFx6HFVClUBWadaorly8+54M/+5+pUpbkdUZ9
        N01pNwEZSYNuVTV6R9eXB3pzzs72zHWPjdRAzyKtsim4jyJ4jY0VJ4oGnJ6w/bZGWqWlsNvf
        Ad8hujHXgLqjpAqZUjdDZYoUpQm1zIEHaWVdj7iHDYp5D1qClPAsavFQi9TUmqaUrdRgJA0a
        HIRvrgQaqlKZJE4/ccHaynSWCCvJuJHKdv2U/b6wtoltWzDm8EOqu0ijPQybS3GmaZ9srMJh
        PeB0JMnpzp7OGsR6DSCs1MIst+gyheYWxWRFUdbjM7RUXrk9c+fWxIvjC549EtrlHcyT2tgl
        OcwjlxstsUy9NDIfKVFJWe80u+L83sqrry6c7xd2c2FbllhgRaFMBG8s3SyyNRJbvN1sIj2n
        2Ur3lt8Pu7pnawcUo20rbbnCvVN3t/E1UVARTpzv3tB5Dxjde1iLDn4xcRh1d4pUmgSJZii2
        wv8qU3BJ/rdnnZzEBWs37RTEoj2VdX4I4COyC46UmdP4E8aEuUhfi1a0ps+TTIGRJCjlpglc
        3ojjJds84gEakd7AboOpHW4VHaAbDx/+kNq2Y9Rc2ik1GDU3Oz+LaRFEK8t65PLFgf1uQquB
        2qnXVSzZPVJRmYMFsgVpvfUe3Q13hALSMnquSAtmUTSnQeuebp25zmyDJZQc3u7EYpEJpyUB
        fShANJQOFMzb6aaQ/dVQ5JcTWOUJqZfhCp+lRiR8B6ouFM5xqaBGa0cqw3wT+rZy1Q6Ya9RB
        ekbbFuZ92G6jFWtH5ikOt5ruCKsdsv4ohPmyIj3cJ4pWRKcEsRxnSeMsz7ongBKXidYPyHoF
        orxyfotbXys8ffqMqxd7+nYWiCIamc0QPWg51VlRgBM1khu78wNvviGc3z6y146YY9sx+qk1
        hAdigzYYJH/JrAH3FFnE9bjF/J1gpJVYqLaCd9Z1owiUOlPKnk5kPOrhA1UmoE6sy4LVYB2p
        By7CS0yngIU2RHeBmvuQ1QVrqZTABMSDyDGwhtYbu7pj4XDqJvTe4nn4AH3WnDZRCIZWGU0J
        xlhIGVzhQaNMHXOguyWMAlI9M1wvyfQ6mHhTHhrBO646RUDoEIIOKBJRuQqGijPXPW6HBBPW
        0N+1YLmUEnn9sjZQqEVDDVLitLC+ZnM3UdmSFwhZR6bnT08GDTOmw1Qq6gcpc7i1Y+mtEzXl
        2hpFU82R8jbLuoqeiJ8ZLv2muWxr3DCSjZLk7yBON6jCsNBUDUF3UMnANbiWzNn49kb3NZ0d
        OiaVrT/DXdjfukMtUS6Yd5Z14Wy/w61HilenTHd3iAtrW2nrFaXeptZbbO0QJPIEyEqZ4jN0
        o7PFSUtLQGif2US48G8bDPFzWw/M8xlvvVE53rvmcDjw4nJiOZzDOiexIXjT0ZaQkKzR0f0l
        919deeWuMU0T9KgpNzsEGFMC8VQJsgNJkLCs75v3mMVaYjSD+RZAoO/ossX97wuhR76m+cRU
        KrfOpqAbrtfpBBHzSwP0iwO7aI3DtUxZw8a4CSRE9JhkFhU945hwUIcygWHiRsoJRTVT3DUR
        cT0d6O5GW4+RrvYlD347Id+oYDlKxEe2lmteciBztPd6VhdpNVpnsJ6He2I8HiBo1RodDykh
        OteI7b1LHgqRkVYwalGaHVGF3g4gHhxIiBpElNbD9mSadxHavQW1Ly01VWd6X0JOpBKnby8x
        ksAXRi9kwN9FZ/RkQxIA0/A5qqXSrAe53CrdO1XigRSdM/0Nxb1jIZIQRb1EZOwDlbuZkRkW
        LjfuCO41IXvPCJbj7r1kSjTqjw7dmHb7MMXSksyqjbPdDlGotSBSuD5U5nkXViE6M8mM1nPc
        idGJW0jrigjbdgWWNDK5eei9NQJSlQS/blz5R6QqhAO7K9Qy03pj61uMVxBlf/cOr96fuDxe
        cXlxydWLyrYUtrah7HE68/7I/ddX7t/rzBrEd6GkQXbUmPEZWgxkIu6baklFSCywQqLatgVa
        mpCK0fDu9HYZh1tvuBWaO6V02tbY1uv87IprYZ7O6e0Q0KBUXM6SKZRc2nRgjPZHoYjShprH
        jRjJ5WS2O2gq3Iy/CBeLrfXAM5QTsBdsLM3SoKBigXMgKNFuFFdUdyzrIdBe6ampr1kGWYrh
        e4Kau5t1pD3SXY+K2j3GmbjFzFUpJYAjT/2uTiFPtEIVtawnsj4TwbawKdnNd3Aa63aFd1CN
        h6QS9iFFKiZGP439S7Qr7TTc+2n0uiPUSVDZRwQIA/TYqCoILUCeUXtk6C+a4w4ypao1CAGG
        R/TsjVr3aZrlp8OANK+qJeVp6d4etViocoJnaSk2rnkaN2ZZmbWkoRW4arSZTtxgp05B35tU
        cK2s24qXlW11JjVojms4FbhkmqoFLXdiXEW7ivtnHRdnmu7GaZ8JvJaazfE1IsupgoppZi4h
        UA6fnhLC6xqoarcV2a65szvjVrmCV2+xtpXjsfDicAAOvHZXOTurKJ1tOyAubN7oouEvRBy2
        IjMiUyxIaZGea0Xdsb6GDUydsx4k07PGujQ26xh7znbChNFkDTNrm1jXKFekKFqncOnAcQqt
        t2j7ieEah4ZqgD9FBcQoJvRca8NYG4IAET1IOx0okgc81hLPWHFp0bVLwoeWgvqEtTUzvEhx
        3TtSIWxilmh94ZRpxpoxBBBK9K9jgaWjJe0GYKKkDthPG7HoPgHOVDT1Fh0FCQFJpMVGnacC
        nooFggRcpzPqFHWP97BDMe2c7e+cLILOH40AACAASURBVEzGVOla5tjECd5Ey8IRH4qYSPdC
        v9lBN6a6Z+lrbLYErbwGmwXR8PkBLH1iZYhsvWedMQzHaqCL1jNFL0Hf05qZgECRSFUz2xBp
        uIRNiya3uKQIW0RZs+4qGjrEjlJkC8qdKCYRPWNxH7G2xMPSQt+OHFdnk4bompvwKnq7RSm6
        T2VFLIIgXdR8SCukVaUT5YOWki4WHXOnE1pYJw431bD6rFLSwnOLGlmntEg54F5Q3zNNd5nq
        wu1bB6wry2ZcXR0524XJlvc1zLyAGzf7IVMLn9tR38eBaKcjJUCptBjpC61fcjg2mF/l/OwW
        YlcgE50DmymzkAZh+8QxJrYEnlQC+XRbcG4nmJZSPY8NICNUSlq4yIz5ynCq0DHcKlswicWe
        0Pa2WWZmiVdg9L4ExXgw1HwAFZlQJX3VrCebrifzKzcylW7HaOVlG6fIzNDgRnsv8BW3JJG4
        BLhUsu8qcuIWRCCpxF/9SK2V5gvWgoRc5zP6ekCyh9j7GjhDP4KF6BoZFy6I5uJRO6FrPojM
        WkGOAe+nRGnblth4HpFhqBrMCTGv9ZiQzRZ1hUZdKe550g3+7kB7htog6GaBpoU2kyQVkOZj
        osFWKZoLO+vvMCjb4RS6OM09553Eog3lgzMsOekrmzjNN2qZ6YRd5zzvKaUw73b0Bs+fPaPb
        JednZ9QpkGGtt5jqnu6NqhOdAUYIvedAKIlNHVYiDfcD4jUWDiGTi2tTjDVaS14RmVDbKHUH
        smfxr7HUb9P1HG8LdXtA4cfcOgvQq/fn1BoHnpJKGAmfYJVhT5nc38FIGnI3iXsbPUmjb0fM
        jhQVtM6sHpiEC/S+0NuGW421kMobmMLC1KIuLdo5O7vFcTkyEtiiBWplW6+JHDWeeWRvA9lI
        0oaOWjEAGTNDZZeIreemr1lNBBe36JQHuSUyfONxJNLpXQLMK1MEAZnCCbHOyemFOpGmAJWw
        DMq5O6mCwZYAlSS7EBoBrHgcuoYlLrELt8K2BLMqskfF+oFJQ4mg4vRMd/vW0NJO0H3A3AlL
        D4WLhti3pAeMy3BtM6Y6hdbOFTfNpq4nGBLfGzpEz8I+ATfilBOTLKwDNKplzgc9qH+RpsSJ
        mVSspARG3TK4k0ktVNA6I+0qzcjsdOIOFMvageIaaT0lzKKt0/ox6564brcDtd6mltsU3XPV
        DNltTPszqsJUJrDGRhC417WnKbgzi1LYgzhzUYwSZPHeMoKF8MCt0bYlWTxhri0vRy2JWZ5I
        EO3ms/ssx+VUQlweX+dav4n5GaXOyP9D1bstSZIk6Xmf2sE9IrOqe2cHWIIQUIQUvv+zUPgG
        vABBYCE709WVmRHuZqbKi189avZqpEe6qzIj3M1U/2N7Y5bf2OOvvMX/hcXfeYwUvVulWWX4
        Em7wEnu0PDQsTe9X3q/C4sKvGM/UApcmxdSYNAvG8ZMST9b8e74oYOWNveuGPGMyaxCjsBx8
        PHTQLxHkHgsfqrgMO7F6SxxovUZHSf9Ey7ULW0DiBrOqvdGlfCKcaoGFUHj3RbOaB+X1e8vu
        5qZprF6pHSihwVLXF0QaLzrKZVYAuxxGWs/WfL6AIaIk7dgxhGtYkc2u5L4KGYxQE4jFaGuK
        n5vj+ZL1FbuiLBLxtHhZxGSi1j6nubrR6g2MFxJ4rKcAniUZ1IpFTLLMV19xrVXoXP5/7ko4
        8CwHWnmyNUuXfD4o00+q7QIzLHS6r1R6UOnXeeJGbbodhMmBFX35Jb2a4aG0hwsMjJXgyE11
        FcuTX83R3Soelg+k2r2VwH4oraGaJGhkIJrD6QfrdLwY/e13ij85x2T5B8bkVp8YO9gbzRqe
        Ur0A5jp1U0Wm6tkvJwuR/kUMv0QdqXD5+QzC3/hx/i8s/6BtgxOn9xt1f+Msv/Pkv7DH/8iL
        KVVYTHleiReKOkPywHqR/eQuH5I/Tg+GB3u/YfHIQq3JnF+sEqx6kz663Gk347YavYKnpa1Q
        6UDURi9wBhCTKJb9pDvhPzUur0a3K2g7sFhyzFyOq8g9s1SIBsszfHz9GuHXkSDhEAOwBiMO
        QN+zENpJeTmPev7zgrJzaXGv/7bYTQjIWq+UCGmLP8Tl5soXXuitKXqHAq6yMBVAGdTCnIN9
        k2Wu1J05HdaDhlXG+NR1nvrHczyTFtgIBLGvVSRTK05p+oMLTWhooBssIvWIv9wmxRp++dOK
        UVrF3fD5zIdK2loBE7tG0twNIiSsXle5bcYCXKZdnYzgS3rNq4TpCmcG+UCB3AMirUeSXkU+
        8HFxqqXjdnKvg4iGBziNDBPJCNKphIBQEe70IXF4dAJjTKNUGMcX0yv7fmM22PvG7faOrUqE
        tL/n5ycWk61PgT71L4n6t5RWXgKLBbbkma27UHWqFEsMCoq7DH8Cne9vha/xnXG8Y+7Y8a/c
        vz0Eehzf8e1/Y7bv3MYUchkbrwByLmI+jdshz/Ba9itb209U9vyB04nyTbfMfDJ4ai1xyeBs
        U/h1rTtn7u+UktxvpayCrSmufD1l0OobdhyEH9RmROl4VOwykoe+90tS6nEm+gqxTghx0Fc+
        s8QFLW8+pXOQo7i6VT05fB0AGnmRqaBoelpOasfFQEQudjVvPD3zDV8aU93UlAd5Q4az/Ew1
        kix60q3rvSCZMf1OkTy0DoI2zgetBn2/Cc6fD1ptPB8fbFuhb7tG33m+/tCaa4GnY2SyVAeQ
        0i3sJi7T4peb4NJYBvlipIcz/9dyf7j2AV6OjYLQ50xBN2PF8XpBi+lGlVxsJBXkmWTQWeuQ
        mD6QyiP/nrbt2kOK/oxrvyY5y+WpzwxxXMZGfYECjcaWPaINt8IazhzBOidf8RM8KNs73dRV
        E+NJtzeiVkoYXr9zPhfDhg6y5RAP3I1Yg943rEq1ZLUoQcCuGJXFCnF5ZhtEoWR/iscB54Gv
        YJ3/Aaud0t+p/TvH4ydzFCoPzD54npOyZch31DyKguL+sq0pRjNXAjOUgDEZ80ltG+eqzLW4
        VU011d6E/jusUNt6LYU1n0ooNIUD1N5o9Z3pT3wdrHkw1htb27E62VL8gunmlprtWl0Uflas
        6Vvz8zVShrYacZdLbiFSCpqomIqbzuu3tZQpXqBRJjgiAYmF/jaysNmKahLVrjCwzEPSmqxS
        q5Ijd1HGCytXM8/mBWK9nDBWlEIiRFsXwSUYiXiqsd7CqahmboyHVA4GrXeWn/TYOI8jRz4w
        l9yqZPsxyJ+ny1KDpX5AufCJI1f9XSeXZdOWS3VUTeNJqxe/KBnh5dqIDIS68IJiIZFFAcUu
        JsomJUJm/VZa1WFwAUrhBzW5MWEenfCg10YxnZyTIj7vNVJqhKy15Y4gE0CphTUaxBRHN5Qj
        VNrO43zSSrBvb0TpjHOx5qTtd3GPRRUK3Y39fqdXY9//AlF4HA/G+GKMxUiv4lYbtRdKkdxQ
        UJjoIh3ARqmLrTbcOwCzbvRz0OzBOYyfvvPzEVR7p7TGWxzU+H+Jqs/dMpB8hXbNRVBi177v
        4EXRKcNPxuPJvldar9r5puE0anun2eU+Gvj6opROrOerGIn+xhpS15RsEJ/zoBgJpOWEswbG
        RrhGVZ8HyriaYNtrHC8FfM6crCzBJMM9U6usSUhQtCp4dshcFrZLPphvBKCRWHqvlcKYwStm
        NOzlppKx41IpXaFwI8ujErQ0JSxakKDTlzKeZiri8nCsDSIqbpOF08rOmkf22ey0/fYdgPP5
        Qe9Nboh5SGU0T57PH9zuv7NS2dKT8NWNqZPKcM7zk8is017fWVn5t7LL5RqHyaSAWK7ZXMgN
        rbVXuPLFK1nR+PJqFIP8dxbuJZ0rSdHkDRcIcDAErUfm3Fxt0pouRChbTGrZBb0TrFC4d+uK
        O1EMZf5d8aS2nkCKAQOfxjk/cAoz7vj8Sb9/Y+t39u3GXA3bJ8UrMQ9WTPGqPvCQzK+yQzwo
        1rnthWXvTP9Jq4PHfFLaG8cxifWD+/adJxu9B1vtumFLUG3PU14HJTh1g3/5y//gb8//k+mb
        JJDNuG/Ot/r/sMV/x+2klY2ViH34xKxzYfRhFeIJ4fz4+Km29fLOliVXCvrSI23rgVlwnH9y
        HF+cs1LagdeNMNj6DS+dj7JxLof1Af4hnGM5TKj336E8xQKUIkuZ77ptWmNzMQSXXFW+40g8
        Ij21AaXIpljSa1qKgsRyVteNqR0oX8RfPbEYGKLTWtvlmW533XRzag1pymeyBBFlZ3diWY7j
        h0CkVIwpeaSmRhcp50rSWwyKvVGKtAet7ox1pE91Z3mj1dqZ44u+vWtmPr5odSN85L+0OI8P
        7auJlPXtDS2OwZiLGYvwpRENuOoJX9I8rhQ/JQL6dXoVnTAKfbJEXPWBRYZTSV30C6i4RPGq
        E1TjWd/2JK0jdcCeiQ9SGEmqpQCuK8MnfKa7/5aksbpAawrsIy6YHzAR6azOdNE21QK3krm/
        jeMxGFMdIXMmQFFviVRrj13zqZGbRbATyzl9cNs3ifExWrkTPCWLrFlzUDulvjNNe/d5TlZR
        QW4vFa9nxnneqXXHPVjx5K38V/rtg5N/YXJjb8bN/obZE1Zh29+TPusSq9SMFzFJL/14co4P
        wjYex4G3G9/2LaNSErcrix7Gqo15PBnnk/3bf+T55ye+nnhojTJOfH5i0/HtnljFSayT6ZVZ
        O8UWvTaWLe7Ax9dBsGsdueR2rs+pWHmp//wSssSlTfYEPLMA68qYKi2fq3hNacUaK3dK8sa3
        IkxAIoUCPq9XOLljTYu6WMib1DSC167C5cxVEu04ha7n92eZ8FD4BcAW6yz/0Kh8TnmM6w2P
        QVvzJ9v+xpw6EVrpGi8pmYy3cT7/0Dll2klLFTK6lhLTWr+rys9kqHaUHE8aYSMMtV93vex+
        6vSxPAVrZS7N7HGVH5lsZFch0FW280owv5z1RbS6ROTXDvsrrKu2PUcZQetaUdI6F4m8xcTo
        6awpefKi3aCo59RCFrNLlN9LZb+9UcMZ48nyd9qtUKqCm2U6FmpuVXvyOUaCaUDVYXUuY60z
        Y0JulHqTfpgFtiVfJxG/2VKqH5XTg7YJmFrnl3bKOQnfKKWz9XfmenLjwY3/hhIXv0ncERtf
        w7j3PylJv1CNxdILvg7GejLm5ByD2+1GlF2TioUOGrskeEc+vYvlB+/f/xNWjN4enFPfrcfB
        +fknx/zCZ+HWlU87s/M1bEMKn5VouwLAJPjQM6FLsuv2TjrELOgFDjfWmsr2Rd0tfsXDFCCr
        Toyaj4LGVjUalFwdSuq/NRmW0kQDVZnEr2ze8EWpm1RkefPm0wUeWPVMDFFvqsQX1ypX8fnM
        JzT0nSLzR93u+Am+tOvHFJdMnJRWO5bBX6XJwiU7lx4yX0NlSWtmqFJVvOfxxSXfq2XP3U+e
        1da6tJHmyeEtgiFR/kvwfKGJpGIkUomzuILBtLuu1Ipc76BGCgnnL8mXuFm/Xj4ruN5lSf64
        YiAFRmhslU7VELABMFMSdhnKCZ20opxSEZLtaK1UbrUx5hdzecooO7Xdqb2neblT2w2rjaiN
        1m/0/i7RRDzpNbA+X0AB6S2VEqYDHcquh4uGW9ODkNrd5RKFz/EF80GLwcaE9RPGH7RUZpmt
        DI37pOA5hp34nKJ5kvPEYc7BcT45Tvgci1kabhtR3rQWrMKkE7aS8ywwF+v5qWLfahRThEyU
        iq3B4/NvTH/S+06pAfFkzE9kCr9R25b85BDPahVqZ4Q2cKwQpalT9rU66XaT28Ry9UrEn8vD
        fHH7Ekp4GjAELKijVsmINf8e8elXE4InMKcXWyKbFTOf2/oS00REKsIuzFcT0BVgEAnJyUCR
        +gLysEmmwn2w9zeO80ltlVJvrPFJLUE7x4HNxf3+G8/zIErDIiRu8IPSGuFZ2pslTGGF3jZV
        R2Sol+rtJDHsVZ5QM6PVptYtJm6nbodQPEtv24uf9LleY8M1mr4k0vlL2SWMCL1IYz6Fai5P
        x7sedjNLtdDElw6eK9tGAIOkdlstqQ0O7ZqWjpuXn1ZTwBrAGljbXoDCXJOfP/8/cavljsUT
        88HWvlFYypNdla2Kn61VCXm1gfl+XT4wF8bOGAelCDnvdaLqjIr7QQVGiH7hkigD0wvPcNYM
        nscn8EFrSu7b9xSP+I3TK8Gmo2cMSv8LXiq1PrFQ7vA5nnwdD2q/KUe4dIqLdPeY1LLSzSHJ
        ojyRsg2OGLTq6sKZZ8pJT+JYTPudVm70vWFl0b2CbWx7xewND2eb1y1eqO1dIJFPGhn/WdP3
        eSncrCYFZy+xQnG9aDrcxCMTkXiiJHpK8XeuUmXCshpTvKleOB0Ctd/xOVkxfzlchKIxY2BW
        sz9oV7ue1cRYdFn5lR1dlfOF/UPUbIJRkogauBgLX4raCQ/W/KKaQsqa+2RrnefjT0rpmbpe
        Oaeyjoo1uQay9CZs4W6UesMsWAxKyDBbS+HayZ1B8fZSYXgqgDxHT4uglI1Iew/rYK4UUyT8
        7/7vfaGXHNGKpHtBgdaJcUh94064sW3yFPpyepFsq2QNX4qX9HemhLJgTFPw8labRjmfOEoe
        UA6Sp9NIYWhrHbRd7eIWgXEKfg91XIoP2Cm2sPlFcWetzta6FCputDKJCecxsOqUGHicekiX
        HtBI4OPi22Zyd5Z0iPUbpVfa/k/4GsIQZvA8T8wWt/3k57nxP39oFfnPfz3Ztz+xJdDpHIvH
        GFBafkedZeqbad3w6ZQ4hHdmA9vyYI2DOf9kWmOy4bGxxsHyQ4dsveH2hRd5ka3AOD75OqBv
        G63caFXAlfvBQWV6kVNn/aGb5wX85ZpTujS9qlqjFIgMGRN2kLlZXProC2kV+u+XF5TI/AEt
        18XUj1sz7W95YPmCSHNb83+VFZwxIKw12LZ3KIFZZ64zf64to28zSuXy764LsDIaPdFlyQLX
        WAw/udXvnONgzU9ufVenTas7x/FBq4a1yr7dZMUxg6jMcdC2TG4r6d/LNHR1r5DjkvhA7a45
        XsbUHlsrJVMS5lzEUjJgyQBr95m8aXoUM67xIqyvHCL3IDKhQSO55xdU86QaGrEzM1U1E5rB
        V+gFLjWbsMMF84f276DjKF+n2iZkmIlW5k3jTugGHfNJJ7DaE2qXIPoci2crbFvBluEG53wy
        x0DeyYWXghft2IZO/bDyUqtcOua1TgWC5QNnSQ8tnxQa0x9SVNUtQ9QqYzpl6cGL0llR+DwH
        rcE//9MfjKmUgb4V/Pmgxk6pxjwnrd6110ZIy4scPEJwG8Yk4mR543z+qXa9ImClXSbpJpCm
        tJ06H9pO/ASDcQ5FWYaoOYVuGT61t80BrQW+KnMO3GTWIHdIy8xndbtUrCiqpmYNCSYj+utA
        j9z9IdcHUCZRUdFYhOpmr7SODLnWcyLFkh5B6dlX3n6RY2ypciCp0XzRW+NKWjWrrKUk/Bi6
        Sa1k1lIRzmC1J73XVbtBCBcJY54f7NuuaaIYZY5DIngkInbXCVxrYxGZ1nBKvVFVPyAYW1aj
        XwCReKi1pq5zFKtY0C8011NC5kjTbe4Kds1uWfCk/TF3hFKg1KxaN65waLP05VnjSpDzkCQk
        THV6ArV0qEigvxKsahBqXbNUk1CKkg7sgZWVp7ezVqNQ6Jv8r2GyzVm9UXqntUbfJCEkLWse
        kjSO8aGXxSLb4DQFDFeY11pSEE0/abVQrbCVTS6J3KXIBHtl52hsNjOsbfTSJRfkiUVWUq6V
        JbxJymd2zrZV/vpb56/fb+xbpZjqHUoTjROpxhHHeFJLap01xjCniHZ3PXDhp6g3S4Q3Mv4z
        90FfJzEnVsRx+grG8aDYrqSC7FIZ81PKo024ASiMvG+/sfd3ii2OuQhrykcmcs2UakvxNJdS
        SC4rfdcktWK8ePKX9FMvpgDCDASH3A/JVUv8p1rqZooSyq89Ny66RsXBZpXpB1cpFqSLi19N
        6VfDABl453FyCXl0+5p83SO1ButIJdlJiUCexLJzHE/G8YOtizBurerBXLod9+1SEsEcE6Jm
        uU06XkLSKCIIP3+BLfkiqap9cRUFrzlf/FUv/fUllJopACa6QhQIgFwg7s5cTxRIdhLky0gk
        UKJ9w0pl+aEP1kumG2ZCfs1F3gxiUNJlU02EPrn3gjKHfQyVPBXo9aYDouTvxpbuoTe5SEqH
        qhbqrXesfkugK7/btmlfWSvlx6J9lOauQKu1pES6RCOWXzQUxnwychUY44uvrw8ez8+0EcYv
        QXjpRBgfHz85nk96bdR+4+fX+TqMe6s0ghpOr5cIXd8VaxJzcIwfKPbj+poFtrRyy/LzneVv
        cu2ENMeirGSwHmtQWqXf7vS9EWUjyp1t+859/0YrLUfbRVjJHFvw0sE2iSZcBVTBneXlkjGD
        W/KXlZa9sa8i5IuOKV03Z34HwjYuRVNqw1OjfPXQhkXWdSbqSyYPZjOdZ9lzxFAwQrk+O4Ug
        WNGO2qreJeyk2KAWhRsQ17Nqv1au8YR4UGsnViSQWWgqph2U+k2CXl/M45Ne7xr4QhK1moqg
        2hsx1fDconFZyNRyLAP5TF5SaOp4oai60jOypG3U1ti2G+4na53s+11OCA+cUxpIt1RByRBM
        xi2W0ihly0qAjTEPcaA1KZpagI7HqY5RSw1vOLFOiitDZvlBqY3pV9dMfwk1cI1/V2pBRJVZ
        u0xK+CtDNeKUyyeC3jf61hOE+sbj66T0iVvByx3agnkStcL2V8xPaut6SUtKDvtOLwG1Mk5F
        TRI6zQ2Fms2lmyPYxLsZ9KpJwYpUQGNAqY6vncdx8jz+ZwZ33wSGGMznF3YR/Rhmd6Cyxiky
        NE6Zy9tND2dMrDb27aaXOYLhirP0FRJt+EiDe2WFEbaz33ZK3aR/XotKyTCu0CFoMjG4bxQ+
        MNNz42OAFyLdULUYsR66HTNx3nxibPnWZiJHuaJiM8ZzOSuuyE7J/uLiM00z34qVHHq80OKa
        jWcFrUnVtkSXjdJ3fAoPiaUSa1+DOU+F0a0jhfKWXlhhG6Xq8ATwOCj57ig0oVJr5RjP3Hl3
        Wi3gVMKf9O3OHD+JIQM1tWLutO0SEQetvfGcPyluSmCoAhssTxpJsU4oAqTxppMhKZUreoWi
        yJRaqh7AeiOocuIAxyH/4pwnV3ObpRoErpa1mlap/HPRbuYr0pOsXaCEaJ3rlokFdVPAmKXZ
        fS3xhaJHVLw73Lksepg6Rnq7i4ryDM8qzuW5vHTQLXqS6EO1iEhaV0pVMLRBaTfOEawkzC9P
        bnNoJZIGgKvJu6QH8nr4mgWtGltTgr9CrxCXiZw90XKPr0GnAZ25Dvl43fBp+nNZzPkT+m/Z
        7XPg/qCWTrE9eelGbXfMZmppawI1xqBj8ck59TOXKuFLLSd4UKuM2ZWglwzXZuC29KxwJcob
        FqfidmKyVecxJ9gbJb+/VpQeSOqKaw2siX920Aica5lfzpjSMgImWYKQecAtg+jyiCqt502c
        Bcqp5b1uXAllfhndyefPzDEbEPW1bgmhPWjtjUjswdfAZxGVlCKdSw+w4ottv2ulSPGDkzZG
        otC6Tsm4oGJrjPMJ82Dr6gX19WDrd+Y42fodqxnvHy1ZILhKbsu1sKQoQbV3LaHnX/xSKXJy
        WJGes5WNilNZbK3RmvY+7R5a9ks+5GEZ42+k0bflbC/Jluxv4gdlLv+V7B6A+OFMGgdsHZSQ
        CgkNvwlm9UQThRqupd+h9Z22qcellpb5NxsrJsc8X3xzXHlJtoBDh0tue2ZPSjOsDFrRTyib
        rmocLSs2pILJ0T/ZuHMNcaU6Hmnp8wzXCG2Qu6Uoh14r+1bZt523t2+0/sacJ7XqNMev5rJD
        goJSqO1OaRK16LvoEDsLpT+YCUUvoVTHtu1st++Z7C7KzKeAmDEnz+ODFYuJy17mStIwoFcV
        UE8/gML0QURlrRvuIvYjFPOj4iQd5q84nDR4EK4xFE/8xLJuZKJ42pJSv4vmszSGWIKTpJF7
        6b8D3JWAn1AtlpbNX/O/RuZWZHa4/LlYPt+16oVNtFd6A09JZU8MRjlOkuM+6dtG3+/S75a2
        M84nrUuNIf3uTmRqQd9aushhrvUap7aWyNY6ICIT1rRvziSChT4bqWiHEK+UXIYeaq+UctNJ
        FeqgIfTAVkruV+pqMfMX6quPKxMc8iYj70tPz6ChB8/92inyRrwqGq3nz1ZZmbwPV+el/KC+
        ZKlzE/JnIeK/FKfaotfr1hRFNH1xnA+ez0+ejwcxP7H4Aj4x/6IkKFcM9qKpernqCwIpTNwH
        YyUnyHqBE0qnrym2f8v9P2/iRMbDNPXUgjo9a+UqMiqmqJZiKvJ9jJPn40msgfzQ+buZYlxa
        0+FasNeOLvcJnOcn5/GTtU7K/AH5sql2beoAjSl5YyLTZoVWCo0n9aXp1rPQKrya40untfek
        bk4iVBItZVnWZTlIXTFpJtWQ1XiBQnkK8goXC2ErrWYtZz4Prrh+5TD7+iV+56JaSGxEf4zi
        UErKZBvWdsCofcPqEh9eqpodioQQ5QrFrk3pJSX+AXRCE6mvTI50KJ05B9Vc/mf3SwBQMx1+
        p9Yu7WvdOZ9fFE7pFOcXpRTGKdfEvt2Tj/zHOI142cR+qYBU3FPNqFUfWrnAW+O6V/RBFKmB
        SkoQqxYfLtJakkUoKPyqFPW2RJz6AkyjobpiIi1nVy6O9ktfi1rgqhEA4XG1Kl3dKiyvjOWU
        sufnc+mH9YVOH8z5VIv3PHCrrBjaO5phtTGpeGTeTgpBlpPI7sGap1IHVlIxLplYNxnKdeAE
        WKpsLnDRh4LAIvCygTWJH2zTS1WS2LdLBdbB9lwXJr1AacrELf2O6KVIs3neBGVjknK4IpEK
        hNDjDPmq/abqiKZUxGM8OJ9P7eopfl9x4vGpsO/tnd4qe9u4tLQ1vbPSeWsvtSupA9m9/ALD
        aCgZsCYCfpk0Njl4yvXf22v9yjfrNWmJKxJg6bkGBXpO8uSmtZuosJzSdMg5lZayVAnlHc8O
        o5mosuizF9DXlHRZmw6N5aqy+hY0KgAAIABJREFU0gsukO3q0Z1TvOw5HvRtY43BPA+pseY4
        qG1nrpNSjfP40K1UoPZvnAN8Hux9pzUj5hckonW7/y4NiAlAkO5WoV3SCWjEKFer91XEFKZE
        NDwh/cFcn7irzHX5whkvct7y71AMvz60Uu2lRPJ05GNLFEaavhcrIXZLMKm/qCRL6N2s40uL
        famZwuA6eS39gHDl+VZq38F25ig8jyfPoYeStcQ1trtG4LqpH6aKmqn9dzw2PUAmXreWN2q9
        8TyefH790Dh4/gklIXrXyKhjVKqusCxKjuzHnGd+DnC1XOsfMmw8xzMQR2xpv7v3Ox6LW6u0
        fmf5yIiYBIesE1N/5xiHQtc8X758aVop1Dgwy0nIQx1BpSu5YtOOR9mAmz5DSlJkMmGsrP5r
        pVMRR+JhzLGUjAGp69a4S04begl3AUoXQekZOhaJVWSLQKxMkDd1B10FViWBmgtcsrD87rPN
        r1yJHgV3xdUGGQBXdTCYCXVWgoT+TPHw6Xyx6zIqeUFJkVwUsktYmuwJfKoQ+Xj+pBQFl9dt
        p2jXSYcApoBkDtEvYZR+x61zfP1Br4rcLGhmdwa13TJYTCdV+KIg3kvksoCB1japmUjHAStN
        ypdToWB+yblWSgcnMh1b7p4SDZQMspYyqeTPzutEfDVm5ZhGTtyRiqcrVV7CAWeyiDi4aihS
        uYtZsHW5IWSRE4BwVUn0/kbf3qn1nv9/FaVRO7UYW1HiW9Co9U1uj+cXx/nJ4+vfeD5+8nj+
        SMoit7jSgFuKRCQSr0qKEhh0AQCl4raxTOMhkNI2HTwao5LWYBAxc+LpCVxVPJxzPCXwLo25
        gtZv+NI05CkMwC7xh1aH6fAcg+f5xRhK9mPNPFT0ObS60UrDrRN2ywMDWKrdSJOlborLq4zE
        +hoRUw0kl68Ondfvny6lPDxbUUCc0G+plPRc1GQFPDcu0zOW64kVwVHXM+SBvLtVY7KSLxRe
        puf6VzMdF71jFUpHCQ5C5CH7dF+2RpKXVUxrJLIuwb4Ok+VDFJNrlJ8+uH37HQNab5vsMG3L
        UXxSCFppTD+xrRHzzjH+5N4mvQNhjPGFx2Lf3/j8qRgQsws/yzapXOTJbtLWei7/msd/xe9f
        mke9uGM8M01BUYmWImshw0W3E0YtXQCDL3wtWn+TIaAIuFCeknORapfhvLcuSxqwiuxlZgJ/
        Vnaaeh44K9QFQzGWN/w8sBjse0/d5kxQR5I0o7H3DVsLt0Jn8oyTuYI1/s7XIVtdrTuTxbJO
        7Rt930RJFIPyxoq/YZy5o2k3FUhyEi4E8jqxoQkNNqAVYv5qOrcEzYgrkqNgMTM/Vp9xLVBj
        o/V3olTO45MeizXz4ErkFCR5u+gEjyXTNROPpumrkih5ZdsqvRXFnzB5HD+pJgGMgst7tiBk
        Jq4V1sz0+EsEnzWJ8mk+9LsQutXisjdmDYYJBALJ8IS8auJIyUCKXFreyi2fvRyPcZp1YR0G
        qvwsKcJBPxMaUWdObBJ0/GPlhKawCNFQeKTts+VFUHMaGSmmqEjMV7CuKbIY1O0u/Xk4heTm
        LJpyesyhtJQKBr1u8s7d/sLjOPHkbsKnfJVVJ5HnWBMRcuXnHhCu26sk8HKV2ViVeqimNYxI
        /WVoRGkpCYsYlFTAXBalatL39t4pdqfWTbuBiXLALD2D4j8DifY1wl5biH5+vBKuCjpFWarV
        TTLdM/fITDY00wPRtjRcFyl3TEoc+R0frFOAyhxP1vqJxeB8/pBisd/o242+v9H6G1u/0Vtl
        a53eNordBcZktpScH6rcKEn0XxOB8aTaoLWZe7x6XwV0XN2lAotqu7g5k2C+FvWv1k5PnKXW
        TUhwr/S6US3BkdJFR1XRO8s/wF0RLejAdZTOV6zm1NQzgSGw+CRcE8UEsQfjwH3y9fUnn18/
        WTF5nl84LiNCbVTbhHOg0DVMxceqdcgXN2/ZcokCasuRVAo2Q2kckaCbVteSQJlf1wO99/w8
        xAKUvPmk3kefXx5SXJJVMveJylhfRGY1uT950T1FfH3JnRq7enHJ7yl/FmDrbzJItBu99cyt
        elDWGrQ8WZYftHYnTALw5Y6vL257ulrKjTmglqBvO/hgHE9utzfW8dQeakjsvkxIXGif7G3P
        XdXy9PHc+dDLwkpeKnWOfuXCrAw6U2atxohKCYVab93Y+s6+Scx+8anL1QZ2KWhkQYLLx3oB
        CJiE8wqZihyNOx57ooyqhy9ly99bu2avnRJBjUqxLbGhxfPxyY8/P/jx8+98fv3gHA/MF8bI
        L3nP3WwlCHSqDyU9tkL9nliOfVcLmMTdnlSWRvDe3vFVBHKa6jBijpd0k2wVULLgJbdEO9ea
        qYwJSntjAM/jQ2Ffa7HWg7mOhNEH1ULrDtD6d0WslE7rb9T9d6Le9XLUuw7k+eDx9W+UOKVZ
        9iP50xtQsi4kc4jrrr217AJVStfhnVrsiBSjZ0CaTPmWmu2glkVt2g/1Yl4NCsEFQfHimuPF
        a1+0lkIBqkAdk/GdBBqDUCWoFUCVjqK3dKevS6zj8drFLydOsOS+evHAl5tLpcitXcEENS+h
        0EQbJ+vxiXkwjkkrSUvIbb4wbozxYNveiVic5wfvb5v2gqY09HEe9L6zVmHNT3r/zhWlcRXk
        XN5TkgLRKasRZy49pGNOjCV6JVSp7iF7UCyD0OgSBsX0UhfT+EeazA2JIsRVmexvpROR+40H
        FGSWnpmAb003axl5uyy2LTWbtlDw1oa6Q0MJ/LZJScMpoKrfcEQ9nSMyXiO0F207tRZK3TnG
        FzMWdXujF+Pt9hu+HqwYrHmyrPP1fID9ZO+LqDdKRs3Ijhi0NH9bgkJraR2wKy82bxJjKKfq
        tbqkTzcWBVXGF2Qyr1Um+efhnOdiPL9U6ZATUm97UjnKCRK6PIjljPHBbbuz9TuF8RK5+5qs
        +cnz/Mkaol98VYYfbJtQ2JdowYSItnbTujkHUW4aVmLq84lL2zohttxZNS34UgavX5WV/FK3
        +Yh8mSwnuJzVk3Yz/qHH1dL+mIcioUmv1k4pl2ZY1J8kn/VFFYVbrnk9KzCKVsQMOiAuVHmm
        aq7kq6sfpphldGiw7aq/2LZ3noNsjIfadtqt3zlT89n7lmhqvlzzpLY3vj5/sm93FlMV6OeE
        8eR2+8bXl/gycUKZ4OYHzqQ2lfmuGWBnxgyW3BWTEkh9buRtKT2rNJa1VblvLFPMsRdlwj+c
        eB6Z6B7ycWLqFzGrlJZpfSG5Ycm9RT0wV4DUFDkf2r/wAn5gFry/fVMNY9Iuve65jzlzDeb5
        hSMQJqxRiySUtUp40VZjNZHcFkHEQXBSrb/SG7Qa7TzHQXGpc8KSk331ciZoQWAZyCVIJFHP
        0rDWVSblniNf4gL262UNjDmD0hbb/s7yybYVbvHG8zj1WVmyl+FqfgspbTwOveCmWgzxjEeq
        ZHZ8BV/nJ2s+hcL3ji/5acK+Ubt2dPlxA1h5EzairRRw8DL7CwgisQhLBDn58Bzr/5EHtUzv
        MLtsYLycWlCUvnhRn8k0BL+ow6u0S4XYQokVmAbRlARpibOYVdk2V6AAQbmy1hwvEYmQZj1z
        /kq3H9l2oN281MDHqYuGxfn8E1+ySVptWO2083yCydFS+p01nNak0wVnTd1GYz2UIeuyW0Xo
        9JOOVIWx1ozKxjg/02Y19PCyku7Q8r31TT2M6d+bHsmRXegsRGQ6XxLLlqoQiRF+ueHFLzpR
        tY6XhEF7u+Xtk+M1EkMI9Q3WeOjnsTvHeGL7wjGNe4hSwmHNwbG+sHonmPT+jXE651h4psuX
        tlPsIFqjpgFBf8YgB2wCJeOdp1IGawt6fWffGuYb27YR3hlLJvDWvskcEOBLiYDLT668HR0y
        k6Ax4hKeCWjBCnNedr/cwiPwENXQNumASbdRtUGMB1fqnmUAm9lgrKkXJ0Ia4VJwD+Z58Hmq
        A8itMuKQaRvLtIVUKvXKWuojvZwfqpx40tqNUlSFqIQFGGtQq+iISce9v/ZMiws0qsSyjDCJ
        fDGznNe1ply5VqkPTQBpJUWS/Lz2H1rN7K11YSB7OrU8d+8sI85EkYJyfVeM1PNKE4ArCbIW
        Y7kuoFovFFJh3KpB4TW5YruMJq5D+Ti+aLdvNLv410ZZ/kQdJnd8SXBuphulbaoLt5KNUcDe
        draqWI8xD+57U/1DcmySXG1E0Y6GD2LpppS/M3eEopvTkjeLLHjyWK8TTbdufalk8jPV+FEK
        U9n9ieYaER1oKLFcJ3BNSRu501KU1YqJpZ1+YFb1Z5hiNqY/E/VUK1Z5jezi9+YcIvLv/8S2
        f0c+QEn3WpXaxKoUJu7GmE9VSsbk8fzJOZ6skVGVMahW6bVx29/Zb3fRIwtKfUeywqobwSdz
        TUVfJh4ZJIpr5UVP1arG8QwSQR+2biBVVWjdaG1TUr/r8+r7JrkkS+HlLkXOSid/KTsXJXau
        wNpO2d+xsnOeQ/xpbYqO6TdKuLTMvRDjiY+Tz8cfPM8/xVeXiq/J8/zkOZ45IonrLO1NQnQj
        90+1x13xrSOBH+0y5M/VcpjMF/dalYoKlmptCUhlkVjrOuxcCYK19gTf4Fcgm6MiLL3gmvgm
        zpH6AN348omqrXw5SBqoA7oV5fdaNjXo/738w4q3Ob4+VOOxvRMY/ab93NeTVquyY2rdOI+n
        7GhrSpGz9EX6GJg1juOLXg56f+M4D6JsPI8vattovlHMREtUjY5rCZTxOaXk5+q+5LUvWvJN
        vg56uQnHKaJxzDIQLD9wCetT1mUlxdCGyla7aixqYTqZBazTv1lm41SlyVnRaVyoMBalqPPE
        cu+FG9LqXvRPRkkCcx7gg2bpM2SKB6Qn+AC4DAp28b3zyJ15sG/ik5/HJ26DYzrNB2eV0kXA
        RSVs0OpdUrXkMWPp4VoxdKtGctYlqwPnxStmsFeOjJI6/sp5skzf85Wa275xI3iuoFAZ09JI
        LaSWtGhpH4Plg63tbNsby5/QnPf37yyvqNRjMedXAn4SCHgcWH1jq6YdEyVSesxsCizZVlaS
        G9bzF/Mkemc5ipONkL7bdNtfwXmlQLWsCak74TIgWIJM6lohqTgdamrnzhfPAFsSKuRLXi64
        L8hDJSWYLfGJIvpHq11jHCdte0vqSsEDXsRkrJhYNHGsa/CKBQpdENKkV2633zjPT8joWgPa
        +fzi/u13fKb4uGzM+YPe7sx1KExru+lLnYPqi775i7OcK6hjpo5UYIaVhmWCwzkexHjQd91m
        JX/pWju+BNxcyQwrFMdZreIoaLi+RAep6c2mKSMFEGQxcN6OelECycNc57JJolarEgfa5V6o
        JQOhB8bOVUy1siVMrV2NtR54dKYHe9/FzZnlOOoE0iOHB0cclJLABhVjV14QhVqC29t7EtiL
        NbWrjOU8zoN6HljZGbZha8ohEiPHfnlQWzOqa4Q/z4NajFn0M1wijLVOcCGZpb0TSwmvkXyq
        hlq5QSS7S5F5KJw8rLDdvxHRaFnkNsYhXTeunaxMzvFFSZNCAGHOmie1BaXe4OqhjYmnIKO8
        /vaM7crDg1JYy/DeEyCcGsM9KTO7guRWKs4comlkDaeVSi+/tNh+9e2SQQE0MMWlr2udydtN
        SX6WY6vn/qhPrJqxElU2FFHbcq9tdVPOFvYLWc4JTkL+FDJwrRbymzqeYg2tEW4ovG674etB
        Kak/x6Q4ms8njz//4Hj8YN925vlFLZuiG6ocJbXK9WGl4RjH44P7ds9dMV5FrWuNl+N9rRNn
        qiB2KdFtzUM3D1e3iyxhogY0MpYMvFZGqvKUhLqW/PdXvkCOhfSvlsqOS+aloWmJM7xybUz8
        mODzmlIsBZ8FVTGcScLrHRSyPNfJXItVOqUkj2UKT341hgtHfGkya/+N2r9R2xtbe1c6Yd11
        k5SaDoc32vYbrexQtW5s999ge8NzN5xr6ua+0i4yFuSVYmHJo5Yq3LY2LEdSRXdGqsb+I6W+
        awqcR952/gLrxhisGZToVNP6UltL+sPxeeJpAkjeSBI49N2O4yfH8eAc+p5re0NVIoVKw9jw
        pa6aMZ4c4yM13QKnVKALtTpumj7O8VC6Q2IZywVulmKEzdQV/Pt4mWItD7Py4sVLTlxOqOY+
        V6hL7klANYXvkW6jlfGwK1vY1FygOgq5ZZKvz9IuX5NSZl5OQoB1IcSFUiVtpEmwpBru4tYt
        JFNVRu9Ieqiw376x1qTdvt04Pk78PGjFoBZa+425HrmDqPx0DamS1hzEenI+P2m5x5XtznlO
        KuIwW+lYf0vXSGHZSbF3zA7U2iwBsyJQAkL6TX1vW35+8ntKwlUJdFhkwhTuppO+p7xrXcu4
        mpOVG+OXgj934oK/6AoTAV9cN2u5ujoU9j2nU/zEQ86JY6mmcM6D4/kHjQbbnQpEEXrcilPb
        PSNKCkTj/IK9vmkzXLKu+XjSWiHqHd/vMJ3e3mhVPSmrLNZoGeR9++W7rUK7S+1YESIYoZQC
        d6df2T6lUNqdaQP3ivWO22+09lMntPkLBKltI059FssV/mUWNKpAwnXKO0tT052F5IfeGesg
        5ikdanLJYUpCWONM/+Wk2K7/vt6pVtnLDSDBlUs7/AT/SsBXXLL1RtgXfqmn+vayebUrHOyK
        NrGZ9F0XBZcgJZF7I/IDh21Ah5i0Aitm1mkkVVWUuG/VKCtwy1sxD27t/1dUaknOX5azYovl
        ecktpRzWKPniKs4Gc5YpXfCK+dHz9qTfvrNWarMNihndCm3fd3rrHI+Djx9/8Pb+TpQnbWsQ
        g769afyLQe9v6lopneM42G9GqzeCqUgIZFi13Bm08JOFt3LRe4I9HoLBrxfoKrRRkt6gtczy
        DTRveSJ5eWLqNNOooONKe7OHRloFHYd2FCvZGpdphrnoquxn5oiiP3N5OnhMvZNb2wmDuQQy
        lWi0duP7b/+iW90nc3Q8DqY76/zJXjdqJcGbS5AuW5n7YIVkjHMNHucXLf2vqrkHCXLzpBVu
        SDNLTnRRyxDiGBJl+HS8SXxv9TIGyCIWBY7nn5i9s/w7YFgcFA6tEKXmpGFYmRm6lbxvDPDB
        GpIA9t5ecskxnWaNWm9YtWzrdn3+PlnjSalGiUrvu+grqpIhOPGpomdrAqtGfxAPy0N8R0kU
        g9YExlUuxRgYXWtMyYD1VrnqRAjyhoyk5rZUGy1aKeCeAdapV/drSSgvRZYmEGeNiRrs0Geb
        L84YmfecJnABePq71ATeUDwl4oPNqBXWEAVUbeOaAyJG7tQbZl279RWM4IMVTrOilq/9/cZ2
        33l8PPH1B+/ff6PeNqq1bFrbmOukGkTZwZwxTt7e3mVp+/rBFclPitWZJ2tFStVSE+uTVrWL
        GTL3evAaQYp1tY6HEhO0b9xypBZyJ5zSc9rXiVbtqrVfOv3CXruFhWr4Sm1J9GSgmhfxUF4F
        NJmkfrVCa0an583hmBt96/iUfK73G76+CCuMdSmnnDU+OY5TKhQ7WGtnjgcjglYmtf0HSqKz
        qv+7duEkzQs0k5vIM9f2kiRGrhUqYx55OwRz5Z3Sek4l+j3wxeA7P4+/MO0v9O1GWYUt/jvf
        23/F4pnB4AUFkEkS52tlDppukZGVfedQa1uzitUNK1MyPdL6ZxprxzjwNYRuW9bdT1FB5/nA
        QnnJ1loa1GX0F8LecKpYgbD8XJToSPawBur1ca+UkghvXgg4uTaZxlv795EpHpFhbzrjPNVH
        K1KwgMIFzC5HgPADS56+WGG6aMpwpVhGRvq0Wjg82xtcGmF1IYkyc8sUfK4MKvl6lzvS0MvU
        XorAtvP4EzwopSg0uVhlv3/j21/+meHw+PyZPaGThitaPwTISH+rG8zXJNaVaeQJgRu1marj
        XmIFEdRXx4rqBeTJjDi54k/EAda0/WxJxgNX2JkOu3TnJ3caGm3MRISzBKlbfigkPyoORrvq
        9YV5AEVATCzHXH0w3SqlBCsD1QI9xK0Wtg5mWg967uBY1jmWnbZ/p/Y7VrZ/OGyAVTHP2sZM
        WRDlcOLxENyfIVfajYv4Ostd0DqX1W15tnoBSnsUdVDSMG8RDK/87fNf+Jz/mRFvrP7OYTtf
        /Bc+/H/HzwfHUxa06acAvBQnqKXgk+P5SZAvYy3iELUBam1JQqHaZKtVggIadb/T2vfMjNL0
        NOYhx8c1X/iE5aLvPAu0gLWUUXVFqUq8U7Rvtq4AudR4Q5EajkUvK4UVyrNyV22GirpaHu+X
        A6UDNRM6cl4x/RtXy/Y1rVmatM3ItHuBRlZMqDvXQXB5WT1fOFneFCquTC2Wv4QMnlJbZXdV
        fCka1LKKRKwANIVGC4xQaekn3//5n/n8+9/4/OMPbt/euN3uivcsUPob8+uHPoS1mGdAeXC/
        f2ccHwJ1bAG7SF1bLHRCBk/tXaXh/oNfiqOSAoWlOI3XrK/FO8JZa7LVjbVGnmL692tR/pFH
        0EzStzCFVF1FTL5WwupqIPM4MNvAhmxafdNtj6ggR50nzRT6pT3E2ds7Exm1x3kmAjczXsPZ
        99+YLei7smgpO1/ziU9Z8qYffH2pqEjBzrsiUNYXz+NG98+MYsldrVXOecq9141WL5AilTIE
        pIoocNYoGmUt8AJ/Pv8PDv5XKIXx+d/41hrTfydi8bA7Fhu9PYj6xoqTMT51AJwHnnhArbu+
        H4Led2rZeZ5/EP2dFU8qJ4tguuSFFpV2u0HZMEJRo9HTafQm3XO/48sZ48GYT2wZZhutiJIp
        Kd2MmGxV2mS78nGjiH4i1UjWKZaWMss2BZ9Uu7y7RnjhslhK5yzqZMWQhxThGFcHqfZHcebn
        fCRYpCb5WjamaTdfMbVGpaJo65U6RZNRkwVAAWcV3c4r/1eTgFMiMBdg1opjdmPOg1iTuSq3
        999pI9MEJBZIO9Mw6r4zzoF9frDtd4iTXjtzLvbtnTEeWHGO+cm+vXN8fWBlJQlc8raTwkTd
        jKJTSuStmOOhpYzLw6jtBlXVE7oNJI5QXIjKm3jpWp0Ik7UorsYtCfWvXFS5ZwoRldpUMFUR
        /F7qxhonxmTNAZtezEghx1qLyYEiG+8kxZZ/VxEAlCaBAFqBymLGINbGWA+syGit8WXmLp6j
        a+hgWvNJmYrtkE1uQfknxhy0GrkiLOZ6UiJzb1Pi18pFiCvYavqZB9eTWHee/CfdPgWVBdcH
        46GBsWyFeT5oPeM+bAnztULpna3v+BWg5SPFHdovx7ypHNh2WpWTyeZi1Zoj+o0SH3gMFGET
        bNsttbAHHAeXxqy1RqvfmVPfhZmp1WCeiq5Jmk7uEa0BtXQqhTGFBAvX0HdeWZRyoxhC7NMe
        Zmk4EE6RPOmS+EJGAu2JlqPtnFefbQJH1y2Z2IXHolDzkpBRo2SdiOc/+9IlQaZxlNSeXyi5
        ceNcueLUjsVkrSfzfGpV29/1/IdHqmVEUhdyPseoW2W58fj8Q9C9y23g/uDt7Xfa/TfCds7j
        k3E+01ScLoCkqQTJV1pa06y0RBaRSMBF2EKkAOHyCCq+4nJ0CMnOONByhY4JfIr08+nPTPDB
        FPb9iw/U3iKXgrS2l/qjlZI8WMERcX/5Xc02KJtSAxK4Ii1Myu6u1JKViQx2O4l1JBWkk78Q
        L+WUM197lXyE4ikpTdGe9caiMmNxTvGwHou5nDkGx/Hk8fyE/Nz8yseJSWlBaTtjOMc8CXvT
        Q2XGfvud+fVvuP+EWFQe9K4dP9ZDQoq6UXrnfv+NXmrqlHWD97ZRSqOWq8Bq0bdOr5sAxrq4
        taJaxPiJTzl7CA30WkGOpNKELher9NII/9KDXRSavdaZ3LBS6j0zlVf6YUmcYIW+r4iLR43c
        avz1XMlDq6028+/yEFd4mX66kgyCYj/VIE6mEsIVaLCu4uuXX1ljceCsea0p9pIf8rJiNo20
        Rbe4JWIsMY7WNJU5F47HTyKC7f2fKKVQY9EiZXjqshDKNMep1LK16DcFYo/zi1YrRmPradYN
        08k6ImmFm7xygb48jtcHoZPwmYl0+mWOc+AsjI1YTvRgjlO7rFb7HDNOhTRl9g3xS4OJCZur
        puT4y3eWWuvUDl8m5xAn5lPccsTrw7aygcv43WtnDuh7Y2v3S/2pW5yFxWKrxrIm4bpPVhyM
        tYh5QDxoVmj1TmF78WkUEdYlfw9f0PPnbrWzbTI4zGH0csd5pNdQNFXktBO2sJicKzjmg43B
        bN85Anx9JAh0o7c/iPjGnE8e44H5O9hivxea/Y1bXzz9ChsrGeqmdcFxtlqZ6/m6qVd8YUjZ
        tUKVhT4/iRjKS45FsyaghYAQauxpQYxoVOsK1BakzzmfKOl9E5I6BeCVIt/o9MkYim251gAz
        pSQUm4mtCuPx3C09Q7atVHxYUlXoBU9r2lVVosT5xE6cRHqzqR6Xz7rojiaE6MqArkqLldOC
        FUV2ltawlakQPjHbxOvmeK5UwfT2FtngCCn8zvEl9V+RNHMtZxC01ppu0FZhDkrtlJmLbbrE
        S905jyelfLHvb7T9TWT7/JP9/kbtbzx//mueNIqD8CKK4PI6qhsmcCzF+zl2mvKAjvORt0yh
        tzfthx7Udpdbvya3F6EQY1KxMU98rexMvSgEgIubglIW1SrDZ0r1TkAPxXX7uoOZUMNYE/OT
        XjYKC4+NiJJWNc+TPNPuX5pYyU0c2PfvXLEazEqzVPz4ZN93PVDuuE3m6fQiyZqOpsAsw9Ms
        ZW3FJa1j4mvSame6U8sgKIwx+eCL/vab6Ikq8OKd/5tqjR80zCa1f+d+K3y7fVDmv1Li9rL+
        HY9P3Cq2K4BtjYNeHvh8UNotKQGJKmq56WVGUrZWd4rDmv4Pn2V2iSZg1+xOrdeBcOrfyQAg
        havfGEtAmYeQ2IJRimdKh/a3YjpQjKFg6rrlIerJ5+YUFuRklIkWMxJY1He81XtOOyuR9PXi
        zxVcd0lPxY0GQ9rbCIrdmWuJ3lkqHjNGTnRKD7xWrqsdUNhBgkxmSKfe8CjYOnl8/hsG1Lrr
        ZY8uX3fptDVO9vtNgvDUS0e6AAAgAElEQVTiyRnKwRAeKheOJ/v9L3g45/Fg299xP9k3mZ1L
        Gdzef2Ocf4qvMnGDYdco7Yn8plYX106GSotkmA0ou2oZLMOdqugbT3+fv3YJ2YBKvbo85DDw
        JirCQ4qmS+WBqbCJ1Hta6bjtqVoSfaOT39PmddKa54hzChmmYvz/TZ3bjhxJkp4/M/eIyCqy
        d2elXZ11o1u9/0PoISRAgARIELA73SQrM8LdzXTxW2TPRWN6OMNmV2aEu9l//I7xxHzKzbC+
        MJfXVEKgg+47277jFgSfzJjlH5apWNEjg+6NCGe1ILqiR675xVqJ8dBIycYsZYwelEXYwltj
        TqGEzXZweBwSQ3jbtZMRYIM9/hvb45+w/g+sHHy0f2Hnd6adXGuAHUQYfXMmjfP8XVPVfHGi
        kDhDnLmAvRfNlLnc7Dtbk755KTKMmBe3/WvrMkrPKTVUxEUaXOtLHGIqXMCsY3anT8glhC3m
        JfQ/5ga9vUffFYM007ibZX3MSoD3rhqKWqL0HJdFrTS7xnoftqAXnyieuSYBatz1vtXIXmmR
        EWrJLC3vnEgAkcnKky1Ff6m3tVa1VGdN86SnEOEVerZzTK6vX3z77TtmznV+sT1+w7cHcf7k
        1/MnPUMI1VqhRRurWXngDXr/5Dy/3iPjGMbz5+/sW6MfGyuNxsC2nfNS65i7IQ/jk5VUGoNh
        7BpPzIhseNtovjHmIF0/rCxAS2R2cUpCTzsrn6qfT92MomqUsQN3Q7mMuDdlJPCi1YJcMPrt
        nE9xjtJaypOzzNSIVa4SjU91uloJr00j/6wm8pgCsViG+cITWhpmF2s8Oa8vHGNzY61OxLPi
        Rzftt/7CS9yd5hJXRxnUK1nC76RAM9b4Ub8+axQu0zxenkUgjLEuxvxJb1/49b/ZHXI+ea4/
        e1pXDvAUTzfHe0rZmm58mbRvvWxlI6eKna7xU2IVWzTTZOEVrSMvi9LuxefqcKUZq6oDN+9s
        /rfuHRVmRbS6jZV6QYWW7/2DiC+89npsSBDRlnpevYuDfreUCWfI0Pcpr7TXyhTvW7K5sybi
        VAuYa22XYcFMBod2SCFVE5qauK3G2BD1442sOKIVV3ldkbUua6ctuox2aJqKk8fnd24Z6Mfn
        PzHmF+fP3yGNbdvpaa26LFMIk+t/mOoGh3zJq22NWLKvfV0viEXbSl61bTxfT6F8lUeklcNR
        dtGupd0mma1OKXWHxJrM+eLj8y9kVdgpvDhp/oFKmm47klA8iesVUBW3u56SAaKFXaNUYiFh
        /YpRViN5/lYFp7mldhzrrLhN5Upztap00AQVGBfqeHGcxeb6PbcONGxqk4lkppwvBQkLck+T
        kioVZhXTYT25y46Ji5mJ8YFVLGnkRCnnFf1RaLkjs3czRcWMubhacs1RXKdMAGmNRuD5ZK0v
        zEs2FwmusmIVaSkixazL+xlKe7RU+7f+zPpRWyW8h5OtFV3w1IPfPknruE3IUeqch+TGKdBv
        3z9r/YGM0sG60xCoJOqt423RMmndWaHRNQHzHbNgo5PrlLupTA/G3Sq389bzlh72FtRHWPGY
        Ms67byxffyNmoIAoBcth9ZylisNsznrGJVGMCvpWWMCkhE0KH4uhXbYS763ATAX9VYh4S8wP
        9v6d1+sn1/jieHxX7cv1ont/0I8HseTKj/GTfTv0wrYP+RjXl2xSaWxd3N7XNeHrJ4+H+LZG
        MEpdYbU0C5RRqp/Qtl47h+r05MNUDozZQcQX3b4xdXXQHDIu/kxQvxPaFmvB5gcjgzSIulGC
        yl0tqJ1sdXp6jcZCbGMO2jsZv1IaaqiNW0Bx7zRtKQSajtsFqKM054u0nbSNvn9j3z9pWct/
        OuTOMzboUyl5cUmcsC6ucGbuXNcv1vjC/fPPtHn7UC+qNa7Ry2wwUBZrjYdeD0kOWj/wOyd3
        TNEG/e6OUQKGOnV23A8JJVhsmysdcBiquxxk6IGPNcVd1/F3myioYLLWPzFXg9r1+hf9Wa34
        ZqtmskDm8z0KcdeDO8cTx5mFL8QazHEy1oXT5cssjXZrgc0puaElgRQ+XukbMwY738ErmNwV
        G5vZWQvMdXh7USE6M11G9CarYxbNJQCxIjdvtVGChBAKt85qKnC/DSJl3qbXJXLLXlXjOIv3
        FwdbNFw1L8SatO4cj984r19c4yeRF8fHN7b9KCFPo684SR7SS5rT9++s65e8gDZ5fHzDHcbr
        p2iE44PDH6yHPuDX64vHQ278zKmxJpIsgU8sORluNcVcGkV7X4z5pPWPtyxwxV0PqNs29NHQ
        KwHcs5MoZDhsYT7xpYyZiEazlPrJRXu8VUAolkXotBIK9BIPeutvKJzbMMDdASLqZ84pW127
        asS8qxiVcGjTtLvFwC1Y81k7IZI0+obFrOIpUTsrpSBq2wfb3vl4HPS+Ma/BGRus633ak/dO
        pYOqm7Nck8aamhRa+8QyKjf2UQ9buUai3PLpNZYC7aAZXOseK2WoXmNwIbpkzUFgWNFWi2Rz
        px8P1nII027aO3vfuUI/Ew5O5+fzSTLpS6vHYHJaY8wvyGDbvgGb/rsb2bbq2tkJNlqoiEnh
        6jJvWCnadFM1iSFMOyr1s8kf/OAuEo6095ir/5w6lO8VJ2V9fHtLs1IerBftI+15a3pZycS3
        nTm+6H1jLYWsWYGdrtulvKNe3A/cOb2RUmxZO5gYv55/pbedbTsk6thUCmZNLrPu9sDTGfOp
        B7vt0IzmDyJUo2BmbB+fkDDGC28bnWQ7vvN8Pvk6X3/zsE9xVyF3wt2q7a5kcunrJ3O89HC4
        zL/KtInS8lZgtu/KOGIpXtI3qTFM6ii1cw+6dYUzaxlDFetSiCyvPJo6CCwXze/d0usUTJ3A
        uaEm6RpvraO82y7Lle+QL9T+9sBb7c+mIO/rekJLcL381ox5PhUchuMpgtvd2PrGtWRI7y3p
        Bp2NcGmVx/ghcUcW7WNeDo2rbgZVYIQJhOh+Yr7h2XGLtyrLcM71q073kzl3woKIp8qaTIdk
        roFFyB63SiRgirJUJ8sGoVYBlhDRRC/Kvn3CGsTaWE2mhXP8VQ/q9kG2LmO3KYdp90/u9uyM
        pWjWvlGiPK6p8XKhA/geF6MOOqHet2il4jGzQV6iR8rB48ZbiCBu/nZJUWM1b723/OTS0Xrp
        fN0VG7b1B2uahPxREs3Un9u9s0q6GUx9/qiYSeKgZGteB8UdYq6dnJzs+47zqHE96ufLN9BU
        wh4JfwMXYrYmK5JryaWQZkK4mq7ztXSbiAJZbMcu8n2NWrwpGP72gWZJ/UTBWIFUc54cxzeC
        ihnJ2/5TiqUSOt8RGbqB7j0ttStgGiNqcdRtKNWOgItbjSLk0UqxMjNIuwT/e/17lrmYck+k
        idcyP8jYS3csq9nWP9j7VhB+Y0YItOjf6mb8KOF8q+IjvdDmXdzYXIyhsX+l1EYRMMeLXNp7
        b3FG1u4s8Eu0Tiv9qBLuN9FaIURU6fHbW78751XfGW+KaEbI6RIa76gR1b0RLO1d7YH3B/v+
        Wx2m1RSGMa6feN1cuYLr9YOxBplPYv4i1lM7HIZCwQSULAS2rHUS66WfjTsXSPNThtX0pbzl
        3vd3JM/i1n2PQu3trSJqLqWaphsFlWsqKpzo3gfLK8qtfCtduRi9W2Sj6UL4QR0QOSEUTbrW
        q3ZL3QtR0aSZtwWw9thqvBc+Y4XLGLjcMqS8zXdixm1/c5IYJ9f1VBvbHVG41mTbP5nr0s62
        kpWStLX+CeNFP3ZWXMz5UoRFJHs78P07P79+ENcL98XqXmOreL+VC94AhYTWKlIVHaHKOQFX
        IsJlek3uXcGYxYHeiK/m8VutJLEEBjlLG3RXuJu/ZViSb2XdMPoiZRGrW7/E2GYuudq2EVHA
        VRf45XWQjUvKmDDt070tmh+4D9wXFq4bn4tmQje3/ZPH0YnWWaG+0OFGrsmYt/TsRqkFaLid
        zKXAaIGJQesHceowuicEkFBj20SEZ6Y6XNYJdyBXKof3DtcmAtalPTeVdk/Ath34pmdAHkpE
        V+nxEVPFBWvDc9L6h5Rh9bKzklztrRCLmkKSxkrZ4MY45UBqpSJLEw7RTJzmkpqrt52thBLX
        HPVVq8oiIt9IM22DkINpc2PMBewlZgm1BrjYCN4MRtaNrrVGXKnWC72YdutdtLpl1JSlaRCm
        uH2TAmlNmRDutj9Z2bT36Ym7aO1bXXCNtMkag237wDdjzl/SeRs1vTxq997/VPybd+lZ65Rc
        aZg9mAHndUE7wB58HH9P8y4J13jSmdJ65g0YSZUjZ0ur5bxxXkIhzTrNH6QLdhaaK61lMmgO
        mzfVtLeiOe6Yb5TeIO3uLEdOYyVENMiO2VEP++1rvTtCDfdDH5Q9ZM5NSmOiG1dKlnx7/iDI
        qvXLmFA83Tku5hoETS3ja8q6li8yTrzZW4VjpgiXOxlC6F71qJrT+wf7/p3j+M7WP2h+QDRy
        Xoz1Es1k4td6nbbt7XyREsb9qI5SobJzyryuhwMh6RONq9Umt9ZA+VDCs1cO9uNB31WhYYWG
        K/9pL6YbrFf6hTe2/YOPx3dJGt049odGvzXYjk8ShUBbe5SLprO1nePxd/LbZgjP0JMiU4Or
        GDmyseIS6EQJBEyGiozbfUXJDCXthHhrhGOdpZWWo8iqLaFXl4tS76WX5U5LMB1Ed8uZWwWZ
        s8BmofTBXIvy8+HNakXTZXf39q6lvKcVqgXNCLUeovpNS5San8G6/sBzchzf8H6Ui0rPbMeS
        mGpJuzthMhLLxC3Yto2xhhrCAtY4afuukxudlud4EivY9kMvJJLLdWqBtqNeqkBdpLePr7G1
        B71/sOav0rcerBU0D+b4InPR+rdSCXnN+qtaqe4Tdbz3EW9lddMwKDTPyo/ouqHP8ULyMAEN
        +mI2FJG5SjDx4lrSwmZeOMcbROmb/rlasHt5BJ9CWpGZYMaLQNyg5GUVLh1VfmsJOGuc7MdG
        r7oOoYGDtKuEDVZo6V29GKxV7WAJWHJsynUa82SOC4WXBaq1vJvrqIf4Jv6LH0a0iM6/oZe6
        BB2ZF97+ImF/ZVd1VyUHIWGFaLhBL5HKGk+u6xfmSn2Y11Vj6Kv8qx9Y2wiuAvGaWtPGF8tg
        lqc4EKeqG8VZY3A3GcD+rlfEvPjLGivLedLbh/7exLGHV2hs6pBUqbNVh+vx3l3dU9TSLUE1
        KzBLIgszF4UTCOxKygNd+cdpen+8gMlt55oIrCtah/YJczLmk3n9YN939v2Duy5jZq0yrt/j
        c4RGXGCeL0HM6/VOkpvjyfX8Hbfkur6AxRiC569ZKeNq22W9vmCJ2JUKJLmNrHOctNa1oFPq
        mZxkKlJFdqh7qW5Q0ZG6hSuU2NCHVUJ9PXj3PKJvIMvsfUeQCjqfeBUQS3Bfe6uFXBwW778k
        4KcSFLXou2WVPEE3Z/OdffugdxH+VrJHTeDBOE+ucTHX5I6gVJJix8rudLdsUeZ3Ugcjaczr
        5Dr/YGZCVi9Kr+we3yQCaQ+9uDFZ86m/MhlLdEnU96Ax7YaGrV42SQdvsbs+pYDW36Nz6KrU
        v3/q86sEX9LFv+o2lvvouspkMStupW/Fsxoxv2Auco2qWBQHf2ciwyqgqAwWlXKYU4dBs3jv
        4WspH7nddNKdrwxCwl1+4d5CWVFh5ecslL9+WstW3OedrXBXU+izI7ZSM5XbyewNxKlESrGc
        unH1M7h/gqslHuvM8oX6vfeaUH1hGZXisB24K00xcjFilHR2cHuofc7Ftn/U8qvbLi3xbYO2
        c55KWVhrcl1fJM4cX6yo6A07BJygxfnty0xRKAGyYaVKmDKmNJhFqGdhepA6HWNwk746yVZ1
        hnj5Xks1hIy2d72cwg3uuBWZgP0ez4yKi6Tg9Mrgrd/Hkqb3nfGaf1ZmSNUkoGuVf1TNc0u6
        3gr1Mjb9aWZ4O3Q6+6aXIKTbnXPUg5sQWbrSTcjonMzrlAwuxTlu/RCVgtwcKgOajOsnYzy5
        xpde6kgyG82PyhhWTq+3jrcDb3LsGLeZoEqHXXUb3pzbPK91575VtMs6pSQxPeLb9k09rbie
        izmKUpIgPjLw7ZBCKBfX6wfX+dcCyPT99f1bjdQaRettFZDXJIS31uu7vq/AVSKUEmMwuV+X
        GSkDQmrnzhT1cQsNIo259LLpJdLnOguvmFO5wfMuxCYFMlWBs0q8FCau2/p8j+tusCJoTcdb
        1Cpm7qpeLNwg8+ZUywSSWk3WCtbSBBBLq0dMjc2ZQTdLev/gPH/Qt732lEbfD33Zr8Xj4+94
        vX7Qtwdk7c0VDDXWxZ/5uXpB73LfrJKiuRb79llnmT681pyxhP7dRcJXaW4zTeqSyJrLe0Hu
        0sFmfZmBJI3UeG62CBa9mq/Ml349wcrx4P0vKNj4F7c3c+WfgE0s5dle4yX0bf97JfC2Tcog
        LiKCNQ+FsvkBce/JyTX+YPet6BuXhWm9kLtiMi7tUb19x/o3AOYa9FA9x8rEuwnN1FUioUJo
        4lEQV1nUTHFI+/69djahrWspn6n3gyzOWRpl5RndvKEiphwJ5eebdhGLVzlShdBTL7hOjBPm
        WQfiwmynebAo5VJv/PbbvyIvcYxt2/D+jbVe9C3Z+cbWJeTINbG+Axo1Z2TpcyHjUhNfQuSF
        olIEwNwN7gtY5mSeckJFjbjN6bmYOdlcBuxIuY3metb6IDRZCYFJ8zsuVjGzK6x6gAo8rEP4
        lj2KQah9FJN6LcFQJrObVrd3bG1AupVvuGMI6BvjlwrOqECy/ZOg4+x4l0FDN1plAN115p6d
        MRURovG1ojrn+b6BrnES817eZRifQ7QMbWABmz/IdXE7YOz+IMxr53HOKf2oCpgEjIgamhJw
        p5BYAeS3/UkPVcudlZKLrVJ0uBVSSUWolMVIpvQQAFC60u4H3hrBJ8kvAT0l35Pe0mn+0K9V
        UJhiPSj72ypn/qiR54MRF74WV/yhk7UZbVlphk2AmTnj+kWWAus8fxFx0voH1/glven2Hfyu
        l9SNr5DqytSt0X8V5bFv3xhDcsT9eNTeu4roh4Z2W4FNXsqdGgBb04thyPVSt6KbUinuNvE1
        L86YzHmJPojOmL+YlNoMJfH3TF5Ar7B1K/CJ1XiN34Vw55R6h4t9M3r/oK1krV9EDFa4vqtc
        Mm3XKqPnL7HseE4xCshsnjy1TlSaRkYiK1gj15/qtTtCB5soclRcvn6I2imzDiyTaVwVnZVC
        72WVREkRWYg6qclx0mp0nhKpzKF/jonScVOYeTY9T801lbSm1vRbl96a03s/dPq5fI1rvXhs
        H0QE4/zFx+ODcT1x37iuF+bJvh24d52EKUvPOJ+4OXMNjvZdp33qxb+u2rswIl7KiSkkUqeW
        oPBcOqmsycImZUiSNVL6+zTTeEmWy2Gp+EeC+FajZHFe94duAkmE6FV/h0U9yI0VP/X7Pcvz
        qLKhETUvl0bTMeYsM7MDBDNHRYsYj/0DKgxtvHQbb/0Da0vqrQysNa4VWF5EJMtnVUP8Heaw
        9W9kvvCu0/5OtSCdre/s+zeer59vuWDvqrKPHHjfcNtrVNWuJiOzaCVMjdZEsvDay6JCwikg
        xMkcCp1bRXOVlneljADYAZ51KynpwrJBqLR3jC9WdubQ5+tbYw20pyd8vX7UaHiQTeYK6bVl
        9D/6o4TtptUIY+sfvOaTsQxsZ++TpOGrLJGp7OB7lfGScUZNXjlhVkOcbmSTKd9RF6xVxYXd
        ijKKmy+Unl2TWlfRMFYh2jnorhv6DnGPlCHive9bOYEScnmJewbH8ReuU122kUHvTZOXH1Iv
        dXAiOa8fkMa4FIC8GFznHzjJnEPh0Kt6GNMqdlNf9NbVrZIRzCHex1eBKCGPgNWpNStQWiBL
        stZ67yNWdejULriiCopoGhkw1rw0ZuvzKyAIRCPk+9eVOCdxdYRGQ6veyJgnXjtkpKEqPEh0
        q2Qo4V5j4CQotU5oNFJqg74EAS/tLSDoFoVgSoBhd4+NG1t3pR24C6wC0QLN6P07x/6N4+M3
        tk2ZtM0dtyXofk0iLmlfXcmEyjy+99Vg7x8K7+o7vUs6qdTDXQW5rdFtlxytfg4lJ1itMPYu
        eZ7zJ3P8kp52CvGNUCVkLytc1AEgAEvqppiDuX5JTN9U1zCndsU51WOjqNWyvRV4s8IYM3i+
        fjKvZz04jVyjDkPt1isrxjRPoaUJd5NCLuVImSvVvpdNMkI0n3AOof5qROv1rOiwvQ9v9710
        0XdQ3f37Kibm/YLrRPNWqrXizwUwCcl315KTphxoiyhDgdWOPJnXq1ZETQtyS5YhfSkxsodB
        t12ACbzr8DIW+/7JGC/xXWvWrbDhvfE6f1JHjAAac4xJnIu4JrkrvMoqEmOOgdmsh0V7klDL
        g5yKG2kKQCowQT48Efz5RgG1j96t1RrVLG9hRIG8SLCgOVEyvC5bvxIFUjk2wkrum+Jetqsu
        fUpV1bIRLrTZXJ2aW/VyunViyou4xhcQvEaoeLj9BvFJs98lP4t149fkCCx1+BhG35196zVi
        Du6gqjV+6mBaUXWKtxyStyiB1CRxXn+lu2SE5o2tP8h0uj+YOYk4SYN5PbXHRdaDWRWDdeA1
        dHtj4qgj7+JdrRLmTsSrbhjjmk/g1E2+hI73+uuKL7w9dJPloFkQw4gpAr8ZnKO8xt7wBWFN
        6X7rZFV7mbKDtFJ1L1G4o0krys2aVub/cu/4AxiQ+1uH29qqn7sReZGpkDBbQquFJGvMtzqo
        AVFA86RtWyUxqHgs1m1yT3qXCAeSNBhrcfSqdDHVqEhaqYlvpbKbzvElXtycVjLTu39nksRK
        +ri+6L7XPFw+t3Gy7x/MpUDsiAIvWPTtuxz4ONvxyby+wKa4Qz84n4u5TjZ+AzvBmhQdsWjH
        Q3uCGVLLjHpZpEtdppQF+oFc+R0FXq9CGHUC3Vxfhuvl5E5tmG8RtKifO09JN7033Z4ZEudr
        WFXqgfyrRnOFfQVXAQbKMEozNt9wU3VjrsXiZMaJQqSdvu3AYBW6HEVXuMGYwc/n71hcmB9M
        Dokmtk1yX4zz/INrTQaTcf2g2R32PDH7LFBEUrnwKvPpO8ZFbxvNG803oblth6i40bFql01Z
        4f5WDmlojJv6LoiL1h8oGG4n5+Q2LltI4ikUXqNjMx3mGQOzoNnG1+uH3D1s752vNSenEZb0
        4x/YN5c8cOiGb6YMYu+HRkV3cmTxlXoR3SArbjOKrtHkJTwja+dWcAFsXQqntWSQ0IMx6PuD
        1xD3u1awXKFud1Gz37yAifHorZfDa6JmBVVQrgy6f9SfKWO+kHL9O66Ydew1+WiZNFeqQ6bR
        u/Tu3pzk0Jo0k9bvfl51DDlRmtCUkHxU8njaDYs7hsaSbfsgUl0wvW2K22gNswfQaN34/P5g
        1u5qaTQarT20TM8hgXwOdTuW2OGOsBCF4/VC3rm5IUM0lPH4DnaqUeMGEvTIcvsdDCGVUUmC
        yDyqHaq4WmtZo0sv3nUWJ2t1K28En9pe1lkmgAXxxHKSqMTpjuFQuVQBTciofXPN7vr82B5E
        q5zVDNaCcQ1+ff3O6/zFQghlLmOFK9kB3sDd+4Bi3MM9ucRt731j33b2ttNKe3wLxY1G2gd7
        f7C3B3vb2DblL3lrkjqOgdkuPCDudb7SMeJizC/GuqTtrcNr6xI3RMgedo2TzGCy1Uj4wvKX
        7IqVfLB3x6LKmPLEcsghRDDnk5g3OBSKu6xRNmNKW74GCmG3N62W3HRLBZxGEjHonkWfVKgZ
        Tbdn+ptmE7gkRVBaJWYiRNzS6ukqrbjFG+1V3u58XwKtS9yjVa9udBPCf4NeVqF3Y740cRUF
        1Dbd5qoQqcfVtYp1s+Lg7jFyfNE+P1jXpG0P5rjkcoilesR7hvZGzKcW5vGSRKwfnNeLcb1o
        bgISCFrvXK8nn5/f9Ie3DeOg30mBmcyh2gNrvXo9hWJmDOUSxf1ElgD+jn67090LRPqziCnf
        yhhzjcbNOp5J5rMOg17qJEqeKFNB72otTxKLC7piWKQ6M3FpGaR90xdpL7o/2PquD7w9eK2F
        NWirEVVt5waP/YOVO69LNySlTppTifRmyRhfMkH73bcpY/cK+WLnVKZwskiLUl81thsGrrrE
        FWV29ob3f0t7/Bvs9T8xD+l1u8asGRvmk72J0qkFBidZ8WKtJXlimgC+98sBxuAWkSiB4MHK
        k0c/xCHGVMjz4x4NJ/P1xZg/5EvNLkvctinBwhSLMuZP8A91scaQWigSrLNmlJzQ3xMX8dTx
        XPy7WZTLSQvQXIN92/G4DeL69YYO8lVhBEQVgpluVh3i8/0MCcSSqIH8k+fPJXBURoeiw/JO
        elhs/pAqqb7RMQZb10S64qKX71ct4QhoIhnzSfe26WXb5VLfto2WO+lDELeHAqm3o0CKSxlH
        SyfIKjF478XBhQjrWOOtttl35/ylGvfmO1t/cF4LeDKHBAiRgbXtPvuF7FFwtZc/teRwDqXc
        qEjF1HbqpX5eVBpcfRF2x4LWXqs6RI2heijqw8RqXxGo0nx7K6dWLOXTSl2IZTDiheWi987W
        HEladfuTH2T+RIHMk/P1KqO6l7PmgTGZ6xfdvQALx1pjy0/kWy3u2SRxXNU4DeqWuRvPe4Ng
        McYXZGpqSd0+zQ/oG/340HRgv9H9idVKQHtwd8bMkltmcYprDdFsZbnyirLUza48X+UiK3me
        /qnJav6h8dF1wwYba6h0N+LFKHM2tonaMZU3KV95g7VY0YRXMIkYb9Bna1tNOdWYYKsozFK+
        p/5eOly4kxBkkbzzntf7JhT+6TRzTQgpNFpv3s0u7GxtJ5h0r3wnL/AthdyK3/zOeH3hXa0Q
        WeqkFTKJW0hHrs/zD+6w7TWfMnOZC795f831/Y75pb5F31njxXEcrJi0TRXpgvmnynkvjVje
        uurUfavIR8Pbznn+ItdinMk8B+1xoPAio/lBxlKi/Rxc51P/Js0kNr9h89pBViBHwd9Ist5i
        55KzqZdDp1rmrASWGkoAAAdtSURBVIC24resoSQHK2VNMEPQuiNJYbY/9wZ9wYHnLGBgVRqB
        y2uZUWHeyUgkIWz1kCAYfk5J55ZNWAfX8/+QId/scaihbpTiaMWLNV8S7xdw4L6pYyUGGVLN
        tEIbW/8kK3xcOb5GzptiuWCdamgLZzBp7YPenG0/iPzgin/Fj1//yFr/ic4Pdv4XjP+Ob0++
        ff8L7snrNXi0j7pRgjGfjKkR2CrV39ohX2ff6Z58eygp7yufBcEJgFupW8psqqsmT0gxBMfH
        X8g4hdhz1jiuhgLvqqEft/46jG1TCkSLi7Y/Cvm96Juem94aJ3eA2CxVUUDlP3tz7sYDvDyl
        pnpPa44t3Yfmd5uZAtfNbrkCQtKXyr2wIOLPuFKrfThSN643pZgogsdQiXLgbKxbVGMKIrBa
        Lde8MN+Jpf9v6wfYgrbRDWj7dzJUuqNR86UxjkWG1QILa51s+ydjXmDBOQbdjLYdSny/VDMP
        xvXzF799fjCX5iLbnOt60XbDu0ajbTvqhXJyXeV4ub1AhaqtspNlglV79hoaje3g7u2UOkl7
        aWYWYq0TzNFoHEsPucbEu8tUNEq+wSV0OqYT5YgQEKUmrm37EMRuktA58Qa/7naySJjxfxUN
        YgePttF6gzVpm1IHYkSJSHTgbFa9J1RoctsFUiTQxUO2fNG3gzUFkI156cboiZ2vmhoOHr3y
        guOkeedfnv+Rv87/wpWPulX+gca/57fW6Pk/6EORMtf8Qb8WsZKxLnAVdiWqrejWObYPvaQ1
        mr+ef6V5EtPAK5Q6VVU5J+9QbH2KegC3VjGllTmcgLUuBHVJZZVWGb53NhAug8K8sHWKvuAD
        Qj5mTFaClYlnE6aBkfmqmzGIvGjtk+s62T0VAl/SR1CxNfHSc4WEN0Jxz7KwFX+fTwwlNpon
        +74z551wv4sWzboNq+5C2EgX/XUt1utk//gk5knvh6x07XiHF0g8EgUuVSHtikHrn4zrwn0n
        1qpA53KazKiHUHa0Zpu4vKZipXFdbwqkf3SuU8VEq2os9v3QnuifuOul700KHH9zmFFUSmAh
        Z4UneKoPJG800krb6UWhuGoeMI2BtxsiyiR+m5VlhPkzVtRqsUp37t3cvFcWUMP8gbGBlc61
        P+TYCHk0g/2tIDGn6JKpFw+Zplt/0PvG1j84tg/2/gn2YMZg5hN8lXf1IcuWUeqvrSaN6lOV
        sLhG9njvhPfJ75//gOH0DbZm9CbA4cfz3/H/vv4Dr+Ec/QS/Ci/8JI7/SrdPWatCWcPXHIxc
        4jk9KzZVCKUZrPlkDNVERCzSdlZFj8pWVrrrANVT6AUz71j/JK2x4tRNmgOrVIu1EnLjWmpC
        EDBUVFqZLJKNa/7kDrVWCoUVqBbchWLW7tTLUIVIHfpKILy5dU1uMrsksS4BmkuGPCVUvOX4
        4jxjEvHU912BZ9KQL7xJe97aLv62PTQ+o1wwQzm6Yy2u55M1L7BV69ymz8hQ2iALtwUmTKHv
        2wdrjnfSX84JBZysMNEy5lzXr7KiCcWUEFu3XYaECrWs4JhO43FBc5qJugi7jczl1sexcrto
        TBI6pmQEVQNSf4ZVT01vByu1ud7AkbpC4FZ6WM4ay/5m1DBjhUAnL47UyrZvq3omnQqW1meh
        bTvqBNW221rHURq9jYPIJ05jzgl5qdy2Hazcaf6kWaNvjd7KBpWGu3bq3j/pJI/HJ70/5D8t
        PrZbY9ogbwGDrXrWbi5OWuUsL6kzsOZsvZNzEuOLKzb++fWPXLNj7STH/6T3f83MfyTSWfZN
        Aczxs7yqgFf1oIAC3TImEkQI8Q425cQx42M/am97MkvJFEsRmN0Olm8sBtZ/Y5HkTGY2tgS7
        M5CL0hO66u9bbN39OatMDVaYR00rd3mVvMs7YwWZqi7RmKqdTqFfAcWRY/YWmd6+mFt5Va2u
        GEbznWTo/1l03O1z/bOxT0/x1h5iRqxzpeo9V1YsbPumVEm096/1xd4bMU/RXCnjxViv9yWj
        ginhNd1dsPmxHRUMtr0BCiOwdjDmWbGDxhwvNu9MXqIZfOM8ZWHTtKmXdnVnXC+24xvWJFxv
        rWNMRWdQebh10gL8aUnb62Gslzd1S2pP2OsKuWvmSuubUX5Rg7xwHqTv5JKkrrXOWg3zl3Jk
        /Nb0Bmupns91X5RY3yHK87gU+N17K9mf/IQvP3EaORfRpCUNbzSDZoOsXbghEEwyMoi1CcWz
        B70F+75pv54yCOS6CFc8zYrFVoVRfjuDEhpNFihcEstrskyTyxo/CJxzfvJ1NtYc2Jr8h//8
        b/jnHydfv77YNsN60Lt23wxTy/v+GzkmzY1sN/ooPbO1nePxKYCqPegmEA5TMl7YBhWb0/qh
        8iRbXGOAaW0aEbTiEDfXCEkdstZUzBU1gV1r0k0GueYbR3c4N10iPpkseiTmowLOlSG1bZ21
        osQsmxD+0IpDTUt3YHa+o3Jk+JbORi9wMCWfzEmzMnlnaMI0iTAs7pt0L1GIAr7NNdoqTEX5
        zpFGjKk0C0/WqUmj7x/0iofpfeccf5Q+WD/T/wf9fa6XIxZoQAAAAABJRU5ErkJggg==
      </shape>
    </shapes>
  </external>
</workbook>
